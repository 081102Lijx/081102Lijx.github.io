[{"title":"Git命令行学习与总结","url":"/2025/04/05/Git%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%80%BB%E7%BB%93/","content":"<p>因为网站托管使用已久，所以使用借助GitHub做代码版本控制不需要太多前期准备工作，配置好vscode、GitHub的repository以及和GitHub账号连接的Git即可。</p>\n<h1 id=\"推送步骤\"><a class=\"markdownIt-Anchor\" href=\"#推送步骤\"></a> 推送步骤</h1>\n<p>在ssh连接成功后，即可开始配置repository，具体步骤如下。</p>\n<p><strong>初始化本地Git仓库</strong></p>\n<ul>\n<li>\n<p>进入项目目录</p>\n<p>在vscode终端中进入项目目录中：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> &lt;项目目录路径&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>初始化Git仓库</p>\n<p>如果项目目录还没有被Git管理，运行以下命令初始化：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加远程仓库</p>\n<p>在Github上创建一个新的仓库：</p>\n<p>1.登录到GitHub</p>\n<p>2.点击右上角的+，选择<strong>New repository</strong></p>\n<p>3.填写仓库名称和其他信息，点击<strong>Create repository</strong></p>\n<p>复制仓库的SSH URL，例如：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git@github.<span class=\"keyword\">com</span>:username/repository.git</span><br></pre></td></tr></table></figure>\n<p>将远程仓库添加到本地仓库（终端输入）：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">add</span> origin git@github.<span class=\"keyword\">com</span>:username/repository.git</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>添加文件并提交到本地仓库</strong></p>\n<ul>\n<li>\n<p>添加文件到暂存区</p>\n<p>可以选择将所有文件都添加到暂存区，或者将特定文件添加到暂存区：</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">add</span> . //添加所有文件</span><br><span class=\"line\">git <span class=\"built_in\">add</span> &lt;文件名称&gt; //添加特定文件</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>提交文件到本地仓库</p>\n<p>提交文件并添加提交信息</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit -<span class=\"keyword\">m</span> <span class=\"string\">&quot;初始提交&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>推送代码到GitHub远程仓库</strong></p>\n<ul>\n<li>\n<p>推送到远程仓库</p>\n<p>将代码推送到远程仓库的主分支（main或master）</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push -<span class=\"keyword\">u</span> origin main</span><br><span class=\"line\">git push origin main --force //强制推送</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>验证推送结果</strong></p>\n<p>打开GitHub进入仓库页面，检查代码是否已经成功推送。</p>\n<p><strong>注意</strong>：在将文件添加到暂存区后，GitHub的仓库中是无法查看文件的。提交过程代码有三个存放位置，暂存区-&gt;本地仓库-&gt;远程仓库，只有推送至远程仓库成功后才能看到代码文件。</p>\n<h1 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\"></a> 常用命令</h1>\n<ul>\n<li>\n<p>如果想从暂存区移除文件但保留在工作区中，使用</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git restore --staged &lt;文件名&gt; //移除指定文件</span><br><span class=\"line\">git restore --staged . //移除所有文件</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset &lt;文件名&gt;</span><br><span class=\"line\">git reset </span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>如果想从暂存区和工作区中同时删除文件，使用</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rm &lt;文件名&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>查看暂存区状态，使用</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将GitHub代码克隆到本地</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone &lt;ssh URL&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","tags":["代码学习"]},{"title":"Linux学习","url":"/2024/04/14/Linux%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"前言怎么就想着要学linux\"><a class=\"markdownIt-Anchor\" href=\"#前言怎么就想着要学linux\"></a> 前言：怎么就想着要学Linux？</h1>\n"},{"title":"Grokking Algorithms","url":"/2024/09/26/Grokking-Algorithms/","content":"<h2 id=\"快速排序\"><a class=\"markdownIt-Anchor\" href=\"#快速排序\"></a> 快速排序</h2>\n<p>基本思想：将数组分解直至满足基线条件，使用递归调用排序</p>\n<details>\n<summary>快速排序</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">quicksort</span>(<span class=\"params\">array</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(array) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> array</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\tpivot = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\tless = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i &lt;= pivot] <span class=\"comment\">#由所有小于基准值的元素组成</span></span><br><span class=\"line\">\t\tgreater = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i &gt; pivot]</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> quicksort(less) + [pivot] + quicksort(greater)</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"散列表哈希表\"><a class=\"markdownIt-Anchor\" href=\"#散列表哈希表\"></a> 散列表（哈希表）</h2>\n<p>散列函数可以“将输入映射到数字”。</p>\n<h3 id=\"应用案例\"><a class=\"markdownIt-Anchor\" href=\"#应用案例\"></a> 应用案例</h3>\n<ul>\n<li>用于“大海捞针”式的寻找。例如在访问网站时，计算机需要将网页地址转换为IP地址，即将网址映射到IP地址。该过程被称为DNS解析，可以应用哈希表实现。</li>\n<li>防止重复。利用哈希表映射寻找表内内容是否出现了重复。</li>\n</ul>\n<details>\n<summary>哈希表(避免重复）</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">voted = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_voter</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> voted.get(name):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;kick them out!&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        voted[name] = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;let them vote!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;tom&quot;</span>)</span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;mike&quot;</span>)</span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;tom&quot;</span>)</span><br></pre></td></tr></table></figure>\n</details>\n<ul>\n<li>将散列表用于缓存。例如cache存储，内存，外存和页表。</li>\n</ul>\n<details>\n<summary>哈希表（缓存）</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cache = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_page</span>(<span class=\"params\">url</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cache.get(url):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cache[url]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        data = get_data_from_server(url)</span><br><span class=\"line\">        cache[url] = data</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"冲突的解决和哈希表的性能\"><a class=\"markdownIt-Anchor\" href=\"#冲突的解决和哈希表的性能\"></a> 冲突的解决和哈希表的性能</h3>\n<p>哈希表的平均性能为O(1)，单数冲突的产生会导致哈希表的性能在最糟糕的情况下都为O(n)，即比很多线性表都要慢，因此需要避免冲突。一般解决办法式有较低的填装因子和良好的散列函数。</p>\n<h4 id=\"填装因子\"><a class=\"markdownIt-Anchor\" href=\"#填装因子\"></a> 填装因子</h4>\n<p>当填装因子大于0.7，就需要调整列表的长度。</p>\n<h4 id=\"良好的散列函数\"><a class=\"markdownIt-Anchor\" href=\"#良好的散列函数\"></a> 良好的散列函数</h4>\n<p>良好的散列函数让数组中的值呈均匀分布。</p>\n<h2 id=\"广度优先搜索\"><a class=\"markdownIt-Anchor\" href=\"#广度优先搜索\"></a> 广度优先搜索</h2>\n<h3 id=\"图\"><a class=\"markdownIt-Anchor\" href=\"#图\"></a> 图</h3>\n<p>图可以用于模拟不同的东西是如何相连的。</p>\n<h3 id=\"算法实现\"><a class=\"markdownIt-Anchor\" href=\"#算法实现\"></a> 算法实现</h3>\n<p>首先创建一个队列，用于搜索每一个节点的相连节点。即由队列组成一个拓扑图，由此出发进行搜索。</p>\n<details>\n<summary>图</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;you&quot;</span>] = [<span class=\"string\">&quot;alice&quot;</span>, <span class=\"string\">&quot;bob&quot;</span>, <span class=\"string\">&quot;claire&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;bob&quot;</span>] = [<span class=\"string\">&quot;anuj&quot;</span>, <span class=\"string\">&quot;peggy&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;alice&quot;</span>] = [<span class=\"string\">&quot;peggy&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;claire&quot;</span>] = [<span class=\"string\">&quot;thom&quot;</span>, <span class=\"string\">&quot;jonny&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;anuj&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;peggy&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;thom&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;jonny&quot;</span>] = &#123;&#125;<span class=\"comment\">#生成一个图</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> deque<span class=\"comment\">#建立队列用于搜索</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">search</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    search_queue = deque()</span><br><span class=\"line\">    search_queue += graph[name]<span class=\"comment\">#放入搜索队列</span></span><br><span class=\"line\">    searched = []<span class=\"comment\">#已搜索过的元素，避免循环搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> search_queue:<span class=\"comment\">#如果搜索队列不为空</span></span><br><span class=\"line\">        person = search_queue.popleft()<span class=\"comment\">#从队列中弹出搜索项</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> person <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> searched:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> person_is_seller(person):</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(person + <span class=\"string\">&quot;is a mango seller!&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                search_queue += graph[person]</span><br><span class=\"line\">                searched.append(person)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">person_is_seller</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name[-<span class=\"number\">1</span>] == <span class=\"string\">&#x27;m&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">search(<span class=\"string\">&quot;you&quot;</span>)</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"狄克斯特拉算法\"><a class=\"markdownIt-Anchor\" href=\"#狄克斯特拉算法\"></a> 狄克斯特拉算法</h2>\n<p>狄克斯特拉算法用于寻找加权图中的最短路径，但只适用于有向无环图和正权重。</p>\n<p>算法核心思想在于寻找最便宜的节点，检查他们的邻居，检查是否有前往他们的更短路径，如果有就更新其开销，重复这个过程直到遍历所有节点，最后计算最终路径。</p>\n<p>在计算过程中需要不断根据最短路径更新权重哈希表和父节点哈希表中的信息。</p>\n<details>\n<summary>狄克斯特拉算法实现</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#狄克斯特拉算法</span></span><br><span class=\"line\">graph = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>][<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>][<span class=\"string\">&quot;b&quot;</span>] = <span class=\"number\">2</span><span class=\"comment\">#建立起点的两个邻居及其权重</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;a&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;a&quot;</span>][<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>][<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">3</span></span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>][<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;fin&quot;</span>] = &#123;&#125;<span class=\"comment\">#完成图中其他节点的建立</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建哈希表存储初始计算结点的开销</span></span><br><span class=\"line\">infinity = <span class=\"built_in\">float</span>(<span class=\"string\">&quot;inf&quot;</span>)</span><br><span class=\"line\">costs = &#123;&#125;</span><br><span class=\"line\">costs[<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\">costs[<span class=\"string\">&quot;b&quot;</span>] = <span class=\"number\">2</span></span><br><span class=\"line\">costs[<span class=\"string\">&quot;fin&quot;</span>] = infinity</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建哈希表存储初始计算的父节点</span></span><br><span class=\"line\">parents = &#123;&#125;</span><br><span class=\"line\">parents[<span class=\"string\">&quot;a&quot;</span>] = <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">parents[<span class=\"string\">&quot;b&quot;</span>] = <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">parents[<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#建立数组用于存放已经搜索过的节点</span></span><br><span class=\"line\">processed = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#算法</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_lowest_cost_node</span>(<span class=\"params\">costs</span>):<span class=\"comment\">#寻找最便宜的点</span></span><br><span class=\"line\">    lowest_cost = <span class=\"built_in\">float</span>(<span class=\"string\">&quot;inf&quot;</span>)</span><br><span class=\"line\">    lowest_cost_node = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> costs:</span><br><span class=\"line\">        cost  = costs[node]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cost &lt; lowest_cost <span class=\"keyword\">and</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> processed:</span><br><span class=\"line\">            lowest_cost = cost</span><br><span class=\"line\">            lowest_cost_node = node</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lowest_cost_node</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">node = find_lowest_cost_node(costs)</span><br><span class=\"line\"><span class=\"keyword\">while</span> node <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:<span class=\"comment\">#遍历所有节点</span></span><br><span class=\"line\">    cost = costs[node]</span><br><span class=\"line\">    neighbors = graph[node]<span class=\"comment\">#得到当前节点邻居的哈希表</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> neighbors.keys():</span><br><span class=\"line\">        new_cost = cost + neighbors[n]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> costs[n] &gt; new_cost:<span class=\"comment\">#如果当前节点前往该邻居更近</span></span><br><span class=\"line\">            costs[n] = new_cost<span class=\"comment\">#就更新节点的开销</span></span><br><span class=\"line\">            parents[n] = node<span class=\"comment\">#并将邻居的父节点设为当前的节点</span></span><br><span class=\"line\">    processed.append(node)</span><br><span class=\"line\">    node = find_lowest_cost_node(costs)</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"贪婪算法\"><a class=\"markdownIt-Anchor\" href=\"#贪婪算法\"></a> 贪婪算法</h2>\n<p>每步都采取最优的做法，即每步都选择局部最优解，最终得到的就是全局最优解。</p>\n<h3 id=\"集合覆盖问题\"><a class=\"markdownIt-Anchor\" href=\"#集合覆盖问题\"></a> 集合覆盖问题</h3>\n<p>假设有一个广播节目，要让全美50个州的听众都听得到，但因为每一个广播台播出都需要费用，故要选择在尽可能少的广播台播出。</p>\n<details>\n<summary>贪婪算法（集合覆盖问题）</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">states_needed = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;mt&quot;</span>, <span class=\"string\">&quot;wa&quot;</span>, <span class=\"string\">&quot;or&quot;</span>, <span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ut&quot;</span>, <span class=\"string\">&quot;ca&quot;</span>,<span class=\"string\">&quot;az&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">stations = &#123;&#125;</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kone&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ut&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;ktwo&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;wa&quot;</span>, <span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;mt&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kthree&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;or&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ca&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kfour&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;nv&quot;</span> , <span class=\"string\">&quot;ut&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kfive&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;ca&quot;</span>, <span class=\"string\">&quot;az&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">final_stations = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> states_needed:</span><br><span class=\"line\">    best_station = <span class=\"literal\">None</span></span><br><span class=\"line\">    states_covered = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> station, states_for_station <span class=\"keyword\">in</span> stations.items():</span><br><span class=\"line\">        covered = states_needed &amp; states_for_station<span class=\"comment\">#求需要和已覆盖的交集</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(covered) &gt; <span class=\"built_in\">len</span>(states_covered):</span><br><span class=\"line\">            best_station = station</span><br><span class=\"line\">            states_covered = covered</span><br><span class=\"line\"></span><br><span class=\"line\">    final_stations.add(best_station)</span><br><span class=\"line\">    states_needed -= states_covered</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(final_stations)</span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"np完全问题\"><a class=\"markdownIt-Anchor\" href=\"#np完全问题\"></a> NP完全问题</h3>\n<p>“以难解著称的问题”</p>\n<ul>\n<li>元素较少时运行速度很快，但随着元素的增加运行速度变得非常慢</li>\n<li>涉及所有组合的问题</li>\n<li>不能将问题分为小问题，必须考虑各种可能的情况</li>\n<li>如果问题涉及序列且难以解决</li>\n<li>如果问题涉及集合</li>\n<li>如果问题可以转化为集合覆盖或者旅行商问题</li>\n</ul>\n<p>则可能是NP完全问题。</p>\n<h2 id=\"动态规划\"><a class=\"markdownIt-Anchor\" href=\"#动态规划\"></a> 动态规划</h2>\n<h3 id=\"如何设计出动态规划解决方案\"><a class=\"markdownIt-Anchor\" href=\"#如何设计出动态规划解决方案\"></a> 如何设计出动态规划解决方案？</h3>\n<ul>\n<li>每种动态规划解决方案都涉及网格</li>\n<li>单元格中的值通常就是你要优化的值</li>\n<li>每个单元格都是一个子问题，因此你应考虑如何将问题分成子问题。</li>\n</ul>\n<p>_没有放诸四海而皆准的动态规划算法。</p>\n<h2 id=\"k最近邻算法knn\"><a class=\"markdownIt-Anchor\" href=\"#k最近邻算法knn\"></a> K最近邻算法（KNN）</h2>\n<p>可以用作制作推荐系统。如果需要量度两个用户的相似度，还可以使用余弦相似度。</p>\n<p>使用KNN时挑选合适的特征至关重要。</p>\n<ul>\n<li>和内容紧密相关的特征</li>\n<li>不偏不倚的特征</li>\n</ul>\n<p>KNN可以用于机器学习来创建推荐系统或识别系统。通过大量的数字图像提取特征来建立KNN算法的参考库，例如谷歌使用的OCR（光学字符识别），垃圾邮件过滤器（使用朴素贝叶斯分类器）等。</p>\n<h2 id=\"将深入的方向\"><a class=\"markdownIt-Anchor\" href=\"#将深入的方向\"></a> 将深入的方向</h2>\n<ul>\n<li>B树，红黑树，堆，伸展树</li>\n<li>反向索引</li>\n<li>傅里叶变换</li>\n<li>Diffie-Hellman算法</li>\n<li>所有的图算法都可以用线性规划实现。</li>\n<li>Simplex算法。</li>\n</ul>\n","tags":["算法学习"]},{"title":"Neo4j知识图谱进展","url":"/2024/04/12/Neo4j%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E8%BF%9B%E5%B1%95/","content":"<h1 id=\"1-目标任务\"><a class=\"markdownIt-Anchor\" href=\"#1-目标任务\"></a> 1、目标任务</h1>\n<p>完成有100个节点的知识图谱绘制</p>\n<h1 id=\"2-选题\"><a class=\"markdownIt-Anchor\" href=\"#2-选题\"></a> 2、选题</h1>\n<p>考研数学知识点</p>\n<h1 id=\"3-进度\"><a class=\"markdownIt-Anchor\" href=\"#3-进度\"></a> 3、进度</h1>\n<p>61个节点</p>\n<h1 id=\"4-tips\"><a class=\"markdownIt-Anchor\" href=\"#4-tips\"></a> 4、tips</h1>\n<h2 id=\"41-可以使用python进行批量节点关系绘制还未细究已更新\"><a class=\"markdownIt-Anchor\" href=\"#41-可以使用python进行批量节点关系绘制还未细究已更新\"></a> 4.1、可以使用python进行批量节点关系绘制（还未细究）（已更新）</h2>\n<p>可以细究为利用导入数据，编程等方法批量导入生成数据，减少建立节点的工作量和错误率。\n在仔细阅读教程后发现，使用python只是因为使用者对python足够熟悉，并且python有插件可以支持neo4j的知识图谱的搭建，批量导入并不是一定需要python。</p>\n<h2 id=\"42-在绘制节点时要注意不要出现同名节点\"><a class=\"markdownIt-Anchor\" href=\"#42-在绘制节点时要注意不要出现同名节点\"></a> 4.2、在绘制节点时要注意不要出现同名节点</h2>\n<p>目前发现在第三章和第四章有同名的节点，导致直接生成了一个横跨两个章节的关系，并且由于Neo4j的自增设置，无法在原节点上更改关系，于是出现了节点和关系的冗余。</p>\n<p>收尾时要记得删除多余关系。</p>\n<h2 id=\"43-手动输入的缺点\"><a class=\"markdownIt-Anchor\" href=\"#43-手动输入的缺点\"></a> 4.3、手动输入的缺点</h2>\n<p>适合数量较少的情况，数量超过30个很容易搞混。</p>\n<h1 id=\"5-目标进度\"><a class=\"markdownIt-Anchor\" href=\"#5-目标进度\"></a> 5、目标进度</h1>\n<p>周内基本完成绘制。</p>\n<hr />\n<p>更新于2024/4/13</p>\n<h1 id=\"-完成知识图谱绘制\"><a class=\"markdownIt-Anchor\" href=\"#-完成知识图谱绘制\"></a> --完成知识图谱绘制</h1>\n<h2 id=\"-问题\"><a class=\"markdownIt-Anchor\" href=\"#-问题\"></a> --问题</h2>\n<p>在绘制时出现了同名节点，关系变得很乱，手动删除又十分麻烦（生气</p>\n<hr />\n<p>更新于2024/4/14</p>\n<h1 id=\"neo4j本身的发掘\"><a class=\"markdownIt-Anchor\" href=\"#neo4j本身的发掘\"></a> neo4j本身的发掘</h1>\n<p>在查找neo4j操作时，找到了官网上的操作指南。事实上，在绘制过程中用到的过程不及其功能的百分之一。固然人工或半人工的构建模式是它最大的短板，它本身的功能和用途也不应该因为这个缺点而被忽视。</p>\n<h1 id=\"知识图谱的发掘\"><a class=\"markdownIt-Anchor\" href=\"#知识图谱的发掘\"></a> 知识图谱的发掘</h1>\n<p>在查找最新的知识图谱的相关文献时，发现知识图谱因为它的直观的特点，在近一个月就有不同领域的对知识图谱的应用技术的开发，包括但不限于趋势预测，风险分析，安全决策，资源配置等，甚至看到了水电站发电量的优化处理。可见目前所看到的优化理论知识只是优化算法的冰山一角，lp的观点没有问题，但水文这座陈旧的大厦依然需要CS来注入足够新鲜的血液。</p>\n<hr />\n<p>OVER</p>\n"},{"title":"New things in the process of Reproducing python games","url":"/2025/04/19/New-things-in-the-process-of-Reproducing-python-games/","content":"<h2 id=\"turtle\"><a class=\"markdownIt-Anchor\" href=\"#turtle\"></a> Turtle</h2>\n<p>The turtle module in Python is a standard library module used for creating simple graphics and drawings. It provides a virtual &quot;turtle&quot; that can be controlled to draw shapes, patterns, and animations on the screen. It is often used for educational purposes to teach programming and basic graphics concepts.</p>\n<p>Key features of turtle:</p>\n<ul>\n<li>Drawing: You can draw lines,shapes, and patterns by moving the turtle around the screen.</li>\n<li>Animation: The turtle's movements can be animated, making it useful for creating simple games or visualizations.</li>\n<li>Events Handling: It supports keyboard and mouse events,allowing for interactive programs.</li>\n<li>Easy to use: The module is beginner-friendly and requires no prior knowledge of graphics programming.</li>\n</ul>\n<p>Common functions:</p>\n<ul>\n<li>forward(distance): Moves the turtle forward by the specified distance.</li>\n<li>backward(distance): Moves the turtle backward.</li>\n<li>left(angle): Turns the turtle left by the specified angle.</li>\n<li>right(angle): Turns the turtle right.</li>\n<li>penup()/pendown(): Lifts or lowers the pen to stop or start drawing.</li>\n<li>goto(x,y): Moves the turtle to a specific position</li>\n<li>circle(radius): Draws a circle with the given radius.</li>\n<li>color(color_name): Sets the turtle's pen color</li>\n<li>bgcolor(color_name): Sets the background color of the screen.</li>\n</ul>\n<p>Other functions:</p>\n<ul>\n<li>\n<p>setup(): uses to configure the size and position of the turtle graphics window.</p>\n<p>It has four parameters, which allow for flexibility in defining the window's dimensions and placement. Four parameters are: width(the first parameter specifies the width of the window in pixels), height(the second parameters specifies the height of the window in pixels.),start x(the third parameter specifies the X-coordinate of the top-left corner of the window on the screen), start y(the fourth parameters specifies the Y-coordinate of the top-left corner of the window on the screen)</p>\n</li>\n<li>\n<p>hideturtle()</p>\n<p>The hideturtle() function in your code is used to hide the turtle cursor (the arrow or shape that represents the turtle), where you don't want the turtle cursor to be visible while drawing or updating the game.</p>\n<p>It is a simple function that only hides the turtle cursor. It doesn't require any additional information or parameters because its purpose is singular and straightforward: to make the turtle invisible. It acts on the current turtle object.</p>\n</li>\n<li>\n<p>tracer()</p>\n<p>The tracer() is a function used to control the animation speed of the turtle graphics. By default, the turtle module updates the screen after every drawing action, which can make complex drawings slow.</p>\n<p>The tracer() function allows you to disable or control the frequency of screen updates, making the drawing process faster or smoother.</p>\n<p>Syntax:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">tracer(n=<span class=\"literal\">None</span>, delay=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure>\n<p>n:If set to 0, it disables automatic screen updates entirely. You will need to call update() manually to refresh the screen. If set to a positive integer, it updates the screen every nth drawing action.</p>\n<p>delay: Set a delay(in milliseconds) between updates.</p>\n</li>\n<li>\n<p>listen()</p>\n<p>listen() is a function that sets the focus on the Turtle graphics window to capture keyboard events. It enables the program to respond to key presses by associating specific keys with functions using onkey()</p>\n</li>\n<li>\n<p>done()</p>\n<p>In the turtle module, the done() function is used to indicate that the Turtle graphics program has finished executing. It keeps the Turtle graphics window open, allowing the user to view the final state of drawing or game.</p>\n<p>Without done(), the Turtle graphics window may close immediately after the program finishes running, especially when executed in certain environments.</p>\n</li>\n<li>\n<p>undo()</p>\n<p>undo() function is used to reverse the last action performed by the turtle. This can include actions like drawing a line, moving the turtle, or writing text.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">writer.undo()</span><br><span class=\"line\">writer.write(state[<span class=\"string\">&#x27;score&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p>writer.undo() removes the last action performed by the writer turtle, which is likely the previously written score. This ensures that the old score is erased before writing the update score with writer.write(state['state']).</p>\n</li>\n<li>\n<p>clear()</p>\n<p>Used to erase all drawings made by the turtle on the screen. It simply clears the visual content created by the turtle.</p>\n</li>\n</ul>\n<h2 id=\"lambda\"><a class=\"markdownIt-Anchor\" href=\"#lambda\"></a> Lambda</h2>\n<p>In python, a <strong>lambda</strong> is a way to create an anonymous function(a function without a name).It is often used for short simple functions that are not reused elsewhere. The syntax for a lambda function is:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">lambda</span> arguments:expression</span><br></pre></td></tr></table></figure>\n<ul>\n<li>arguments: the input parameters for the function.</li>\n<li>expression: the single expression that the function evaluates and returns</li>\n</ul>\n<p><strong>The purpose to use Lambda in <a href=\"http://pacman.py\">pacman.py</a></strong></p>\n<p>Using lambda allows you to define these small, one-time-use functions inline without needing to define separate named functions for each key press. It keeps the code concise and readable.</p>\n<h2 id=\"dot\"><a class=\"markdownIt-Anchor\" href=\"#dot\"></a> Dot(.)</h2>\n<p>In <a href=\"http://pacman.py\">pacman.py</a>, I've noticed lots of dots. Let's discuss the function of these dots and summarize dots' different functions in Python.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change</span>(<span class=\"params\">x,y</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Change the direction of the pacman&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> valid(pacman + vector(x,y)):</span><br><span class=\"line\">        aim.x = x</span><br><span class=\"line\">        aim.y = y</span><br></pre></td></tr></table></figure>\n<p>The dot(.) in aim.x is used to access an attribute or method of an object in Python. In this case, aim is an instance of the vector class, and x is one of its attributes. The dot allows you to access or modify the value of x within the aim object.</p>\n<p>General use of the dot(.) in Python:</p>\n<ul>\n<li>\n<p><strong>Accessing Attributes:</strong></p>\n<ul>\n<li>Example: aim.x accesses the x attribute of the aim object.</li>\n<li>Example: writer.color access the color method of the writer object</li>\n</ul>\n</li>\n<li>\n<p><strong>Calling Methods:</strong></p>\n<ul>\n<li>Example: writer.goto(160,160) calls the goto method of the writer object</li>\n</ul>\n</li>\n<li>\n<p><strong>Accessing Modules or Classes:</strong></p>\n<ul>\n<li>Example: random.choice accesses the choice function from the random module.</li>\n</ul>\n</li>\n</ul>\n<p>All in all, the dot(.) always serves the same purpose: <strong>to access an attribute or method of an object</strong>, the specific behavior depends on the object being accassed.</p>\n","categories":["python learning"],"tags":["python"]},{"title":"NumPy+Pandas+Matplotlib学习","url":"/2024/12/29/NumPy-Pandas-Matplotlib%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"numpy基础\"><a class=\"markdownIt-Anchor\" href=\"#numpy基础\"></a> NumPy基础</h1>\n<h2 id=\"numpy几个重要定义\"><a class=\"markdownIt-Anchor\" href=\"#numpy几个重要定义\"></a> NumPy几个重要定义</h2>\n<ul>\n<li>axis:维度</li>\n<li>rank:维度数</li>\n<li>shape:各维度的元素数</li>\n<li>size:数组内所有元素的数量</li>\n</ul>\n<h2 id=\"创建数组\"><a class=\"markdownIt-Anchor\" href=\"#创建数组\"></a> 创建数组</h2>\n<p>1、创建一个自定义大小和内容的数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">np_array = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]])</span><br></pre></td></tr></table></figure>\n<p>2、创建一个全为0的1*5的数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">zero_array = np.zeros((<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n<p>3、创建一个全为1的4*4的数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">one_array = np.ones((<span class=\"number\">4</span>,<span class=\"number\">4</span>))</span><br></pre></td></tr></table></figure>\n<p>4、创建全为一个数的3*3数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">full_array = np.full((<span class=\"number\">3</span>,<span class=\"number\">3</span>),<span class=\"number\">7</span>)</span><br></pre></td></tr></table></figure>\n<p>5、创建一个空的2*3数组，数组值来自内存任意数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">empty_array = np.empty((<span class=\"number\">2</span>,<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n<p>6、改变输出数组的形状</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]])</span><br><span class=\"line\">y = np.reshape(x,(<span class=\"number\">3</span>,<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<p>7、将数组读取改为一维</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">z = y.rival()</span><br></pre></td></tr></table></figure>\n<p>注意，以上两种方法只是改变了数组的输出方式，并没有复制成为新的数组，如果改变y、z的内容，x内容也会相应改变。</p>\n<p>8、复制数组到新的数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array3 = array1.copy()</span><br></pre></td></tr></table></figure>\n<p>9、生成(0,1)随机数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">random_array = np.random.random((<span class=\"number\">5</span>,<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure>\n<p>10、生成整数随机数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand1 = np.random.randint(<span class=\"number\">100</span>,size=(<span class=\"number\">5</span>,<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<p>11、生成服从正态分布的随机数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand3 = np.random.randn(<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>12、生成4维单位矩阵</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">eye_array = np.eye(<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<p>13、生成1-5的等差数列</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.arange(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<p>14、生成规定步长的等差数列</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.arange(<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure>\n<p>15、平均分(0,5)区间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>16、自定义函数处理数组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_function</span>(<span class=\"params\">z,y,x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x*y+z</span><br><span class=\"line\"></span><br><span class=\"line\">array = np.fromfunction(my_function,(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">10</span>))</span><br></pre></td></tr></table></figure>\n<h2 id=\"索引\"><a class=\"markdownIt-Anchor\" href=\"#索引\"></a> 索引</h2>\n<p>1、二维数组索引</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[<span class=\"number\">0</span>,<span class=\"number\">2</span>])</span><br><span class=\"line\">matrix1[<span class=\"number\">0</span>,<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[[<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>],[<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[(<span class=\"number\">0</span>,<span class=\"number\">2</span>),<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure>\n<p>2、高维数组索引</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix_3d = np.arange(<span class=\"number\">80</span>).reshape(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">2</span>,...])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">0</span>,<span class=\"number\">2</span>,...])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">3</span>,...,<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">3</span>,:,<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure>\n<p>3、布尔索引</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix3 = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">5</span>,<span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3)</span><br><span class=\"line\">bool_idx = (matrix3 &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(bool_idx)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3[bool_idx])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3%<span class=\"number\">2</span> == <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">matrix4 = np.arange(<span class=\"number\">36</span>).reshape(<span class=\"number\">3</span>,<span class=\"number\">12</span>)</span><br><span class=\"line\">rows_on = [<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>]</span><br><span class=\"line\">cols_on = [<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix4[np.ix_(rows_on,cols_on)])</span><br></pre></td></tr></table></figure>\n<p>4、提取数组元素</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">two_dimensional_list = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> two_dimensional_list:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> two_dimensional_list:</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(row)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> two_dimensional_list.T:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(column)</span><br><span class=\"line\"></span><br><span class=\"line\">three_dimentiional_list = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]], [[<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>], [<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>], [<span class=\"number\">16</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>]]])</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> three_dimentiional_list.flat:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> three_dimentiional_list:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数学函数-统计-线性代数\"><a class=\"markdownIt-Anchor\" href=\"#数学函数-统计-线性代数\"></a> 数学函数、统计、线性代数</h2>\n<p>1、Arithmetic operations:+ - * / // % **</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\">matrix2 = np.array([[<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.add(matrix1, matrix2)) <span class=\"comment\"># 求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.subtract(matrix1, matrix2)) <span class=\"comment\"># 求差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.multiply(matrix1, matrix2)) <span class=\"comment\"># 求积</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.floor_divide(matrix1, matrix2)) <span class=\"comment\"># 除</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.power(matrix1, matrix2)) <span class=\"comment\"># 乘方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mod(matrix1, matrix2)) <span class=\"comment\"># 取余</span></span><br></pre></td></tr></table></figure>\n<p>2、function</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand_matrix = np.array([[<span class=\"number\">20</span>,<span class=\"number\">15.4</span>,-<span class=\"number\">12.8</span>,-<span class=\"number\">1.1</span>,-<span class=\"number\">8.8</span>],[-<span class=\"number\">18.3</span>,-<span class=\"number\">19.6</span>,<span class=\"number\">20.2</span>,-<span class=\"number\">15.5</span>,<span class=\"number\">43.1</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.isnan(rand_matrix)) <span class=\"comment\"># 判断是否为nan</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sign(rand_matrix)) <span class=\"comment\"># 判断正负</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.nonzero(rand_matrix)) <span class=\"comment\"># 判断是否为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.ceil(rand_matrix)) <span class=\"comment\"># 向上取整</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.cumsum(rand_matrix)) <span class=\"comment\"># 累加</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.diff(rand_matrix)) <span class=\"comment\"># 累差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sqrt(rand_matrix)) <span class=\"comment\"># 开方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.square(rand_matrix)) <span class=\"comment\"># 平方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sin(rand_matrix)) <span class=\"comment\"># 正弦</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sort(rand_matrix)) <span class=\"comment\"># 排序</span></span><br></pre></td></tr></table></figure>\n<p>3、统计</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix = np.arange(-<span class=\"number\">5</span>,<span class=\"number\">5</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix.mean()) <span class=\"comment\"># 求平均值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.median(matrix)) <span class=\"comment\"># 求中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.argmax(matrix)) <span class=\"comment\"># 求最大值的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.argmin(matrix)) <span class=\"comment\"># 求最小值的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix)) <span class=\"comment\"># 求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">abs</span>(matrix)) <span class=\"comment\"># 求绝对值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(matrix)) <span class=\"comment\"># 求最大值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix,axis=<span class=\"number\">0</span>)) <span class=\"comment\"># 求每一列的和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix,axis=<span class=\"number\">1</span>)) <span class=\"comment\"># 求每一行的和</span></span><br></pre></td></tr></table></figure>\n<p>4、线性代数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.arange(<span class=\"number\">16</span>).reshape(<span class=\"number\">4</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">matrix2 = np.arange(<span class=\"number\">8</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1.T) <span class=\"comment\"># 转置</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1.dot(matrix2.T)) <span class=\"comment\"># 矩阵乘法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.linalg.inv(matrix1)) <span class=\"comment\"># 逆矩阵</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.linalg.det(matrix1)) <span class=\"comment\"># 行列式</span></span><br><span class=\"line\">eigenvalues, eigenvectors = np.linalg.eig(matrix1) <span class=\"comment\"># 特征值和特征向量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(eigenvalues)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(eigenvectors)</span><br></pre></td></tr></table></figure>\n<p>5、求解线性方程</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">coeffs = np.array([[<span class=\"number\">2</span>,<span class=\"number\">6</span>],[<span class=\"number\">5</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 系数矩阵</span></span><br><span class=\"line\">depvars = np.array([<span class=\"number\">6</span>,-<span class=\"number\">9</span>]) <span class=\"comment\"># 常数项</span></span><br><span class=\"line\">solution = np.linalg.solve(coeffs,depvars) <span class=\"comment\"># 解方程</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(solution)</span><br></pre></td></tr></table></figure>\n<h2 id=\"合并-分割-广播\"><a class=\"markdownIt-Anchor\" href=\"#合并-分割-广播\"></a> 合并、分割、广播</h2>\n<p>1、交换维度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">m1 = np.ones((<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.transpose(m1,(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>))) <span class=\"comment\"># 交换维度</span></span><br><span class=\"line\">m2 = np.ones((<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.transpose(m2)) <span class=\"comment\"># 交换维度</span></span><br><span class=\"line\">m3 = m2.swapaxes(<span class=\"number\">1</span>,<span class=\"number\">2</span>) <span class=\"comment\"># 交换维度</span></span><br></pre></td></tr></table></figure>\n<p>2、合并</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array1 = np.full((<span class=\"number\">1</span>,<span class=\"number\">5</span>),<span class=\"number\">1.0</span>)</span><br><span class=\"line\">array2 = np.full((<span class=\"number\">1</span>,<span class=\"number\">5</span>),<span class=\"number\">2.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">stake_array = np.vstack((array1,array2)) <span class=\"comment\"># 垂直堆叠数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.hstack((array1,array2)) <span class=\"comment\"># 水平堆叠数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.concatenate((array1,array2),axis=<span class=\"number\">0</span>) <span class=\"comment\"># 按行堆叠数组（同vstack）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.concatenate((array1,array2),axis=<span class=\"number\">1</span>) <span class=\"comment\"># 按列堆叠数组（同hstack）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.stack((array1,array2)) <span class=\"comment\">#沿新轴合并数组，保持两矩阵形状相同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br></pre></td></tr></table></figure>\n<p>3、分割</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">big_matrix = np.arange(<span class=\"number\">36</span>).reshape(<span class=\"number\">9</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">m1,m2,m3 = np.vsplit(big_matrix,<span class=\"number\">3</span>) <span class=\"comment\"># 垂直分割(按行分割)</span></span><br><span class=\"line\">m4,m5 = np.hsplit(big_matrix,<span class=\"number\">2</span>) <span class=\"comment\"># 水平分割(按列分割)</span></span><br><span class=\"line\"></span><br><span class=\"line\">m1 = np.arange(<span class=\"number\">4</span>)</span><br><span class=\"line\">m2 = np.tile(m1,(<span class=\"number\">4</span>,<span class=\"number\">1</span>)) <span class=\"comment\">#第一个维度重复4次，第二个维度重复1次</span></span><br></pre></td></tr></table></figure>\n<p>4、广播\n广播的前提：两个数组必须可以转化成维度大小一样的数组才能进行计算</p>\n<ul>\n<li>规则1、如果两个数组维度不同，那么小维度数组的形状将在最左边补1</li>\n<li>规则2、如果两个数组的形状在任何一个维度上都不匹配，那么数组的形状会沿着维度为1的维度扩展，匹配另一个数组的形状</li>\n<li>规则3、如果两个数组在任何一个维度上都不匹配且没有一个维度为1，则发生异常</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">m2 = np.arange(<span class=\"number\">6</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+[[<span class=\"number\">10</span>],[<span class=\"number\">20</span>]])  <span class=\"comment\"># 扩展为[[10,10,10],[20,20,20]]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+[<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>]) <span class=\"comment\"># 扩展为[[10,20,30],[10,20,30]]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+<span class=\"number\">10</span>) <span class=\"comment\">#扩展为[[10,10,10],[10,10,10]]</span></span><br><span class=\"line\"></span><br><span class=\"line\">m3 = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]])</span><br><span class=\"line\">m4 = np.array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m3+m4) <span class=\"comment\"># 扩展为4行3列，然后相加</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"pandas基础\"><a class=\"markdownIt-Anchor\" href=\"#pandas基础\"></a> Pandas基础</h1>\n<h2 id=\"series和dataframe\"><a class=\"markdownIt-Anchor\" href=\"#series和dataframe\"></a> Series和DataFrame</h2>\n<p>1、Seires</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">random_items = np.random.randint(<span class=\"number\">25</span>,size=<span class=\"number\">10</span>)    <span class=\"comment\"># 生成10个0-25之间的随机数</span></span><br><span class=\"line\">series_data = pd.Series(random_items)   <span class=\"comment\"># 将随机数转换为Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(series_data[<span class=\"number\">0</span>])   <span class=\"comment\"># 输出第一个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\">letter_index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;i&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>]    <span class=\"comment\"># 生成索引</span></span><br><span class=\"line\">new_series = pd.Series(random_items,index=letter_index)  <span class=\"comment\"># 将随机数转换为Series对象，并指定索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(new_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">data_dict = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>,<span class=\"string\">&#x27;d&#x27;</span>:<span class=\"number\">4</span>,<span class=\"string\">&#x27;e&#x27;</span>:<span class=\"number\">5</span>&#125;    <span class=\"comment\"># 生成字典</span></span><br><span class=\"line\">dict_series = pd.Series(data_dict)   <span class=\"comment\"># 将字典转换为Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\">dict_series = pd.Series(data_dict,name = <span class=\"string\">&#x27;series_name&#x27;</span>)   <span class=\"comment\"># 将字典转换为Series对象，并指定名称</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\">dict_series = dict_series.rename(<span class=\"string\">&#x27;new_name&#x27;</span>)   <span class=\"comment\"># 重命名Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series.median())   <span class=\"comment\"># 输出Series对象的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series&gt;dict_series.median())   <span class=\"comment\"># 输出Series对象中大于中位数的元素</span></span><br></pre></td></tr></table></figure>\n<p>2、DataFram</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">d = &#123;<span class=\"string\">&#x27;one&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">     ,<span class=\"string\">&#x27;two&#x27;</span>:[<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]&#125;  <span class=\"comment\"># 创建一个字典</span></span><br><span class=\"line\">dict_df = pd.DataFrame(d)  <span class=\"comment\"># 将字典转换为数据框</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df[<span class=\"string\">&#x27;one&#x27;</span>])  <span class=\"comment\"># 输出one列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df.shape)  <span class=\"comment\"># 输出数据框的行数和列数</span></span><br><span class=\"line\"></span><br><span class=\"line\">d_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;one&#x27;</span>:pd.Series([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,],name = <span class=\"string\">&#x27;col_one&#x27;</span>,index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>]),</span><br><span class=\"line\">    <span class=\"string\">&#x27;two&#x27;</span>:pd.Series([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],name = <span class=\"string\">&#x27;col_two&#x27;</span>,index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">df = pd.DataFrame(d_data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\">new_df = df.reset_index(drop = <span class=\"literal\">True</span>)    <span class=\"comment\"># drop = True 丢弃原来的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(new_df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\">df.reset_index(drop = <span class=\"literal\">True</span>,inplace = <span class=\"literal\">True</span>)   <span class=\"comment\"># drop = True 丢弃原来的索引</span></span><br><span class=\"line\">df.reset_index(drop = <span class=\"literal\">False</span>,inplace = <span class=\"literal\">True</span>) <span class=\"comment\"># drop = False 保留原来的索引</span></span><br></pre></td></tr></table></figure>\n<p>3、大型表格索引</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.columns) <span class=\"comment\"># 查看列名</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head(<span class=\"number\">3</span>)) <span class=\"comment\"># 查看前3行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head())  <span class=\"comment\"># 查看前5行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.tail())  <span class=\"comment\"># 查看后5行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[<span class=\"string\">&#x27;Region&#x27;</span>]) <span class=\"comment\"># 查看Region列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Country&#x27;</span>]]) <span class=\"comment\"># 查看Region和Country列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[<span class=\"number\">100</span>]) <span class=\"comment\"># 查看行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[[<span class=\"number\">2</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 查看多行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">0</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 查看多行多列</span></span><br><span class=\"line\">country_info[<span class=\"string\">&#x27;Country&#x27;</span>] = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.strip() <span class=\"comment\"># 去除头和尾的空格</span></span><br><span class=\"line\">country_info.set_index([<span class=\"string\">&#x27;Country&#x27;</span>],drop=<span class=\"literal\">True</span>,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 设置Country为索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[<span class=\"string\">&#x27;China&#x27;</span>]) <span class=\"comment\"># 查看China行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[[<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>]]) <span class=\"comment\"># 查看China和India行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[[<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>],[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 查看China和India行的Region和Population列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[<span class=\"string\">&#x27;China&#x27;</span>:<span class=\"string\">&#x27;India&#x27;</span>,<span class=\"string\">&#x27;Region&#x27;</span>:<span class=\"string\">&#x27;Deathrate&#x27;</span>]) <span class=\"comment\"># 查看China到India行</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>HOMEWORK</li>\n</ul>\n<p>使用read_csv获取country数据，读取前十行的数据，只选取Country、Birthrate和Service，将其中的数据变成DataFrame,并使用to_csv函数将结果存到本地的country.csv文件中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head(<span class=\"number\">10</span>))    <span class=\"comment\">#查看前10行数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Birthrate&#x27;</span>,<span class=\"string\">&#x27;Service&#x27;</span>]])  <span class=\"comment\">#提取数据</span></span><br><span class=\"line\">df_country = pd.DataFrame(country_info[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Birthrate&#x27;</span>,<span class=\"string\">&#x27;Service&#x27;</span>]])  <span class=\"comment\">#提取数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df_country)</span><br><span class=\"line\">df_country.to_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>,index=<span class=\"literal\">False</span>) <span class=\"comment\">#保存数据但不保存索引</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"filtering\"><a class=\"markdownIt-Anchor\" href=\"#filtering\"></a> Filtering</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\country.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] ==<span class=\"string\">&#x27;0&#x27;</span>)  <span class=\"comment\"># 选出净移民为0的国家</span></span><br><span class=\"line\">zero_migration_filter = (country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] ==<span class=\"string\">&#x27;0&#x27;</span>) <span class=\"comment\"># 选出净移民为0的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[zero_migration_filter]) <span class=\"comment\"># 输出净移民为0的国家</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[zero_migration_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Net migration&#x27;</span>]]) <span class=\"comment\"># 输出净移民为0的国家的地区、国家名和净移民数</span></span><br><span class=\"line\">low_migration_filter = (country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] &lt;<span class=\"string\">&#x27;100&#x27;</span>) <span class=\"comment\"># 选出净移民小于100的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[low_migration_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出净移民小于100的国家的地区和人口数</span></span><br><span class=\"line\">and_filter = (country_info[<span class=\"string\">&#x27;Deathrate&#x27;</span>]&gt;<span class=\"string\">&#x27;1000&#x27;</span>)&amp;(country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&lt;<span class=\"number\">10000</span>) <span class=\"comment\"># 选出死亡率大于1000且人口小于10000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[and_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出死亡率大于1000且人口小于10000的国家的地区和人口数</span></span><br><span class=\"line\">or_filter = (country_info[<span class=\"string\">&#x27;Deathrate&#x27;</span>]&gt;<span class=\"string\">&#x27;1000&#x27;</span>)|(country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&lt;<span class=\"number\">10000</span>) <span class=\"comment\"># 选出死亡率大于1000或人口小于10000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[or_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出死亡率大于1000或人口小于10000的国家的地区和人口数</span></span><br><span class=\"line\">population_filter = (country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&gt;<span class=\"number\">100000</span>) <span class=\"comment\"># 选出人口大于100000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[~population_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出人口不大于100000的国家的地区和人口数</span></span><br><span class=\"line\"></span><br><span class=\"line\">countries = [<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;Japan&#x27;</span>,<span class=\"string\">&#x27;United States&#x27;</span>,<span class=\"string\">&#x27;Russia&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>] <span class=\"comment\"># 选出中国、日本、美国、俄罗斯和印度的数据</span></span><br><span class=\"line\">infilter = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].isin(countries) <span class=\"comment\"># 选出中国、日本、美国、俄罗斯和印度的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[infilter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出中国、日本、美国、俄罗斯和印度的地区和人口数</span></span><br><span class=\"line\">str_filter = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;A&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[~str_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中不包含字母“A”的国家的地区和人口数</span></span><br><span class=\"line\">str_filter2 = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;A|Z&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”或“Z”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[str_filter2,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中包含字母“A”或“Z”的国家的地区和人口数</span></span><br><span class=\"line\">str_filter3 = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;[a-m]&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”到“M”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[str_filter3,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中包含字母“A”到“M”的国家的地区和人口数</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"排序和增删查改\"><a class=\"markdownIt-Anchor\" href=\"#排序和增删查改\"></a> 排序和增删查改</h2>\n<p>1、排序搜索</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.set_index(<span class=\"string\">&#x27;Respondent&#x27;</span>, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将Respondent列设置为索引列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_index()) <span class=\"comment\"># 按照索引列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=<span class=\"string\">&#x27;Age&#x27;</span>,ascending = <span class=\"literal\">False</span>)) <span class=\"comment\"># 按照Age列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>],ascending = [<span class=\"literal\">False</span>,<span class=\"literal\">True</span>])[[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>]]) <span class=\"comment\"># 按照Age列排序，如果Age相同，按照YearsCode列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>],ascending = [<span class=\"number\">0</span>,<span class=\"number\">1</span>])[[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>]]) <span class=\"comment\"># 按照Age列排序，如果Age相同，按照YearsCode列排序，显示前10行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Age&#x27;</span>].sort_values())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].nlargest(<span class=\"number\">10</span>)) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].nsmallest(<span class=\"number\">10</span>)) <span class=\"comment\"># 找出ConvertedComp列中最小的10个值</span></span><br><span class=\"line\">richest_users = survey_df.nlargest(<span class=\"number\">10</span>,<span class=\"string\">&#x27;ConvertedComp&#x27;</span>) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值，并显示所有列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(richest_users[[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>,<span class=\"string\">&#x27;DevType&#x27;</span>,<span class=\"string\">&#x27;EdLevel&#x27;</span>]]) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值，并显示ConvertedComp和DevType列</span></span><br></pre></td></tr></table></figure>\n<p>2、增删改查</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> col_name,col_data <span class=\"keyword\">in</span> survey_df.items(): <span class=\"comment\"># 遍历所有列</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col_name)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col_data)</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> row_index,row_data <span class=\"keyword\">in</span> survey_df.iterrows(): <span class=\"comment\"># 遍历所有行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(row_index)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(row_data)</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">inversed_df = pd.DataFrame(&#123;idx:values <span class=\"keyword\">for</span> idx,values <span class=\"keyword\">in</span> survey_df.items()&#125;) <span class=\"comment\"># 转置</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(inversed_df.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.rename(columns = &#123;<span class=\"string\">&#x27;Age&#x27;</span>:<span class=\"string\">&#x27;user age&#x27;</span>,<span class=\"string\">&#x27;Orgsize&#x27;</span>:<span class=\"string\">&#x27;organization size&#x27;</span>&#125;,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 重命名列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.columns = survey_df.columns.<span class=\"built_in\">str</span>.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) <span class=\"comment\"># 替换列名中的空格</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.columns = [col.lower() <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> survey_df.columns] <span class=\"comment\"># 将列名转换为小写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.lower()) <span class=\"comment\"># 将列中的字符串转换为小写</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[<span class=\"number\">2</span>,<span class=\"string\">&#x27;trans&#x27;</span>] = <span class=\"string\">&#x27;Yes&#x27;</span> <span class=\"comment\"># 修改指定位置的值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[<span class=\"number\">2</span>,[<span class=\"string\">&#x27;trans&#x27;</span>,<span class=\"string\">&#x27;user_age&#x27;</span>,<span class=\"string\">&#x27;country&#x27;</span>]] = [<span class=\"string\">&#x27;Yes&#x27;</span>,<span class=\"number\">29</span>,<span class=\"string\">&#x27;China&#x27;</span>] <span class=\"comment\"># 修改指定位置的值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">18</span>,[<span class=\"string\">&#x27;age_group&#x27;</span>]] = <span class=\"string\">&#x27;young&#x27;</span> <span class=\"comment\"># 根据条件修改值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">18</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&gt;=<span class=\"number\">18</span>,[<span class=\"string\">&#x27;age_group&#x27;</span>]] = <span class=\"string\">&#x27;adult&#x27;</span> <span class=\"comment\"># 根据条件修改值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&gt;=<span class=\"number\">18</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;gen_col&#x27;</span>]=survey_df[<span class=\"string\">&#x27;gender&#x27;</span>]+survey_df[<span class=\"string\">&#x27;sexuality&#x27;</span>]+survey_df[<span class=\"string\">&#x27;trans&#x27;</span>] <span class=\"comment\"># 新增列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;gen_col&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;job_factors&#x27;</span>]=survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;job_factors&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[[<span class=\"string\">&#x27;job-fac1&#x27;</span>,<span class=\"string\">&#x27;job-fac2&#x27;</span>,<span class=\"string\">&#x27;job-fac3&#x27;</span>]] = survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>,expand=<span class=\"literal\">True</span>) <span class=\"comment\"># 将列中的字符串按指定字符分割</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[[<span class=\"string\">&#x27;job-fac1&#x27;</span>,<span class=\"string\">&#x27;job-fac2&#x27;</span>,<span class=\"string\">&#x27;job-fac3&#x27;</span>]]) <span class=\"comment\"># 将列中的字符串按指定字符分割</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df._append(&#123;<span class=\"string\">&#x27;user_age&#x27;</span>:<span class=\"number\">30</span>,<span class=\"string\">&#x27;country&#x27;</span>:<span class=\"string\">&#x27;China&#x27;</span>&#125;,ignore_index=<span class=\"literal\">True</span>) <span class=\"comment\"># 添加行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df)</span><br><span class=\"line\"></span><br><span class=\"line\">new_survey=&#123;<span class=\"string\">&#x27;user_age&#x27;</span>:<span class=\"number\">25</span>,<span class=\"string\">&#x27;country&#x27;</span>:<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;age1stcode&#x27;</span>:<span class=\"number\">24</span>&#125;</span><br><span class=\"line\">new_survey_df = pd.DataFrame(new_survey,index=[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df._append(new_survey_df,ignore_index=<span class=\"literal\">True</span>,sort=<span class=\"literal\">False</span>)) <span class=\"comment\"># 添加行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(columns=[<span class=\"string\">&#x27;soaccount&#x27;</span>],inplace=<span class=\"literal\">True</span>))<span class=\"comment\"># 删除列</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(index=<span class=\"number\">4</span>))<span class=\"comment\"># 删除行</span></span><br><span class=\"line\"></span><br><span class=\"line\">age_filter = survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(index=survey_df[age_filter].index))<span class=\"comment\"># 删除指定条件行</span></span><br></pre></td></tr></table></figure>\n<p>3、apply,map,applymap,replace</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\">dtypes = survey_df.dtypes <span class=\"comment\"># 获取数据类型</span></span><br><span class=\"line\">str_cols=[col_name <span class=\"keyword\">for</span> col_name <span class=\"keyword\">in</span> dtypes.index <span class=\"keyword\">if</span> dtypes[col_name]==<span class=\"string\">&#x27;object&#x27;</span>] <span class=\"comment\"># 获取字符串类型的列名</span></span><br><span class=\"line\">survey_df[str_cols]=survey_df[str_cols].astype(<span class=\"built_in\">str</span>) <span class=\"comment\"># 将字符串类型的列转换为字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(<span class=\"built_in\">len</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">upper_case</span>(<span class=\"params\">col_value</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> col_value.upper()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(upper_case)) <span class=\"comment\"># 将hobbyist列的值转换为大写</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>] = survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x: x.upper()) <span class=\"comment\"># 将hobbyist列的值转换为大写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.apply(<span class=\"built_in\">len</span>,axis=<span class=\"string\">&#x27;columns&#x27;</span>)) <span class=\"comment\"># 计算每行的长度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.apply(<span class=\"keyword\">lambda</span> x:x.<span class=\"built_in\">min</span>())) <span class=\"comment\"># 计算每列的最小值</span></span><br><span class=\"line\">map_dict = &#123;<span class=\"string\">&#x27;YES&#x27;</span>:<span class=\"literal\">True</span>,<span class=\"string\">&#x27;NO&#x27;</span>:<span class=\"literal\">False</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].<span class=\"built_in\">map</span>(map_dict)) <span class=\"comment\"># 将hobbyist列的值转换为布尔值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[str_cols].applymap(<span class=\"built_in\">len</span>)) <span class=\"comment\"># 计算字符串列的长度</span></span><br><span class=\"line\"></span><br><span class=\"line\">map_dict=&#123;<span class=\"string\">&#x27;YES&#x27;</span>:<span class=\"literal\">True</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].replace(map_dict)) <span class=\"comment\"># 将hobbyist列的值转换为布尔值</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"聚合-分组-数据清理\"><a class=\"markdownIt-Anchor\" href=\"#聚合-分组-数据清理\"></a> 聚合、分组、数据清理</h2>\n<p>1、聚合、分组</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].median()) <span class=\"comment\"># 显示数据的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].describe()) <span class=\"comment\"># 显示数据的统计信息</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].value_counts(normalize=<span class=\"literal\">True</span>)) <span class=\"comment\"># normalize=True表示显示百分比</span></span><br><span class=\"line\">country_groups=survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]) <span class=\"comment\"># 按国家分组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups.get_group(<span class=\"string\">&#x27;India&#x27;</span>)) <span class=\"comment\"># 获取印度的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).count()) <span class=\"comment\"># 统计各个国家的数据量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).get_group(<span class=\"string\">&#x27;China&#x27;</span>)[<span class=\"string\">&#x27;OpSys&#x27;</span>].value_counts()) <span class=\"comment\"># 获取中国的数据，并统计操作系统的数量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;OpSys&#x27;</span>].value_counts().loc[<span class=\"string\">&#x27;China&#x27;</span>]) <span class=\"comment\"># 获取中国的数据，并统计操作系统的数量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].median().loc[<span class=\"string\">&#x27;Germany&#x27;</span>]) <span class=\"comment\"># 获取德国的数据，并统计薪资的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].agg([<span class=\"string\">&#x27;median&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>])) <span class=\"comment\"># 统计薪资的中位数和平均数</span></span><br><span class=\"line\">country_filter = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>] == <span class=\"string\">&#x27;United States&#x27;</span> <span class=\"comment\"># 筛选出美国的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[country_filter][<span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;Python&#x27;</span>).<span class=\"built_in\">sum</span>()) <span class=\"comment\"># 统计美国使用Python的人数</span></span><br><span class=\"line\">country_groups = survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).<span class=\"built_in\">sum</span>() <span class=\"comment\"># 按国家分组，并求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups) <span class=\"comment\"># 显示各个国家的数据和</span></span><br><span class=\"line\"></span><br><span class=\"line\">country_groups = survey_df.groupby(<span class=\"string\">&#x27;Country&#x27;</span>)</span><br><span class=\"line\">country_users_python = country_groups[<span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x:x.<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;Python&#x27;</span>).<span class=\"built_in\">sum</span>())</span><br><span class=\"line\">country_respondents = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>].value_counts()</span><br><span class=\"line\">concated_df = pd.concat([country_respondents, country_users_python], axis=<span class=\"string\">&#x27;columns&#x27;</span>, sort=<span class=\"literal\">False</span>) <span class=\"comment\"># 合并两个Series</span></span><br><span class=\"line\">concated_df.rename(columns=&#123;<span class=\"string\">&#x27;Country&#x27;</span>:<span class=\"string\">&#x27;NumIfUsers&#x27;</span>, <span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>:<span class=\"string\">&#x27;NumOfPythonUsers&#x27;</span>&#125;, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 重命名列名</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(concated_df)</span><br></pre></td></tr></table></figure>\n<p>2、数据清理</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna()) <span class=\"comment\"># 删除缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna(axis=<span class=\"string\">&#x27;index&#x27;</span>,how=<span class=\"string\">&#x27;all&#x27;</span>)) <span class=\"comment\"># 删除全为缺失值的行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna(axis=<span class=\"string\">&#x27;index&#x27;</span>,how=<span class=\"string\">&#x27;all&#x27;</span>,subset=[<span class=\"string\">&#x27;CompFreq&#x27;</span>,<span class=\"string\">&#x27;CompTotal&#x27;</span>])) <span class=\"comment\"># 删除CompFreq和CompTotal列全为缺失值的行</span></span><br><span class=\"line\">small_survey_df.replace(<span class=\"string\">&#x27;No&#x27;</span>,np.nan,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将No替换为缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.isna()) <span class=\"comment\"># 查看缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.fillna(<span class=\"string\">&#x27;Missing&#x27;</span>)) <span class=\"comment\"># 填充缺失值为missing</span></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].replace(<span class=\"string\">&#x27;Less than 1 year&#x27;</span>,<span class=\"number\">0</span>,inplace=<span class=\"literal\">True</span>)<span class=\"comment\"># 将Less than 1 year替换为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df)</span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>] = survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].astype(<span class=\"built_in\">float</span>) <span class=\"comment\"># 将YearsCode转换为浮点型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].mean()) <span class=\"comment\"># 计算YearsCode的均值</span></span><br></pre></td></tr></table></figure>\n<p>3、实际应用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">framework_df = survey_df[<span class=\"string\">&#x27;WebframeWorkedWith&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>, expand=<span class=\"literal\">True</span>) <span class=\"comment\"># 拆分数据</span></span><br><span class=\"line\">framework_df.fillna(<span class=\"string\">&#x27;None&#x27;</span>, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将空值填充为None</span></span><br><span class=\"line\">country_groups = survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>] )<span class=\"comment\"># 按国家分组</span></span><br><span class=\"line\">district_frameworks = np.unique(framework_df.values) <span class=\"comment\"># 获取所有的框架</span></span><br><span class=\"line\"></span><br><span class=\"line\">framework_sum_array = []    <span class=\"comment\"># 创建一个空数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> framework <span class=\"keyword\">in</span> district_frameworks:</span><br><span class=\"line\">    new_df = country_groups[<span class=\"string\">&#x27;WebframeWorkedWith&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x: x.<span class=\"built_in\">str</span>.contains(framework).<span class=\"built_in\">sum</span>()) <span class=\"comment\"># 计算每个国家的框架数量</span></span><br><span class=\"line\">    new_df.name = framework</span><br><span class=\"line\">    framework_sum_array.append(new_df)</span><br><span class=\"line\"></span><br><span class=\"line\">user_count = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>].value_counts() <span class=\"comment\"># 计算每个国家的用户数量</span></span><br><span class=\"line\">concated_df = pd.concat([user_count]+framework_sum_array, axis=<span class=\"string\">&#x27;columns&#x27;</span>) <span class=\"comment\"># 拼接数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(concated_df)</span><br><span class=\"line\"></span><br><span class=\"line\">most_popular_df = concated_df.drop(columns = [<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;None&#x27;</span>]).idxmax(axis=<span class=\"number\">1</span>) <span class=\"comment\"># 获取每个国家最流行的框架</span></span><br><span class=\"line\">most_popular_df.name = <span class=\"string\">&#x27;most_popular_framework&#x27;</span></span><br><span class=\"line\">final_df = concated_df.join(most_popular_df)[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;most_popular_framwork&#x27;</span>]] <span class=\"comment\"># 拼接数据</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"横向合并和纵向合并\"><a class=\"markdownIt-Anchor\" href=\"#横向合并和纵向合并\"></a> 横向合并和纵向合并</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">movies = pd.DataFrame(&#123;<span class=\"string\">&#x27;movie_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">                       <span class=\"string\">&#x27;title&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t3&#x27;</span>,<span class=\"string\">&#x27;t5&#x27;</span>,<span class=\"string\">&#x27;t7&#x27;</span>],</span><br><span class=\"line\">                       <span class=\"string\">&#x27;description&#x27;</span>:[<span class=\"string\">&#x27;d1&#x27;</span>,<span class=\"string\">&#x27;d2&#x27;</span>,<span class=\"string\">&#x27;d3&#x27;</span>,<span class=\"string\">&#x27;d5&#x27;</span>,<span class=\"string\">&#x27;d7&#x27;</span>]&#125;)</span><br><span class=\"line\">ratings = pd.DataFrame(&#123;<span class=\"string\">&#x27;user_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>,<span class=\"number\">11</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;movie_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;title&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t3&#x27;</span>,<span class=\"string\">&#x27;t5&#x27;</span>,<span class=\"string\">&#x27;t6&#x27;</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;rating&#x27;</span>:[<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;time&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t4&#x27;</span>,<span class=\"string\">&#x27;t4&#x27;</span>,<span class=\"string\">&#x27;t1&#x27;</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings)) <span class=\"comment\"># 默认是inner join</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>,<span class=\"string\">&#x27;title&#x27;</span>])) <span class=\"comment\"># 指定连接键</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,left_on=<span class=\"string\">&#x27;movie_id&#x27;</span>,right_on=<span class=\"string\">&#x27;user_id&#x27;</span>)) <span class=\"comment\"># 指定左右连接键</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,left_index=<span class=\"literal\">True</span>,right_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 指定左右索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>],suffixes=[<span class=\"string\">&#x27;_left&#x27;</span>,<span class=\"string\">&#x27;_right&#x27;</span>]))<span class=\"comment\"># 指定后缀</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>,<span class=\"string\">&#x27;title&#x27;</span>],how=<span class=\"string\">&#x27;outer&#x27;</span>,indicator=<span class=\"string\">&#x27;indicator&#x27;</span>)) <span class=\"comment\"># 指定连接方式</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(movies.join(ratings,on=<span class=\"string\">&#x27;movie_id&#x27;</span>,lsuffix=<span class=\"string\">&#x27;_left&#x27;</span>,rsuffix=<span class=\"string\">&#x27;_right&#x27;</span>)) <span class=\"comment\"># 用join方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings])) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings],ignore_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings],join=<span class=\"string\">&#x27;inner&#x27;</span>,axis=<span class=\"number\">1</span>)) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(movies._append([ratings,movies],ignore_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 用append方法连接</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"pandas数据可视化\"><a class=\"markdownIt-Anchor\" href=\"#pandas数据可视化\"></a> Pandas数据可视化</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">usa_city_population = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;population&#x27;</span>: [<span class=\"number\">8175133</span>,<span class=\"number\">3792621</span>,<span class=\"number\">2695598</span>,<span class=\"number\">2100263</span>,<span class=\"number\">19354922</span>],&#125;,index=[<span class=\"string\">&#x27;New York&#x27;</span>,<span class=\"string\">&#x27;Los Angeles&#x27;</span>,<span class=\"string\">&#x27;Chicago&#x27;</span>,<span class=\"string\">&#x27;Houston&#x27;</span>,<span class=\"string\">&#x27;Phoenix&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = usa_city_population.plot.pie(y=<span class=\"string\">&#x27;population&#x27;</span>)    <span class=\"comment\"># 画饼图</span></span><br><span class=\"line\">china_city_population = pd.DataFrame(&#123;<span class=\"string\">&#x27;population&#x27;</span>: [<span class=\"number\">15773658</span>,<span class=\"number\">2180357</span>, <span class=\"number\">1208360</span>, <span class=\"number\">1035837</span>, <span class=\"number\">10039107</span>]&#125;,index=[<span class=\"string\">&#x27;广州&#x27;</span>,<span class=\"string\">&#x27;上海&#x27;</span>,<span class=\"string\">&#x27;北京&#x27;</span>,<span class=\"string\">&#x27;天津&#x27;</span>,<span class=\"string\">&#x27;重庆&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = china_city_population.plot.pie(y=<span class=\"string\">&#x27;population&#x27;</span>,figsize = (<span class=\"number\">5</span>,<span class=\"number\">5</span>))    <span class=\"comment\"># 画饼图</span></span><br><span class=\"line\"></span><br><span class=\"line\">top_city_population = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;uas&#x27;</span>:usa_city_population[<span class=\"string\">&#x27;population&#x27;</span>].values,</span><br><span class=\"line\">    <span class=\"string\">&#x27;china&#x27;</span>:china_city_population[<span class=\"string\">&#x27;population&#x27;</span>].values&#125;,index=[<span class=\"string\">&#x27;top1&#x27;</span>,<span class=\"string\">&#x27;top2&#x27;</span>,<span class=\"string\">&#x27;top3&#x27;</span>,<span class=\"string\">&#x27;top4&#x27;</span>,<span class=\"string\">&#x27;top5&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = top_city_population.plot.bar(rot=<span class=\"number\">0</span>)    <span class=\"comment\"># 画柱状图</span></span><br><span class=\"line\">top_city_population.reset_index().plot.bar(x=<span class=\"string\">&#x27;index&#x27;</span>,y=[<span class=\"string\">&#x27;china&#x27;</span>],rot=<span class=\"number\">0</span>)    <span class=\"comment\"># 画柱状图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data=pd.Series(np.random.randn(<span class=\"number\">1000</span>),index=np.arange(<span class=\"number\">1000</span>))</span><br><span class=\"line\">axs = data.cumsum().plot()  <span class=\"comment\"># 画折线图</span></span><br><span class=\"line\">data=pd.DataFrame(np.random.randn(<span class=\"number\">1000</span>,<span class=\"number\">4</span>),index=np.arange(<span class=\"number\">1000</span>),columns=[<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">data=data.cumsum()</span><br><span class=\"line\">data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;B&#x27;</span>,color=<span class=\"string\">&#x27;Green&#x27;</span>,label = <span class=\"string\">&#x27;Class1&#x27;</span>)    <span class=\"comment\"># 画散点图</span></span><br><span class=\"line\">ax1 = data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;B&#x27;</span>,color=<span class=\"string\">&#x27;Green&#x27;</span>,label = <span class=\"string\">&#x27;Class1&#x27;</span>)  <span class=\"comment\"># 画散点图</span></span><br><span class=\"line\">data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;C&#x27;</span>,color=<span class=\"string\">&#x27;Red&#x27;</span>,label = <span class=\"string\">&#x27;Class2&#x27;</span>,ax=ax1)    <span class=\"comment\"># 合并散点图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data.plot.box()    <span class=\"comment\"># 画箱线图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data = np.<span class=\"built_in\">abs</span>(data)</span><br><span class=\"line\">axs = data.plot.area(figsize=(<span class=\"number\">12</span>,<span class=\"number\">4</span>),subplots=<span class=\"literal\">True</span>)    <span class=\"comment\"># 画面积图</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h1 id=\"matplotlib基础\"><a class=\"markdownIt-Anchor\" href=\"#matplotlib基础\"></a> Matplotlib基础</h1>\n<h2 id=\"figure\"><a class=\"markdownIt-Anchor\" href=\"#figure\"></a> figure</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x1 = np.linspace(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">y1 = <span class=\"number\">2</span>*x1</span><br><span class=\"line\">y2 = x1**<span class=\"number\">2</span>-<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">5</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"%22D:%5Chexo%5Csource%5Cimages%5CFigure_1.png%22\" alt=\"plot\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.plot(x1,y2,color=<span class=\"string\">&quot;green&quot;</span>,linewidth=<span class=\"number\">2</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,label=<span class=\"string\">&#x27;y=x^2-10&#x27;</span>) <span class=\"comment\"># 绘制y=x^2-10曲线</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"%22D:/hexo/source/images/Figure_2.png%22\" alt=\"plot\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 画两条曲线</span></span><br><span class=\"line\">fix,axe = plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1,label=<span class=\"string\">&#x27;y=2x&#x27;</span>)</span><br><span class=\"line\">axe.plot(x1,y2,label=<span class=\"string\">&#x27;y=x^2-10&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"%22D:/hexo/source/images/Figure_3.png%22\" alt=\"subplot\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 子图</span></span><br><span class=\"line\">fig=plt.figure()</span><br><span class=\"line\">plot=fig.add_subplot(<span class=\"number\">121</span>) <span class=\"comment\"># 1行2列第1个</span></span><br><span class=\"line\">plot.plot(x1,y1)</span><br><span class=\"line\">plot=fig.add_subplot(<span class=\"number\">122</span>) <span class=\"comment\"># 1行2列第2个</span></span><br><span class=\"line\">plot.plot(x1,y2)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_4.png\" alt=\"subplot\" /></p>\n<h2 id=\"坐标轴和边框\"><a class=\"markdownIt-Anchor\" href=\"#坐标轴和边框\"></a> 坐标轴和边框</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x1 = np.linspace(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\">y1 = <span class=\"number\">2</span>*x1</span><br><span class=\"line\">y2 = x1**<span class=\"number\">2</span>-<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;Title&quot;</span>,color=<span class=\"string\">&#x27;red&#x27;</span>,fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_5.png\" alt=\"标题\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x轴&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;y轴&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_6.png\" alt=\"坐标轴标题\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.xlim((-<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">plt.ylim((-<span class=\"number\">5</span>,<span class=\"number\">10</span>))</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.set_xlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">axe.set_ylim(-<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_7.png\" alt=\"限制坐标轴范围\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置刻度线和边框</span></span><br><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.set_xlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">axe.set_ylim(-<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">axe.set_xticks(np.linspace(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)) <span class=\"comment\"># 设置x轴刻度</span></span><br><span class=\"line\">axe.tick_params(direction=<span class=\"string\">&#x27;in&#x27;</span>,length=<span class=\"number\">5</span>,width=<span class=\"number\">2</span>,color=<span class=\"string\">&#x27;b&#x27;</span>) <span class=\"comment\"># 设置刻度线的方向、长度、宽度和颜色</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_8.png\" alt=\"设置刻度线和边框\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;left&#x27;</span>].set_position((<span class=\"string\">&#x27;axes&#x27;</span>,<span class=\"number\">0.5</span>))</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;bottom&#x27;</span>].set_position((<span class=\"string\">&#x27;axes&#x27;</span>,<span class=\"number\">0.5</span>)) <span class=\"comment\"># 设置坐标轴位置</span></span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;right&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;top&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>) <span class=\"comment\"># 隐藏坐标轴</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_9.png\" alt=\"设置边框\" /></p>\n<h2 id=\"图例-标注\"><a class=\"markdownIt-Anchor\" href=\"#图例-标注\"></a> 图例、标注</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.plot(x1,y1,label=<span class=\"string\">&#x27;y=2x&#x27;</span>)</span><br><span class=\"line\">plt.plot(x1,y2,label=<span class=\"string\">&#x27;y=x^2&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"number\">0</span>,title=<span class=\"string\">&quot;legend title&quot;</span>,shadow=<span class=\"literal\">True</span>,ncol=<span class=\"number\">2</span>,facecolor=<span class=\"string\">&#x27;gray&#x27;</span>) <span class=\"comment\"># loc=0自动选择最佳位置,设置标题，阴影，两列显示，背景为灰色</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_10.png\" alt=\"设置图例\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#text无指向性标注</span></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.text(-<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"string\">&quot;two functions&quot;</span>,family = <span class=\"string\">&quot;Times New Roman&quot;</span>,fontsize = <span class=\"number\">12</span>,style = <span class=\"string\">&quot;italic&quot;</span>,color = <span class=\"string\">&quot;r&quot;</span>,weight = <span class=\"string\">&quot;black&quot;</span>,bbox = <span class=\"built_in\">dict</span>(boxstyle=<span class=\"string\">&quot;round&quot;</span>,facecolor = <span class=\"string\">&quot;none&quot;</span>,ec = <span class=\"string\">&quot;b&quot;</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_10.png\" alt=\"无指向性标注\" /></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#annotate指向性标注</span></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.annotate(<span class=\"string\">&quot;y=2x&quot;</span>,xy=(<span class=\"number\">1</span>,<span class=\"number\">2</span>),xytext=(<span class=\"number\">2</span>,<span class=\"number\">0</span>),arrowprops=<span class=\"built_in\">dict</span>(arrowstyle=<span class=\"string\">&quot;-&gt;&quot;</span>,linestyle=<span class=\"string\">&quot;--&quot;</span>,connectionstyle=<span class=\"string\">&quot;arc3,rad=.5&quot;</span>),bbox=<span class=\"built_in\">dict</span>(boxstyle=<span class=\"string\">&quot;round,pad=0.5&quot;</span>,fc=<span class=\"string\">&quot;none&quot;</span>,ec=<span class=\"string\">&quot;gray&quot;</span>))    <span class=\"comment\">#xytext是注释的位置，xy是指向的位置</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"D:%5Chexo%5Csource%5Cimages%5CFigure_11.png\" alt=\"指向性标注\" /></p>\n<h2 id=\"多图合并-折线图-散点图-柱状图-直方图-面积图-堆叠面积图-箱型图-饼图-热力图-3d图\"><a class=\"markdownIt-Anchor\" href=\"#多图合并-折线图-散点图-柱状图-直方图-面积图-堆叠面积图-箱型图-饼图-热力图-3d图\"></a> 多图合并、折线图、散点图、柱状图、直方图、面积图、堆叠面积图、箱型图、饼图、热力图、3D图</h2>\n<h3 id=\"多图合并\"><a class=\"markdownIt-Anchor\" href=\"#多图合并\"></a> 多图合并</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>) <span class=\"comment\"># 将窗口分为2行3列，当前位置为2</span></span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,2&quot;</span>)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,4&quot;</span>)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,5&quot;</span>)</span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">2</span>)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>][<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改高度</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">2</span>, figsize = (<span class=\"number\">10</span>, <span class=\"number\">4</span>)) <span class=\"comment\"># inches (width, height)</span></span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改高度</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">1</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制多图</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows=<span class=\"number\">2</span>, ncols=<span class=\"number\">2</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">axe[<span class=\"number\">0</span>][<span class=\"number\">0</span>].set_title(<span class=\"string\">&quot;1st subplot&quot;</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">1</span>].set_title(<span class=\"string\">&quot;4th subplot&quot;</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">0</span>].plot([<span class=\"number\">0</span>,<span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改变宽度</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,2,1&quot;</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,2,3&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,1,2&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用GridSpec</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.gridspec <span class=\"keyword\">import</span> GridSpec</span><br><span class=\"line\">fig = plt.figure(dpi=<span class=\"number\">100</span>) <span class=\"comment\"># the resolution in dots per inch</span></span><br><span class=\"line\">gs = GridSpec(<span class=\"number\">2</span>, <span class=\"number\">2</span>, width_ratios=[<span class=\"number\">1</span>, <span class=\"number\">2</span>], height_ratios=[<span class=\"number\">3</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">ax1 = fig.add_subplot(gs[<span class=\"number\">0</span>]) <span class=\"comment\">#gs[0,:]表示占据整列,gs[:,0]表示占据整行</span></span><br><span class=\"line\">ax1.text(<span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"string\">&quot;1st plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax1.plot([<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax2 = fig.add_subplot(gs[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax2.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;2nd plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax3 = fig.add_subplot(gs[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax3.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;3rd plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax4 = fig.add_subplot(gs[<span class=\"number\">3</span>])</span><br><span class=\"line\">ax4.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;4th plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 图中图</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">y = np.sin(x)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax1 = plt.subplots()</span><br><span class=\"line\">ax1.plot(x, y, <span class=\"string\">&#x27;orange&#x27;</span>)</span><br><span class=\"line\">ax1.set_xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">ax1.set_ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">ax1.set_title(<span class=\"string\">&#x27;Big 1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">left, bottom, width, height = <span class=\"number\">0.25</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.2</span></span><br><span class=\"line\">ax2 = fig.add_axes([left, bottom, width, height])</span><br><span class=\"line\">ax2.plot(x, y2, <span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">ax2.set_xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">ax2.set_ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">ax2.set_title(<span class=\"string\">&#x27;small 1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.axes([<span class=\"number\">0.65</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.25</span>])</span><br><span class=\"line\">plt.plot(x, x ** <span class=\"number\">2</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;small 2&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"折线图\"><a class=\"markdownIt-Anchor\" href=\"#折线图\"></a> 折线图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#折线图</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">1</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;r&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">&quot;l1&quot;</span>) <span class=\"comment\"># solid line style, red</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">2</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>, color=<span class=\"string\">&#x27;y&#x27;</span>, marker=<span class=\"string\">&#x27;s&#x27;</span>, label=<span class=\"string\">&quot;l2&quot;</span>) <span class=\"comment\"># dashed line style, yellow, square</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">3</span>, linestyle=<span class=\"string\">&#x27;-.&#x27;</span>, color=<span class=\"string\">&#x27;m&#x27;</span>, marker=<span class=\"string\">&#x27;|&#x27;</span>, label=<span class=\"string\">&quot;l3&quot;</span>) <span class=\"comment\"># dash-dot line style, magenta, |</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">4</span>, linestyle=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;g&#x27;</span>, marker=<span class=\"string\">&#x27;v&#x27;</span>, label=<span class=\"string\">&quot;l4&quot;</span>) <span class=\"comment\"># dotted line style, green</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;b&#x27;</span>, marker=<span class=\"string\">&#x27;*&#x27;</span>, label=<span class=\"string\">&quot;l5&quot;</span>) <span class=\"comment\"># solid, blue,star </span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">6</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;c&#x27;</span>, marker=<span class=\"string\">&#x27;o&#x27;</span>, label=<span class=\"string\">&quot;l6&quot;</span>) <span class=\"comment\"># solid, cyan, circle </span></span><br><span class=\"line\">axe.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axe.plot(x, np.sin(x), <span class=\"string\">&#x27;--b&#x27;</span> ,x + <span class=\"number\">1</span>, np.sin(x), <span class=\"string\">&#x27;.r&#x27;</span>) <span class=\"comment\"># dashed line blue, point marker red</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"散点图\"><a class=\"markdownIt-Anchor\" href=\"#散点图\"></a> 散点图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#散点图</span></span><br><span class=\"line\"><span class=\"comment\"># scatter allows us to control the properties of each individual data point, including size, color, edge color, and more.</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">rng = np.random.RandomState(<span class=\"number\">66</span>)</span><br><span class=\"line\">x = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">y = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">colors = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">sizes = rng.randn(<span class=\"number\">50</span>) * <span class=\"number\">500</span></span><br><span class=\"line\">axe.grid()</span><br><span class=\"line\">axe.scatter(x, y, c=colors, s=sizes, alpha=<span class=\"number\">0.5</span>) <span class=\"comment\"># alpha透明度</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"柱状图\"><a class=\"markdownIt-Anchor\" href=\"#柱状图\"></a> 柱状图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 柱状对比</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\"></span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.bar(index, values1, width=<span class=\"number\">0.4</span>)</span><br><span class=\"line\">axe.bar(index + <span class=\"number\">0.4</span>, values2, width=<span class=\"number\">0.4</span>)</span><br><span class=\"line\">axe.set_xticks(index+<span class=\"number\">0.15</span>)</span><br><span class=\"line\">axe.set_xticklabels(label)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#柱状总和</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.bar(index, values1)</span><br><span class=\"line\">axe.bar(index, values2, bottom=values1)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#横向柱状总和barh</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.barh(index, values1)</span><br><span class=\"line\">axe.barh(index, values2, left=values1)</span><br><span class=\"line\">axe.set_yticks(index)</span><br><span class=\"line\">axe.set_yticklabels(label)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"直方图\"><a class=\"markdownIt-Anchor\" href=\"#直方图\"></a> 直方图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示多个直方图</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">data1 = np.random.normal(-<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">data2 = np.random.normal(-<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">data3 = np.random.normal(-<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">axe.hist(data1, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data1&quot;</span>)</span><br><span class=\"line\">axe.hist(data2, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data2&quot;</span>)</span><br><span class=\"line\">axe.hist(data3, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data3&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">axe.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#做出外边界曲线</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">sigma = <span class=\"number\">1</span></span><br><span class=\"line\">mu = <span class=\"number\">0</span></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">data = np.random.normal(mu, sigma, <span class=\"number\">5000</span>)</span><br><span class=\"line\">n, bins, _ = axe.hist(data, bins=<span class=\"number\">50</span>, alpha=<span class=\"number\">0.35</span>, density=<span class=\"literal\">True</span>) </span><br><span class=\"line\"><span class=\"comment\"># n: the values of the histogram bins, bins: the edges of the bins</span></span><br><span class=\"line\"></span><br><span class=\"line\">y = ((<span class=\"number\">1</span> / (np.sqrt(<span class=\"number\">2</span> * np.pi) * sigma)) *</span><br><span class=\"line\">     np.exp(-<span class=\"number\">0.5</span> * (<span class=\"number\">1</span> / sigma * (bins - mu))**<span class=\"number\">2</span>))</span><br><span class=\"line\">axe.plot(bins, y, <span class=\"string\">&#x27;--r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"面积图\"><a class=\"markdownIt-Anchor\" href=\"#面积图\"></a> 面积图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#面积图，并填充不同颜色</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.arange(<span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">0.01</span>)</span><br><span class=\"line\">y = np.sin(x * np.pi)</span><br><span class=\"line\">axe.fill_between(x, y, where=(y &gt; <span class=\"number\">0</span>), facecolor = <span class=\"string\">&#x27;b&#x27;</span>, alpha = <span class=\"number\">0.7</span>)</span><br><span class=\"line\">axe.fill_between(x, y, where=(y &lt; <span class=\"number\">0</span>), facecolor = <span class=\"string\">&#x27;g&#x27;</span>, alpha = <span class=\"number\">0.7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#堆叠面积图stackplot</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows=<span class=\"number\">2</span>, figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">y = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>]</span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">y1 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>) <span class=\"comment\"># low = 1, high = 5, size = 6</span></span><br><span class=\"line\">y2 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y3 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y4 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">30</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y5 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y6 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">20</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y7 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">labels = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">axe[<span class=\"number\">0</span>].stackplot(x, y1, y2, y3, y4, y5, y6, y7, baseline=<span class=\"string\">&quot;sym&quot;</span>) <span class=\"comment\"># 基本线将会水平对称与0 (the baseline stack is going to be symmetric around the horizontal 0 line)</span></span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_xticks(x)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_xticklabels(labels)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_title(<span class=\"string\">&quot;Symmetric&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">axe[<span class=\"number\">1</span>].stackplot(x, y1, y2, y3, y4, y5, y6, y7, baseline=<span class=\"string\">&quot;wiggle&quot;</span>) <span class=\"comment\"># 重设基本线，以至于最小化平方斜率的总和 (minimizes the sum of the squared slopes.)</span></span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_xticks(x) </span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_xticklabels(labels)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_title(<span class=\"string\">&quot;Wiggle&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"箱型图\"><a class=\"markdownIt-Anchor\" href=\"#箱型图\"></a> 箱型图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">labels = [<span class=\"string\">&quot;Label1&quot;</span>, <span class=\"string\">&quot;Label2&quot;</span>, <span class=\"string\">&quot;Label3&quot;</span>, <span class=\"string\">&quot;Label4&quot;</span>]</span><br><span class=\"line\">values = []</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">100</span>, <span class=\"number\">20</span>, <span class=\"number\">200</span>)) <span class=\"comment\"># mean = 100, std = 20 for 200 values</span></span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">150</span>, <span class=\"number\">50</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">150</span>, <span class=\"number\">70</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">axe.boxplot(values, labels=labels)</span><br><span class=\"line\">axe.boxplot(values, labels=labels, vert=<span class=\"literal\">False</span>)</span><br><span class=\"line\">axe.boxplot(values, labels=labels,patch_artist=<span class=\"literal\">True</span>,</span><br><span class=\"line\">            boxprops=<span class=\"built_in\">dict</span>(facecolor=<span class=\"string\">&#x27;teal&#x27;</span>, color=<span class=\"string\">&#x27;r&#x27;</span>))</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"饼图\"><a class=\"markdownIt-Anchor\" href=\"#饼图\"></a> 饼图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">labels = [<span class=\"string\">&quot;P1&quot;</span>, <span class=\"string\">&quot;P2&quot;</span>, <span class=\"string\">&quot;P3&quot;</span>, <span class=\"string\">&quot;P4&quot;</span>, <span class=\"string\">&quot;P5&quot;</span>, <span class=\"string\">&quot;P6&quot;</span>]</span><br><span class=\"line\">labels2 = [<span class=\"string\">&quot;S1&quot;</span>, <span class=\"string\">&quot;S2&quot;</span>, <span class=\"string\">&quot;S3&quot;</span>]</span><br><span class=\"line\">values = [<span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">88</span>, <span class=\"number\">66</span>, <span class=\"number\">110</span>, <span class=\"number\">168</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">500</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>]</span><br><span class=\"line\">explode = [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0.3</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\">explode2 = [<span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># outer circle</span></span><br><span class=\"line\"><span class=\"comment\"># pctdistance is used to control the distance between the center of the circle and percentage value.</span></span><br><span class=\"line\"><span class=\"comment\"># labeldistance is used to control the distance between the center of the circle and the label.</span></span><br><span class=\"line\">axe.pie(values, radius=<span class=\"number\">1.5</span>, wedgeprops=<span class=\"built_in\">dict</span>(width=<span class=\"number\">0.5</span>), autopct=<span class=\"string\">&#x27;%.2f%%&#x27;</span>, </span><br><span class=\"line\">        pctdistance=<span class=\"number\">0.8</span>, labels=labels, labeldistance=<span class=\"number\">1.05</span>, explode=explode)</span><br><span class=\"line\"><span class=\"comment\"># inner circle</span></span><br><span class=\"line\">axe.pie(values2, radius=<span class=\"number\">1</span>, wedgeprops=<span class=\"built_in\">dict</span>(width=<span class=\"number\">0.5</span>), autopct=<span class=\"string\">&#x27;%.2f%%&#x27;</span>, </span><br><span class=\"line\">        pctdistance=<span class=\"number\">0.8</span>, labels=labels2, labeldistance=<span class=\"number\">0.3</span>, explode=explode2)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"热力图\"><a class=\"markdownIt-Anchor\" href=\"#热力图\"></a> 热力图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">axe.set_xticks(np.arange(<span class=\"built_in\">len</span>(xlabels)))</span><br><span class=\"line\">axe.set_yticks(np.arange(<span class=\"built_in\">len</span>(ylabels)))</span><br><span class=\"line\">axe.set_xticklabels(xlabels)</span><br><span class=\"line\">axe.set_yticklabels(ylabels)</span><br><span class=\"line\">im = axe.imshow(values)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(xlabels)):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(ylabels)):</span><br><span class=\"line\">        text = axe.text(i, j, values[i, j],</span><br><span class=\"line\">                       horizontalalignment=<span class=\"string\">&quot;center&quot;</span>, verticalalignment=<span class=\"string\">&quot;center&quot;</span>, color=<span class=\"string\">&quot;w&quot;</span>)<span class=\"comment\">#显示文本</span></span><br><span class=\"line\">axe.figure.colorbar(im, ax=axe)<span class=\"comment\">#颜色条</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<h3 id=\"3d图\"><a class=\"markdownIt-Anchor\" href=\"#3d图\"></a> 3D图</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig = plt.figure(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axes = plt.axes(projection = <span class=\"string\">&quot;3d&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">Y = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">X, Y = np.meshgrid(X, Y)</span><br><span class=\"line\">Z = np.cos(np.sqrt(X**<span class=\"number\">2</span> + Y**<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">surf = axes.plot_surface(X, Y, Z, cmap=plt.get_cmap(<span class=\"string\">&quot;plasma&quot;</span>))</span><br><span class=\"line\">plt.colorbar(surf)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>","tags":["数据处理"]},{"title":"网站为何？","url":"/2024/03/31/%E5%86%99%E4%B8%80%E5%86%99%E6%96%87%E7%AB%A0/","content":"<h1 id=\"思路来自\"><a class=\"markdownIt-Anchor\" href=\"#思路来自\"></a> 思路来自..</h1>\n<p>去年年末第一次做了课设。对于一个设计，时间短，任务重；但对于一个作业，一个完整的解决问题的思路而言，时间还是太长。经常写着写着就忘了在这之前想到的好点子。这时我想起了补工程地质的时候查到的美国地质学家自己的石头网站，有关科普的，有关旅程的，有关成长的，一切都可以展现在小小的网页上。这是建网站的第一个契机。</p>\n<p>最近又要开始做课设，更兼需要了解如何写论文，如何使用Linux，这是三项十分重大的任务，是没有笔记万万完成不了的。我曾经尝试使用OneNote做跟踪式的思路记录，但是发现输入公式和表格是在太费时间，而且移植性很差，copy到word里简直就是灾难。那天突然想起来markdown，想起来可以自己建一个网站。某些契机下决定使用hexo建立自己的第一个网站，这算是网站的第一篇文章，就算一个开篇题词了。</p>\n<h1 id=\"想在网站上写点什么\"><a class=\"markdownIt-Anchor\" href=\"#想在网站上写点什么\"></a> 想在网站上写点什么？</h1>\n<p>很重要的部分是课设的编程进度和编程思路，同时需要记录latex语言的学习进展。其他的诸如对计算机科学领域兴趣点的发掘，专业结合的idea，日后论文的选题及进度都需要挂在网站上作为一个记录。</p>\n<p>当然，还有一个很重要的作用，就是练习使用markdown，争取能更方便更美观的和整个网络领域交流。</p>\n<p><em>也就是个大型笔记本，努努力，还能交互的那种</em></p>\n<h1 id=\"祝课设-论文及cs学习一切顺利\"><a class=\"markdownIt-Anchor\" href=\"#祝课设-论文及cs学习一切顺利\"></a> 祝课设、论文及CS学习一切顺利。</h1>\n"},{"title":"word排版学习","url":"/2024/07/04/word%E6%8E%92%E7%89%88%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"如何给每个公式后面添加编号\"><a class=\"markdownIt-Anchor\" href=\"#如何给每个公式后面添加编号\"></a> 如何给每个公式后面添加编号？</h2>\n<p>首先在公式框内输入#()，将光标移入括号内，随后点入插入-文本部件-域，</p>\n<p><img src=\"/images/yu.png\" alt=\"域\" /></p>\n<p>进入设置域的属性，</p>\n<p><img src=\"/images/yushuxing.png\" alt=\"域属性\" /></p>\n<p>确定后可以看见括号内已经出现了数字，这时候把光标移出括号，按下回车，就实现了公式编号。在后续的公式中重复上述步骤即可自动编号。</p>\n<p>❗注意：</p>\n<ol>\n<li>括号一定要使用英文版</li>\n<li>在写入编号的时候检查一下公式的括号是否完整，公式本身是否正确，如果不正确是不能编号的</li>\n<li>光标一定要移到编号括号以外，公式格式以内再回车</li>\n</ol>\n<h2 id=\"word转pdf图片错位-长宽大小改变怎么办\"><a class=\"markdownIt-Anchor\" href=\"#word转pdf图片错位-长宽大小改变怎么办\"></a> word转pdf图片错位、长宽大小改变怎么办？</h2>\n<p>在word内转pdf时选择 打印-打印为Adobe Acrobat pdf-保存至桌面 即可解决。</p>\n","tags":["课设"]},{"title":"数据结构与算法分析学习笔记","url":"/2024/10/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h1 id=\"第一章-程序设计综述\"><a class=\"markdownIt-Anchor\" href=\"#第一章-程序设计综述\"></a> 第一章 程序设计：综述</h1>\n<h2 id=\"13-递归简论\"><a class=\"markdownIt-Anchor\" href=\"#13-递归简论\"></a> 1.3 递归简论</h2>\n<p>编写递归程序时，要牢记递归的四条基本法则：</p>\n<ul>\n<li>基准情形</li>\n<li>要有进展</li>\n<li>设计法则</li>\n<li>合成效益法则</li>\n</ul>\n<h2 id=\"15-c细节\"><a class=\"markdownIt-Anchor\" href=\"#15-c细节\"></a> 1.5 C++细节</h2>\n<h3 id=\"151-指针\"><a class=\"markdownIt-Anchor\" href=\"#151-指针\"></a> 1.5.1 指针</h3>\n<p>指针变量是一种存放另一对象所占用的地址的变量。例如如下例程：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tIntCell* m;</span><br><span class=\"line\">\tm = <span class=\"keyword\">new</span> <span class=\"built_in\">IntCell</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tm-&gt;<span class=\"built_in\">write</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Cell contents: &quot;</span> &lt;&lt; m-&gt;<span class=\"built_in\">read</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> m;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>声明</li>\n</ul>\n<p>其中，星号*表明m是一个指针变量，允许他指向一个IntCell对象。m的值是他所指向的对象的地址。</p>\n<ul>\n<li>对象的动态创建</li>\n</ul>\n<p>操作符new返回一个指向新创建对象的指针。</p>\n<ul>\n<li>垃圾收集与delete</li>\n</ul>\n<p>当一个通过new操作符被分配地址的对象不再被引用时，必须（通过一个指针）对该对象应用delete操作，否则该对象使用的内存就会丢失。一个重要的规则是，在能够使用自动变量的时候不要使用new操作符。</p>\n<ul>\n<li>指针的赋值和比较</li>\n</ul>\n<p>在C++中，指针变量的赋值和比较是基于指针的值，也即基于指针所存储的内存地址进行的。于是，如果他们指向相同的对象，两个指针变量相等，如果他们指向不同的对象，即使他们指向的两个对象本身是相等的，其值也是不相等的。</p>\n<ul>\n<li>通过指针访问对象的成员</li>\n</ul>\n<p>如果一个指针变量指向一个类类型的对象，那么所指对象的（可见）成员能够通过-&gt;操作符被访问。</p>\n<h3 id=\"152-左值-右值和引用\"><a class=\"markdownIt-Anchor\" href=\"#152-左值-右值和引用\"></a> 1.5.2 左值、右值和引用</h3>\n<p>如果程序中有一个变量名，那么他就是一个左值。</p>\n<p>在C++11中，<em>左值引用</em> 的声明是通过在某个类型后防止一个符号 <em>&amp;</em> 来进行的。<em>右值引用</em> 是通过在某个类型后面放置一个 <em>&amp;&amp;</em> 来进行的。</p>\n<h4 id=\"左值引用的用途\"><a class=\"markdownIt-Anchor\" href=\"#左值引用的用途\"></a> 左值引用的用途</h4>\n<p>1、给结构复杂的名称起别名</p>\n<p>2、范围for循环</p>\n<p>3、避免复制</p>\n","tags":["学习记录"]},{"title":"水文预报课设","url":"/2024/06/28/%E6%B0%B4%E6%96%87%E9%A2%84%E6%8A%A5%E8%AF%BE%E8%AE%BE/","content":"<h2 id=\"任务\"><a class=\"markdownIt-Anchor\" href=\"#任务\"></a> 任务</h2>\n<p>本学期第二个课设为水文预报，根据流域选取标准，选择旬河流域作为产汇流计算流域。</p>\n<h3 id=\"设计内容\"><a class=\"markdownIt-Anchor\" href=\"#设计内容\"></a> 设计内容</h3>\n<ul>\n<li>洪水场次资料的整理</li>\n<li>产流方案设计</li>\n<li>汇流方案</li>\n<li>精度评价</li>\n</ul>\n<p>最终需要给出预报过程图，包括降雨、实测流量、模拟流量。</p>\n<h3 id=\"设计所需数据\"><a class=\"markdownIt-Anchor\" href=\"#设计所需数据\"></a> 设计所需数据</h3>\n<p>由打包文件.DAT给出，其中退水曲线蓄泄系数取 K<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>=48h ，流域集水面积6448km²。</p>\n<h4 id=\"洪水场次资料的整理\"><a class=\"markdownIt-Anchor\" href=\"#洪水场次资料的整理\"></a> 洪水场次资料的整理</h4>\n<ul>\n<li>暴雨洪水场次的划分：利用预留的1987——1990划分场次洪水资料，根据已给出的洪水场次计算各场洪水的实测洪峰、实测峰现时间和实测洪水总量。</li>\n</ul>\n<p>具体时间如下表：</p>\n<table>\n<thead>\n<tr>\n<th>洪号</th>\n<th>流量起止时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>870513</td>\n<td>05.10-05.20</td>\n</tr>\n<tr>\n<td>870614</td>\n<td>06.11-06.20</td>\n</tr>\n<tr>\n<td>870804</td>\n<td>08.02-08.12</td>\n</tr>\n<tr>\n<td>870903</td>\n<td>09.01-09.09</td>\n</tr>\n<tr>\n<td>880407</td>\n<td>04.01-04.20</td>\n</tr>\n<tr>\n<td>880505</td>\n<td>05.05-05.19</td>\n</tr>\n<tr>\n<td>880705</td>\n<td>07.02-07.16</td>\n</tr>\n<tr>\n<td>880819</td>\n<td>08.17-08.24</td>\n</tr>\n<tr>\n<td>890429</td>\n<td>04.26-05.09</td>\n</tr>\n<tr>\n<td>890711</td>\n<td>07.05-07.22</td>\n</tr>\n<tr>\n<td>890820</td>\n<td>08.14-08.25</td>\n</tr>\n<tr>\n<td>890928</td>\n<td>09.23-10.04</td>\n</tr>\n<tr>\n<td>900501</td>\n<td>04.28-05.13</td>\n</tr>\n<tr>\n<td>900701</td>\n<td>06.29-07.11</td>\n</tr>\n<tr>\n<td>900816</td>\n<td>08.12-08.28</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>为了研究暴雨与洪水之间的关系，必须对流量过程线加以分割（次洪划分），又由于不同水源运动规律不同，要把洪水径流分割为地上径流和地下径流（径流成分划分）。</li>\n</ul>\n<h5 id=\"计算各场洪水的洪水总量和次洪径流深\"><a class=\"markdownIt-Anchor\" href=\"#计算各场洪水的洪水总量和次洪径流深\"></a> 计算各场洪水的洪水总量和次洪径流深</h5>\n<p>由退水指数方程</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>Q</mi><mi>t</mi></msub><mo>=</mo><msub><mi>Q</mi><mn>0</mn></msub><msup><mi>e</mi><mfrac><mi>t</mi><mi>K</mi></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">Q_t = Q_0e^{\\frac{t}{K}} \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.18378em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.98934em;\"><span style=\"top:-3.4130000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8233428571428572em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>计算各次洪水的退水曲线。</p>\n<p>以870513为例，利用蓄泄关系法对洪水径流深进行计算，计算公式如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub><mo>=</mo><mn>3.6</mn><mi mathvariant=\"normal\">Δ</mi><mi>t</mi><mo stretchy=\"false\">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>2</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>Q</mi><mi>i</mi></msub><mo>+</mo><mfrac><mrow><msub><mi>Q</mi><mn>1</mn></msub><mo>+</mo><msub><mi>Q</mi><mi>n</mi></msub></mrow><mn>2</mn></mfrac><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>A</mi><mo>+</mo><msub><mi>R</mi><mrow><mi>e</mi><mtext>末</mtext></mrow></msub><mo>−</mo><msub><mi>R</mi><mrow><mi>e</mi><mtext>初</mtext></mrow></msub></mrow><annotation encoding=\"application/x-tex\">R_0 = 3.6\\Delta t(\\sum_{i=2}^{n-1}Q_i+\\frac{Q_1+Q_n}{2})/A+R_{e末}-R_{e初} \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0787820000000004em;vertical-align:-1.277669em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">6</span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0463299999999998em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603299999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"mord cjk_fallback mtight\">末</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"mord cjk_fallback mtight\">初</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\">t</span></span></span></span>为24h，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mtext>末</mtext></mrow></msub><mo>−</mo><msub><mi>R</mi><mrow><mi>e</mi><mtext>初</mtext></mrow></msub><mo>=</mo><mn>3.6</mn><mi>K</mi><mo stretchy=\"false\">(</mo><msub><mi>Q</mi><mtext>末</mtext></msub><mo>−</mo><msub><mi>Q</mi><mtext>初</mtext></msub><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">R_{e末}-R_{e初}=3.6K(Q_末-Q_初)/A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"mord cjk_fallback mtight\">末</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"mord cjk_fallback mtight\">初</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">6</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">末</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord cjk_fallback mtight\">初</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">A</span></span></span></span>。</p>\n<p>IMP：不透水面积比例</p>\n<h3 id=\"计算顺序调整建立产流计算模型\"><a class=\"markdownIt-Anchor\" href=\"#计算顺序调整建立产流计算模型\"></a> 计算顺序调整:建立产流计算模型</h3>\n<p>重新研读任务书后，现将设计顺序改为先建立产流模型，明确计算过程，再梳理需要优化率定的参数。</p>\n<ul>\n<li>首先根据三层蒸发模型计算出该时段的EU、EL、ED，并计算总蒸散发量E。三层蒸发模型具体计算情况分为以下四种：</li>\n</ul>\n<ol>\n<li>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo>≥</mo><msub><mi>E</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">WU+P \\ge E_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>时</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>E</mi><mi>U</mi></msub><mo>=</mo><msub><mi>E</mi><mi>P</mi></msub><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>L</mi></msub><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>D</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">E_U = E_P , E_L = 0 , E_D = 0 \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<ol start=\"2\">\n<li>当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo>&lt;</mo><msub><mi>E</mi><mi>P</mi></msub><mo separator=\"true\">,</mo><mi>W</mi><mi>L</mi><mo>≥</mo><mi>C</mi><mo>⋅</mo><mi>W</mi><mi>L</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">WU+P &lt; E_P , WL \\ge C \\cdot WLM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>时</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>E</mi><mi>U</mi></msub><mo>=</mo><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>L</mi></msub><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>E</mi><mi>P</mi></msub><mo>−</mo><msub><mi>E</mi><mi>U</mi></msub><mo stretchy=\"false\">)</mo><mi>W</mi><mi>L</mi><mi mathvariant=\"normal\">/</mi><mi>W</mi><mi>L</mi><mi>M</mi><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>D</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">E_U = WU+P , E_L = (E_P-E_U)WL/WLM , E_D = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<ol start=\"3\">\n<li>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo>&lt;</mo><msub><mi>E</mi><mi>P</mi></msub><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>E</mi><mi>P</mi></msub><mo>−</mo><msub><mi>E</mi><mi>U</mi></msub><mo stretchy=\"false\">)</mo><mo>≥</mo><mi>C</mi><mo>⋅</mo><mi>W</mi><mi>L</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">WU+P&lt;E_P , C(E_P-E_U) \\ge C \\cdot WLM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>时</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>E</mi><mi>U</mi></msub><mo>=</mo><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>L</mi></msub><mo>=</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>E</mi><mi>P</mi></msub><mo>−</mo><msub><mi>E</mi><mi>U</mi></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>D</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">E_U = WU+P , E_L = C(E_P-E_U) , E_D = 0\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span></span></p>\n<ol start=\"4\">\n<li>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo>&lt;</mo><msub><mi>E</mi><mi>P</mi></msub><mo separator=\"true\">,</mo><mi>W</mi><mi>L</mi><mo>&lt;</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>E</mi><mi>P</mi></msub><mo>−</mo><msub><mi>E</mi><mi>U</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">WU+P&lt;E_P , WL &lt; C(E_P-E_U)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>时</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>E</mi><mi>U</mi></msub><mo>=</mo><mi>W</mi><mi>U</mi><mo>+</mo><mi>P</mi><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>L</mi></msub><mo>=</mo><mi>W</mi><mi>L</mi><mo separator=\"true\">,</mo><msub><mi>E</mi><mi>D</mi></msub><mo>=</mo><mi>C</mi><mo stretchy=\"false\">(</mo><msub><mi>E</mi><mi>P</mi></msub><mo>−</mo><msub><mi>E</mi><mi>U</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>E</mi><mi>L</mi></msub></mrow><annotation encoding=\"application/x-tex\">E_U = WU+P , E_L = WL , E_D = C(E_P - E_U) - E_L\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\">L</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>式中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>E</mi><mi>P</mi></msub></mrow><annotation encoding=\"application/x-tex\">E_P</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>为流域蒸发能力，WL为下层土壤含水量，WLM为下层土壤含水容量，C为蒸发扩散系数，WU为上层土壤含水量，P为降雨量。</p>\n<ul>\n<li>算得蒸散发量之后可以得到净雨量PE，通过PE推求产流量。</li>\n</ul>\n<p>首先需要计算初始土湿分布以计算流域产流比例，确定后续的产流量。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mo>=</mo><mi>W</mi><mi>M</mi><mi>M</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>W</mi><mi mathvariant=\"normal\">/</mi><mi>W</mi><mi>M</mi><msup><mo stretchy=\"false\">)</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>b</mi></mrow></mfrac></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a = WMM[1-(1-W/WM)^{\\frac{1}{1+b}}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.25402em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.00402em;\"><span style=\"top:-3.4130000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.40352142857142853em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>在初始土湿为W的条件下，可以建立降雨径流的关系，分为以下两种情况：</p>\n<ol>\n<li>$a + PE \\ge WMM $</li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>P</mi><mi>E</mi><mo>+</mo><mi>W</mi><mo>−</mo><mi>W</mi><mi>M</mi><mo>+</mo><mi>W</mi><mi>M</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>P</mi><mi>E</mi><mo>+</mo><mi>a</mi></mrow><mrow><mi>W</mi><mi>M</mi><mi>M</mi></mrow></mfrac><msup><mo stretchy=\"false\">)</mo><mrow><mn>1</mn><mo>+</mo><mi>b</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">R = PE + W - WM + WM(1 - \\frac{PE+a}{WMM})^{1+b}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ol start=\"2\">\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>+</mo><mi>P</mi><mi>E</mi><mo>&gt;</mo><mi>W</mi><mi>M</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">a + PE &gt; WMM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mo>=</mo><mi>P</mi><mi>E</mi><mo>−</mo><mo stretchy=\"false\">(</mo><mi>W</mi><mi>M</mi><mo>−</mo><mi>W</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">R = PE - (WM - W)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>根据研究，流域坡地上的降雨产流量因产流过程的条件和运动路径不同，受流域的调蓄作用不同，各径流成分在流量过程线上的反映是不一样的。在实际工作中，因为需要按各种径流成分分别进行计算或模拟，因而要对产流量进行水源划分。</li>\n</ul>\n<p>本次课程设计需要将其划分为地面径流、壤中流和地下径流以备后续计算。</p>\n<p>经过分析概化河槽一侧的土壤剖面,可以得出径流特性可用水箱概念模型来描述和分水源。与蓄满产流类似，由于下垫面的不均匀性，自由水蓄量也存在空间分布不均匀性。因此，应考虑产流面积和自由水蓄量空间分布不均匀的影响。<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<p>根据上述理论，可以列出流域平均自由水蓄积容量的关系：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mi>m</mi></msub><mo>=</mo><mfrac><msub><mi>S</mi><mrow><mi>m</mi><mi>m</mi></mrow></msub><mrow><mn>1</mn><mo>+</mo><mi>E</mi><mi>X</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">S_m = \\frac{S_{mm}}{1+EX}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>设时段初始自由蓄水量为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">S_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,其相应纵坐标为AU，则考虑上时段和本时段产流面积有不同的转换有：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>U</mi><mo>=</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>m</mi></mrow></msub><mo stretchy=\"false\">[</mo><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>⋅</mo><mi>F</mi><msub><mi>R</mi><mn>1</mn></msub><mi mathvariant=\"normal\">/</mi><mi>F</mi><mi>R</mi></mrow><msub><mi>S</mi><mi>m</mi></msub></mfrac><msup><mo stretchy=\"false\">)</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>E</mi><mi>X</mi></mrow></mfrac></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">AU = S_{mm}[1-(1-\\frac{S_1 \\cdot FR_1/FR}{S_m})^{\\frac{1}{1+EX}}]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.00402em;\"><span style=\"top:-3.4130000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.40352142857142853em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p>有了上列计算式，即可划分水源。设扣除雨期蒸发后的降雨量为PE，可分为以下两种情况：</p>\n<ol>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>E</mi><mo>+</mo><mi>A</mi><mi>U</mi><mo>&lt;</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">PE+AU&lt;S_{mm}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>S</mi><mo>=</mo><mi>F</mi><mi>R</mi><mo stretchy=\"false\">[</mo><mi>P</mi><mi>E</mi><mo>+</mo><mfrac><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>⋅</mo><mi>F</mi><msub><mi>R</mi><mn>1</mn></msub></mrow><mrow><mi>F</mi><mi>R</mi></mrow></mfrac><mo>−</mo><msub><mi>S</mi><mi>m</mi></msub><mo>+</mo><msub><mi>S</mi><mi>m</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>P</mi><mi>E</mi><mo>+</mo><mi>A</mi><mi>U</mi></mrow><msub><mi>S</mi><mrow><mi>m</mi><mi>m</mi></mrow></msub></mfrac><msup><mo stretchy=\"false\">)</mo><mrow><mn>1</mn><mo>+</mo><mi>E</mi><mi>X</mi></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">RS = FR[PE+\\frac{S_1 \\cdot FR_1}{FR} - S_m + S_m(1-\\frac{PE+AU}{S_{mm}})^{1+EX} ]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.19633em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.891331em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span></span></p>\n<ol start=\"2\">\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>E</mi><mo>+</mo><mi>A</mi><mi>U</mi><mo>≥</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>m</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">PE+AU \\ge S_{mm}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></li>\n</ol>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>S</mi><mo>=</mo><mi>F</mi><mi>R</mi><mo stretchy=\"false\">(</mo><mi>P</mi><mi>E</mi><mo>+</mo><mfrac><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>⋅</mo><mi>F</mi><msub><mi>R</mi><mn>1</mn></msub></mrow><mrow><mi>F</mi><mi>R</mi></mrow></mfrac><mo>−</mo><msub><mi>S</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">RS = FR(PE+\\frac{S_1 \\cdot FR_1}{FR} - S_m)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>本时段的自由蓄水量为</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mfrac><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>⋅</mo><mi>F</mi><msub><mi>R</mi><mn>1</mn></msub></mrow><mrow><mi>F</mi><mi>R</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>R</mi><mo>−</mo><mi>R</mi><mi>S</mi></mrow><mrow><mi>F</mi><mi>R</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">S = \\frac{S_1 \\cdot FR_1}{FR} + \\frac{R-RS}{FR}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>相应的壤中流和地下径流为</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>S</mi><mi>S</mi><mo>=</mo><mi>K</mi><mi>S</mi><mi>S</mi><mo>⋅</mo><mi>S</mi><mo>⋅</mo><mi>F</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">RSS = KSS \\cdot S \\cdot FR\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>G</mi><mo>=</mo><mi>K</mi><mi>G</mi><mo>⋅</mo><mi>S</mi><mo>⋅</mo><mi>F</mi><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">RG = KG \\cdot S \\cdot FR \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span></p>\n<p>本时段末即下一时段初的自由水蓄量变为</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub><mo>=</mo><mi>S</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>K</mi><mi>S</mi><mi>S</mi><mo>−</mo><mi>K</mi><mi>G</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S_1 = S(1-KSS-KG)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\">G</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>对十五场降水蒸发情况进行迭代计算，得到最终的水源划分结果。\n产流计算模型具体代码如下：</p>\n<details>\n<summary>产流计算模型</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%产流模型</span></span><br><span class=\"line\"><span class=\"comment\">%P时段降雨</span></span><br><span class=\"line\"><span class=\"comment\">%ET时段潜在蒸散发</span></span><br><span class=\"line\"><span class=\"comment\">%%产流参数</span></span><br><span class=\"line\">WM = <span class=\"number\">126</span>;</span><br><span class=\"line\">WUM = <span class=\"number\">63</span>;</span><br><span class=\"line\">WLM = <span class=\"number\">13</span>;</span><br><span class=\"line\">WDM = <span class=\"number\">50</span>;</span><br><span class=\"line\">KC = <span class=\"number\">0.71</span>;<span class=\"comment\">%流域蒸散发折算系数</span></span><br><span class=\"line\">C = <span class=\"number\">0.17</span>;</span><br><span class=\"line\">B = <span class=\"number\">2</span>;</span><br><span class=\"line\">IMP = <span class=\"number\">0.001</span>;</span><br><span class=\"line\">FE = <span class=\"number\">0.8</span>;<span class=\"comment\">%初始土壤水容量折算系数</span></span><br><span class=\"line\">WMM = WM*(<span class=\"number\">1</span>+B);</span><br><span class=\"line\"></span><br><span class=\"line\">W(<span class=\"number\">1</span>,:) = WU(<span class=\"number\">1</span>,:)+WL(<span class=\"number\">1</span>,:)+WD(<span class=\"number\">1</span>,:);</span><br><span class=\"line\">SM = <span class=\"number\">36</span>;</span><br><span class=\"line\">EX = <span class=\"number\">0.46</span>;</span><br><span class=\"line\">KG = <span class=\"number\">0.046</span>;</span><br><span class=\"line\">KKG = <span class=\"number\">0.995</span>;</span><br><span class=\"line\">KSS = <span class=\"number\">0.83</span>;</span><br><span class=\"line\">KKSS = <span class=\"number\">0.06</span>;</span><br><span class=\"line\">SMM = SM*(<span class=\"number\">1</span>+EX);</span><br><span class=\"line\">S1(<span class=\"number\">1</span>,:) = FE*SM;</span><br><span class=\"line\"></span><br><span class=\"line\">k = <span class=\"number\">1</span>;</span><br><span class=\"line\">WU = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WL = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WD = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">R = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WU(<span class=\"number\">1</span>,:) = FE*WUM;</span><br><span class=\"line\">WL(<span class=\"number\">1</span>,:) = FE*WLM;</span><br><span class=\"line\">WD(<span class=\"number\">1</span>,:) = FE*WDM;</span><br><span class=\"line\">n = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">20</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> E0(<span class=\"built_in\">i</span>,k) &gt; <span class=\"number\">0</span></span><br><span class=\"line\">        n = n+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%三层蒸发模型</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    Ep(<span class=\"built_in\">i</span>,k) = KC*E0(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"comment\">%第一层</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &gt;= Ep(<span class=\"built_in\">i</span>,k)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = Ep(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">%第二层</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt;Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &gt;= C*WLM)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = (Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k))*WL(<span class=\"built_in\">i</span>,k)/WLM;</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt; Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &gt; C*(Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k))) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &lt; C*WLM)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = C*(Ep(<span class=\"built_in\">i</span>,k) - Eu(<span class=\"built_in\">i</span>,k));</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">%第三层</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt; Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &lt; C*(Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k)))</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = WL(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = C*(Ep(<span class=\"built_in\">i</span>,k) - Eu(<span class=\"built_in\">i</span>,k)) - El(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    E(<span class=\"built_in\">i</span>,k) = Eu(<span class=\"built_in\">i</span>,k)+El(<span class=\"built_in\">i</span>,k)+Ed(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    PE(<span class=\"built_in\">i</span>,k) = P(<span class=\"built_in\">i</span>,k) - E(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    </span><br><span class=\"line\">    a(<span class=\"built_in\">i</span>,k) = WMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+B)));</span><br><span class=\"line\">    <span class=\"comment\">%计算i时刻RS，RSS，RG,R</span></span><br><span class=\"line\">    <span class=\"comment\">%S为本时段的自由蓄水量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> PE(<span class=\"built_in\">i</span>,k) &gt; <span class=\"number\">0</span><span class=\"comment\">%产流</span></span><br><span class=\"line\">        <span class=\"comment\">%透水面积产流计算</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> a(<span class=\"built_in\">i</span>,k)+PE(<span class=\"built_in\">i</span>,k)&lt;=WMM</span><br><span class=\"line\">            R(<span class=\"built_in\">i</span>,k) = PE(<span class=\"built_in\">i</span>,k)+W(<span class=\"built_in\">i</span>,k)-WM+WM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+a(<span class=\"built_in\">i</span>,k))/WMM)^(B+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            R(<span class=\"built_in\">i</span>,k) = PE(<span class=\"built_in\">i</span>,k)-(WM-W(<span class=\"built_in\">i</span>,k));</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">%不透水面积产流计算</span></span><br><span class=\"line\">        RIM(<span class=\"built_in\">i</span>,k) = P(<span class=\"built_in\">i</span>,k) * IMP;</span><br><span class=\"line\">        FR(<span class=\"built_in\">i</span>,k) = R(<span class=\"built_in\">i</span>,k)/PE(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">i</span> == <span class=\"number\">1</span></span><br><span class=\"line\">            FR1 = <span class=\"number\">1</span>-(<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WMM)^B;</span><br><span class=\"line\">            AU(<span class=\"built_in\">i</span>,k) = SMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-S1(<span class=\"built_in\">i</span>,k)*FR1*FR(<span class=\"built_in\">i</span>,k)/SM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+EX)));<span class=\"comment\">%S1(1,k)为时段初始自由水蓄量</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">             AU(<span class=\"built_in\">i</span>,k) = SMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-S1(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span>,k)/SM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+EX)));<span class=\"comment\">%S1(1,k)为时段初始自由水蓄量</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k)&lt;SMM</span><br><span class=\"line\">            RS(<span class=\"built_in\">i</span>,k) = FR(<span class=\"built_in\">i</span>,k)*(PE(<span class=\"built_in\">i</span>,k)+S1(<span class=\"built_in\">i</span>,k)-SM+SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>)) + RIM(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RSS(<span class=\"built_in\">i</span>,k) = (SM - SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>))*KSS*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RG(<span class=\"built_in\">i</span>,k) = (SM - SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>))*KG*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            RS(<span class=\"built_in\">i</span>,k) = FR(<span class=\"built_in\">i</span>,k)*(PE(<span class=\"built_in\">i</span>,k)+S1(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,k)/FR(<span class=\"built_in\">i</span>,k)-SM) + RIM(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RSS(<span class=\"built_in\">i</span>,k) = (PE-SM+S1(<span class=\"built_in\">i</span>,k))*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RG(<span class=\"built_in\">i</span>,k) = SM*KG*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            S1(<span class=\"built_in\">i</span>,k) = (<span class=\"number\">1</span>-KSS-KG)*SM;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span><span class=\"comment\">%不产流</span></span><br><span class=\"line\">        R(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        FR(<span class=\"built_in\">i</span>,k) = R(<span class=\"built_in\">i</span>,k)/PE(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        FRt(<span class=\"built_in\">i</span>,k) = <span class=\"number\">1</span> - (<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WM)^(B/(<span class=\"number\">1</span>+B));</span><br><span class=\"line\">        RS(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;<span class=\"comment\">%地面径流</span></span><br><span class=\"line\">        RSS(<span class=\"built_in\">i</span>,k) = S1(<span class=\"built_in\">i</span>,k)*KSS*FR(<span class=\"built_in\">i</span>,k);<span class=\"comment\">%壤中流</span></span><br><span class=\"line\">        RG = S1(<span class=\"built_in\">i</span>,k)*KG*FRt(<span class=\"built_in\">i</span>,k);<span class=\"comment\">%地下径流</span></span><br><span class=\"line\">        S1(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = (<span class=\"number\">1</span>-KSS-KG)*S1(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">%计算土壤含水量的变化</span></span><br><span class=\"line\">    WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=PE(<span class=\"built_in\">i</span>,k)+WU(<span class=\"built_in\">i</span>,k)-R(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;=WUM</span><br><span class=\"line\">        WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)-WUM+WL(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;=WLM</span><br><span class=\"line\">            WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)-WLM+WD(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            WL(<span class=\"built_in\">i</span>,k)=WLM;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;WDM</span><br><span class=\"line\">                WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WDM;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WUM;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    W(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=W(<span class=\"built_in\">i</span>,k)+PE(<span class=\"built_in\">i</span>,k)-R(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%水量平衡检验</span></span><br><span class=\"line\">x1 = sum(E(:,k));</span><br><span class=\"line\">x2 = sum(P(:,k));</span><br><span class=\"line\">x3 = sum(PE(:,k));</span><br><span class=\"line\">x = x3-(x2-x1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> x &lt; <span class=\"number\">0.001</span></span><br><span class=\"line\">    Y = [<span class=\"string\">&#x27;误差为&#x27;</span>,num2str(x),<span class=\"string\">&#x27;,符合水量平衡&#x27;</span>];</span><br><span class=\"line\">    <span class=\"built_in\">disp</span>(Y);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;错误！不符合水量平衡 。&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"进行汇流计算\"><a class=\"markdownIt-Anchor\" href=\"#进行汇流计算\"></a> 进行汇流计算</h3>\n<p>由于不同水源流速等因素对汇流的影响不同，故需要使用不同的汇流方法计算结果。通常，由地面净雨直接推得的地面径流使用单位线进行计算，地下径流汇流使用线性水库方法计算。</p>\n<p>直接应用优选的汇流参数和已给出的单位线对场次暴雨洪水进行单位线计算。壤中流和地下径流用线性水库模型进行求解。计算汇流具体代码如下：</p>\n<details>\n<summary>汇流计算</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%单位线汇流计算</span></span><br><span class=\"line\">A = <span class=\"number\">6448</span>;</span><br><span class=\"line\">U = A/(<span class=\"number\">3.6</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">k = k;</span><br><span class=\"line\">q = <span class=\"built_in\">length</span>(RS(:,k));</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:q</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        danweixian(<span class=\"built_in\">i</span>+<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">2</span>) = danweixian(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) * RS(<span class=\"built_in\">j</span>,k)/<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    danweixian(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>) = sum(danweixian(<span class=\"built_in\">i</span>,<span class=\"number\">3</span>:<span class=\"built_in\">j</span>+<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">m = <span class=\"built_in\">length</span>(danweixian(:,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>));</span><br><span class=\"line\">Qend = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\">Qg = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\">Qss = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\"><span class=\"comment\">%%线性水库汇流</span></span><br><span class=\"line\">Qg(<span class=\"number\">1</span>,k) = RG(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    <span class=\"comment\">%Qg(1,k) = RO(1,k);</span></span><br><span class=\"line\">    Qg(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = RG(<span class=\"built_in\">i</span>,k)*(<span class=\"number\">1</span>-KKG)*U+Qg(<span class=\"built_in\">i</span>,k)*KKG;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Qss(<span class=\"number\">1</span>,k) = RSS(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    Qss(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = RSS(<span class=\"built_in\">i</span>,k)*(<span class=\"number\">1</span>-KSS)*U+Qss(<span class=\"built_in\">i</span>,k)*KSS;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> p = <span class=\"number\">1</span>:m</span><br><span class=\"line\">    Qend(p,k) = danweixian(p,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>)+Qg(p,k)+Qss(p,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"按时段进行计算得出每时段预报结果图\"><a class=\"markdownIt-Anchor\" href=\"#按时段进行计算得出每时段预报结果图\"></a> 按时段进行计算，得出每时段预报结果图</h3>\n<p>已经完成各个时段预报结果的初步计算，现在存在的问题有，时段8和时段13洪峰量很底且峰现时间出现了错位，需要进一步研究出现该问题的原因。</p>\n<p>现将检验所用代码插入如下：</p>\n<details>\n<summary>预报结果检验</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%退水曲线检验</span></span><br><span class=\"line\">A = <span class=\"number\">6448</span>;</span><br><span class=\"line\">K = <span class=\"number\">48</span>;</span><br><span class=\"line\">t = <span class=\"number\">1</span>;</span><br><span class=\"line\">k = <span class=\"number\">8</span>;</span><br><span class=\"line\">m = <span class=\"number\">8</span>;</span><br><span class=\"line\">Qtjy(<span class=\"number\">1</span>,k) = Qend(m,k);</span><br><span class=\"line\">R = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> Qend(<span class=\"number\">1</span>,k) &gt; Qend(<span class=\"number\">2</span>,k) || Qend(<span class=\"number\">1</span>,k) == <span class=\"number\">0</span></span><br><span class=\"line\">        d = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">        d = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> Qtjy(t,k) &gt; Qend(d,k)</span><br><span class=\"line\">    t = t+<span class=\"number\">1</span>;</span><br><span class=\"line\">    Qtjy(t,k) = Qtjy(t<span class=\"number\">-1</span>,k) * <span class=\"built_in\">exp</span>(<span class=\"number\">-1</span>/K);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qtjy(:,k));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:m</span><br><span class=\"line\">    Qtsjy(<span class=\"built_in\">i</span>,k) = Qend(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = m:m+t<span class=\"number\">-1</span></span><br><span class=\"line\">    Qtsjy(<span class=\"built_in\">i</span>,k) = Qtjy(<span class=\"built_in\">i</span>-m+<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%R(1,k) = sum(Qend(2:m,k))+sum(Qtsjy(m+1:m+t-1,k));</span></span><br><span class=\"line\">R0jy(<span class=\"number\">1</span>,k) = <span class=\"number\">3.6</span>*<span class=\"number\">24</span>*sum(Qtsjy(<span class=\"number\">1</span>:m+t<span class=\"number\">-1</span>,k))/A;</span><br><span class=\"line\"><span class=\"comment\">%R0jy(1,k) = 3.6*24*sum(Qend(1:m,k))/A;</span></span><br><span class=\"line\"><span class=\"comment\">%R0jy(1,k) = 3.6*24*(R(1,k)+(Qend(1,k)+Qtsjy(l,k))/2)/A + K*3.6*(Qend(m,k)-Qend(d,k))/A;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%RO(1,k) = R0jy(1,k) - 3.6*24*(Qts(1,k)+Qts(t-1,k))*(m+t-1-2)/(2*A);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%作图</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(Qend(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> m+t]);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on;</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(m:m<span class=\"number\">-1</span>+t,Qtjy(<span class=\"number\">1</span>:t,k));</span><br><span class=\"line\">title(<span class=\"string\">&quot;场次一退水曲线&quot;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;Q/(m³/s)&quot;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;t&quot;</span>);</span><br><span class=\"line\">line([d d],[<span class=\"number\">0</span> Qtsjy(d,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\">line([m-d+t m<span class=\"number\">-2</span>+t],[<span class=\"number\">0</span> Qtsjy(m-d+t,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\">line([<span class=\"number\">2</span> m-d+t],[Qtsjy(d,k) Qtsjy(m-d+t,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<p>在最终绘制对比图代码如下：</p>\n<details>\n<summary>作图</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%画图</span></span><br><span class=\"line\"><span class=\"comment\">%%绘制实测流量过程、预测流量过程和流域平均降雨量过程示意图</span></span><br><span class=\"line\">k = <span class=\"number\">8</span>;</span><br><span class=\"line\">m = <span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"comment\">%RS(m,k) = 0;</span></span><br><span class=\"line\">yyaxis left;<span class=\"comment\">%激活左边的轴</span></span><br><span class=\"line\">bar(<span class=\"number\">1</span>:m,RS(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\">set(gca,<span class=\"string\">&#x27;YDir&#x27;</span>,<span class=\"string\">&#x27;reverse&#x27;</span>); <span class=\"comment\">%反转y轴</span></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;日期&quot;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;left 降雨量(mm)&quot;</span>);</span><br><span class=\"line\">ylim([<span class=\"number\">0</span> <span class=\"number\">50</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">yyaxis right;<span class=\"comment\">%激活右边的轴</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:m,Q(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:m,Qtsjy(<span class=\"number\">1</span>:m,k));<span class=\"comment\">%Qtsjy</span></span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;right 流量(m³/s)&quot;</span>);</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,m]);</span><br><span class=\"line\">ylim([<span class=\"number\">0</span> <span class=\"number\">3000</span>]);</span><br><span class=\"line\">xticks(<span class=\"number\">1</span>:<span class=\"number\">1</span>:m);</span><br><span class=\"line\">title(<span class=\"string\">&quot;场次二预报结果&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">xticklabels([&quot;5-10&quot;,&quot;5-11&quot;,&quot;5-12&quot;,&quot;5-13&quot;,&quot;5-14&quot;,&quot;5-15&quot;,&quot;5-16&quot;,&quot;5-17&quot;,&quot;5-18&quot;,&quot;5-19&quot;,&quot;5-20&quot;]);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<p>在分析结果后，发现整个预报的参数还有可以率定的余地。在不改变所有计算初值的情况下，现在需要研究各个参数对预报结果的影响，以期改善预报结果。</p>\n<p>尝试人工试错优选后，发现参数的改变会出现不好的预报变好了但是好的预报又变差了，所以现在考虑编程，使用Rockenbrock函数法进行参数优选。</p>\n<p>[Rockenbrock函数]<a href=\"http://t.csdnimg.cn/3ETMb\">http://t.csdnimg.cn/3ETMb</a></p>\n<hr />\n<p>7.4正式完成课设。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\"></a> 总结</h3>\n<p>本次课设的重点和难点并不在于如何编程和设置数据结构，因为一切使用的公式书中都有给出。重点在于如何通过改变参数使结果能达到一个较好的预期，真正的任务量在于调参，算是一种全新的设计体验。</p>\n<hr />\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>K为一确定常数，由<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>t</mi></msub><mo>=</mo><mi>K</mi><msub><mi>Q</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_t=KQ_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>确定。该式表明，当泄流流量恒定为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，K是泄完蓄水量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>所需的时间。由于蓄量分布在流域上，距出口断面的距离远近不同。汇集时间大小不等，其平均汇集时间应等于K。从这个意义上讲，K又可以解释为流域水流平均汇集时间。 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>《水文预报（第五版）》，主编：包为民，2017 <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","tags":["课设"]},{"title":"本科毕业设计","url":"/2024/10/24/%E6%9C%AC%E7%A7%91%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/","content":"<h1 id=\"风光抽蓄调度\"><a class=\"markdownIt-Anchor\" href=\"#风光抽蓄调度\"></a> 风光抽蓄调度</h1>\n<p>针对新能源消纳问题，研究抽蓄电站备用库容分级控制对发电效益和负荷波动的优化。</p>\n<h2 id=\"有以下几个问题需要解决\"><a class=\"markdownIt-Anchor\" href=\"#有以下几个问题需要解决\"></a> 有以下几个问题需要解决：</h2>\n<ul>\n<li>旋转备用是什么？</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">旋转备用，是指在线但不加载的发电容量，可以在10分钟内补偿由于其他发电机或者变压器故障导致的发电缺口。</span><br><span class=\"line\">确定旋转备用的合理分配主要是根据两点：准确可靠的需求预测和经济形势。</span><br><span class=\"line\">通常旋转备用是以各时段内最大需求的百分比形式给出的。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>适应性调度是什么？</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">自适应调度是指在满足不同工作方式相对优先级的条件下，在设计范围内，同时实时地平衡各种波束请求所要求的时间、能量和计算机资源，为一个调度间隔选择一个最佳任务序列的一种调度方法。这种调度策略能够与动态的环境相适应，与规定的不同工作方式优先级相适应，与可用的时间、能量和计算机资源量相适应。针对多任务或者多功能雷达，自适应调度策略被认为是最灵活最有效的调度策略。</span><br><span class=\"line\">适应性调度指在不同约束条件下，抽水蓄能电站发电应该根据不同调度方案进行调度，以期达到整体调度结果的优化。在本文中，根据不同等效负荷设置不同调度方案可以提高抽蓄电站在不同发电约束下的适应性。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>等效负荷是什么？怎么划分？</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">剩余负荷：电力供应方提供的电力大于用户实际消耗电力的部分</span><br><span class=\"line\">实际负荷：是指电力系统在某一时刻或时间段内实际消耗的电能总量。</span><br><span class=\"line\">等效负荷：电网总负荷-除抽蓄外的所有 </span><br><span class=\"line\">经过简单统计，由于季节变化，风光储的等效负荷出现了很明显的季节性，所以可以考虑按照水文年划分等效负荷分级。</span><br><span class=\"line\"></span><br><span class=\"line\">高等效负荷：负荷大于负荷最大值的80%以上</span><br></pre></td></tr></table></figure>\n<ul>\n<li>备用库容怎么划分？</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">根据已有文献，备用库容大多按照正常库容的百分比进行划分，此处依然先考虑按照百分比进行划分。但是考虑引入参数对比在同一等效负荷情况下不同百分比划分对优化结果的影响。</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>数据资料有华中地区及四个省的发电负荷，该如何使用？</p>\n</li>\n<li>\n<p>RLV、发电、协调最优分别需要如何计算？</p>\n</li>\n</ul>\n<h2 id=\"代码编写\"><a class=\"markdownIt-Anchor\" href=\"#代码编写\"></a> 代码编写</h2>\n<h3 id=\"代码编写整体逻辑\"><a class=\"markdownIt-Anchor\" href=\"#代码编写整体逻辑\"></a> 代码编写整体逻辑</h3>\n<ul>\n<li>\n<p>设置循环改变备用库容组合，由于上下库均分两级调度，故需要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2\\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>共四层循环</p>\n</li>\n<li>\n<p>定义备用库容占比常数，用于后续计算</p>\n</li>\n<li>\n<p>从“实际负荷和日最大峰谷差对应剩余符合”表中获取负荷数据，定义如下变量：</p>\n<pre><code>      act_load:实际负荷和日最大峰谷差对应剩余负荷数据表\n</code></pre>\n</li>\n</ul>\n<p>al_hunan:湖南省实际负荷数据</p>\n<p>rem_load:剩余负荷数据</p>\n<p>dyna_bene:发电效益数据表</p>\n<p>D_B:发电效益数据</p>\n<p>RLV:日最大峰谷差数据</p>\n<p>从 “抽水蓄能电站水位-库容关系“表中获取电站库容数据，定义如下变量：</p>\n<pre><code>        LevelCapacity:水库水位-库容关系数据表\n</code></pre>\n<p>levcap:水库水位-库容关系数据</p>\n<p>Zu:上水库水位</p>\n<p>Vu:上水库库容</p>\n<p>Zd:下水库水位</p>\n<p>Vd:下水库库容</p>\n<p>并定义函数 Z_u(v)，Z_d(v)作为上、下库的水位-库容关系曲线插值函数</p>\n<ul>\n<li>将计算约束设置为罚函数形式。首先定义如下变量：</li>\n<li>\n<pre><code>      D:时段数\n</code></pre>\n</li>\n</ul>\n<p>dh:水头损失</p>\n<p>y_g:发电效率</p>\n<p>y_p:抽水效率</p>\n<p>generator_om:发电工况 x</p>\n<p>pumping_om:抽水工况 y</p>\n<p>power:功率 p</p>\n<p>由于樽海鞘群算法首先需要随机生成初始种群，现定义生成初始种群矩阵为 in_，其大小为 (1000,3*96)。本次优化设置三个决策变量，分别为发电工况、抽水工况、功率。由于选取典型日作为计算数据，取 15min 为一步长，则全天有 96 个时段，每一决策变量需要有 96 个值，因此，取种群矩阵 in_的前 96 行作为发电工况的初始种群，97-192 行作为抽水工况的初始种群，193-288 行作为功率的初始种群。\n然后设置各变量取值范围。\n1、库容\n限制上下库容在起调库容至最大库容之间，上库库容范围为死库容+备用库容至正常蓄水位，下库库容范围为死库容至正常库容-备用库容。放宽库容罚函数限制至库容上下限 5%。\n2、发电抽水工况\n当抽水工况为 1 时，设置功率为-1200MW，当抽发工况均为 0 时，设置功率为 0，其余时间功率作为变量进行优化。</p>\n<ul>\n<li>计算变量对目标函数的适应度</li>\n<li>\n<pre><code>      generator_om:发电工况 x\n</code></pre>\n</li>\n</ul>\n<p>pumping_om:抽水工况 y</p>\n<p>power:功率 p</p>\n<p>Rem:优化后剩余负荷 R_</p>\n<p>fit_1 作为发电效益目标，fit_2 为剩余负荷波动。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fit_1=-(c_g*z+(-c_p*pumping_om*<span class=\"number\">1200</span>).<span class=\"built_in\">sum</span>())/<span class=\"number\">400000</span></span><br></pre></td></tr></table></figure>\n<p>c_g 为发电效益，c_p 为抽水成本，且由于 python 定义优化最值为最小值，故在发电效益最大目标中需要在最前面加上负号。z 为 96 个步长的总发电量。</p>\n<ul>\n<li>Pareto 最优解判断\n<ul>\n<li>判断当前时段适应值是否会被历史最优解完全支配</li>\n<li>判断当前时段适应值是否会被前沿解完全支配</li>\n<li>计算repository 集</li>\n</ul>\n</li>\n</ul>\n<p>__init__函数：初始化类的局部变量</p>\n<p>next_函数：前移游标位置，并返回游标当前位置的樽海鞘坐标、适应度</p>\n<p>hasNext 函数：判断是否已经检查完所有樽海鞘</p>\n<p>remove 函数：将非优解从数据集删除，避免重复比较【游标回退-1并将非优解个数+1，变动后的游标和非优解个数用于计算 hasNext 函数】</p>\n<p>pareto 函数：判断当前樽海鞘是否为 Pareto 最优</p>\n<ul>\n<li>樽海鞘领导者选择：网格法</li>\n</ul>\n<p>cal_mesh_id 函数：计算网格编号【按照等分因子进行等分离散化，并获取樽海鞘在各维度上的编号】</p>\n<p>divide_archiving 函数：进行网格划分，为每个樽海鞘定义网格编号【即对每一樽海鞘使用 cal_mesh_id 函数】</p>\n<p>get_crowd 函数：计算拥挤度【先定义一个数组存放樽海鞘集的索引号，再将循环中与索引号数组第一位相同的樽海鞘的索引号放入新的数组，计算新数组的长度，更新拥挤度并删除本轮循环计算完成的索引号（栈）】</p>\n<p>get_probability 函数：计算被选为种群领导者的概率【拥挤度越低概率越大】</p>\n<p>non_dominated_sorting 函数：用于计算非支配排序【】</p>\n<p>dominate 函数：检查 solution1 是否支配 solution2</p>\n<p>get_gbest：选择领导者</p>\n<ul>\n<li>存档集清除溢出最优解</li>\n</ul>\n<p>get_probability 函数：计算清除概率</p>\n<p>get_clear_index 函数：按概率清除樽海鞘，拥挤度越高清除概率越高</p>\n<p>clear_函数：清除存档集内樽海鞘的所有信息</p>\n<ul>\n<li>初始化种群，更新樽海鞘信息，运行程序</li>\n</ul>\n<p>__init__函数：初始化计算所需的所有参数</p>\n<p>evaluation_fitness 函数：计算所有樽海鞘的罚函数和目标函数适应度，并将罚函数加入适应值（降低适应值）</p>\n<p>initialize 函数：初始化樽海鞘坐标【初始化 in_数组作为初始种群，适应度，repository 存档集，领导者】</p>\n<p>init_in 函数：初始化决策变量【发电抽水变量需要满足只能抽或发或不抽不发，功率连续变量仅有上下限约束，即令其随机取上下限内任意值】</p>\n<p>update_in 函数：更新樽海鞘位置【抽发变量需满足 0-1 变量要求，功率变量更新需要在上下限内】</p>\n<p>compare_pbest 函数：计算各樽海鞘间的支配关系【依据Pareto 支配原理更新】</p>\n<p>update_pbest 函数：更新历史最优解</p>\n<p>Update_archive 函数：依据支配关系更新 repository 集</p>\n<p>update_gbest 函数：更新领导者</p>\n<p>update_函数：更新樽海鞘所有相关信息</p>\n<p>runcode 函数：运行樽海鞘群算法寻优程序【初始化剩余负荷（Excel 数据），初始化樽海鞘群（initialize 函数），初始化存档数据（赋 0），并整理 Pareto 前沿】</p>\n<ul>\n<li>主程序入口：函数和类的实参定义，并将计算数据写入 Excel 表格</li>\n</ul>\n<h4 id=\"导入计算所需要的库\"><a class=\"markdownIt-Anchor\" href=\"#导入计算所需要的库\"></a> 导入计算所需要的库</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"comment\">#from scipy import interpolate</span></span><br></pre></td></tr></table></figure>\n<p>其中，在计算过程中需要用到积分函数interpolate.trazp，首先导入scipy。但是由于python库的提供网站已经停止使用，导致python 3.12配套的twisted.whl和scipy.whl都无法下载。尝试降低python版本到3.11后，scipy包文件有缺失，无法正常使用interpolate.trapz，故选择numpy的trapz作为替代，不再使用scipy库。</p>\n<h4 id=\"获取计算数据\"><a class=\"markdownIt-Anchor\" href=\"#获取计算数据\"></a> 获取计算数据</h4>\n<details>\n<summary>目标函数</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">act_load:实际负荷和日最大峰谷差对应剩余负荷数据表</span></span><br><span class=\"line\"><span class=\"string\">al_hunan:湖南省实际负荷数据</span></span><br><span class=\"line\"><span class=\"string\">rem_load:剩余负荷数据</span></span><br><span class=\"line\"><span class=\"string\">dyna_bene:发电效益数据表</span></span><br><span class=\"line\"><span class=\"string\">D_B:发电效益数据</span></span><br><span class=\"line\"><span class=\"string\">RLV:日最大峰谷差数据</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">np.set_printoptions(suppress=<span class=\"literal\">True</span>,linewidth=<span class=\"number\">160</span>,nanstr=<span class=\"literal\">None</span>,formatter=&#123;<span class=\"string\">&#x27;float&#x27;</span>:<span class=\"string\">&#x27;&#123;:&gt;2&#125;&#x27;</span>.<span class=\"built_in\">format</span>&#125;) <span class=\"comment\">#设置打印格式</span></span><br><span class=\"line\"></span><br><span class=\"line\">r1_path=<span class=\"string\">r&quot;实际负荷和日最大峰谷差对应剩余负荷.xlsx&quot;</span>   <span class=\"comment\">#剩余负荷出力数据储存路径</span></span><br><span class=\"line\">act_load=pd.ExcelFile(r1_path)</span><br><span class=\"line\">al_hunan=pd.read_excel(act_load, sheet_name=<span class=\"string\">&quot;湖南&quot;</span>,header=[<span class=\"number\">0</span>,<span class=\"number\">1</span>]) <span class=\"comment\">#第0行和第1行作为列索引</span></span><br><span class=\"line\">dyna_bene=pd.read_excel(act_load, sheet_name=<span class=\"string\">&quot;发电效益&quot;</span>,header=<span class=\"number\">0</span>) <span class=\"comment\">#第0行作为列索引</span></span><br><span class=\"line\">rem_load=[] <span class=\"comment\">#创建新数组用于存储剩余负荷数据</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">13</span>):</span><br><span class=\"line\">    rem_load.append(al_hunan[<span class=\"string\">f&#x27;<span class=\"subst\">&#123;i&#125;</span>月&#x27;</span>][<span class=\"string\">&#x27;扣除风光&#x27;</span>].values) <span class=\"comment\">#将每个月的剩余负荷数据存入列表 </span></span><br><span class=\"line\">rem_load=np.array(R0) <span class=\"comment\">#将列表转换为数组</span></span><br><span class=\"line\">D_B=dyna_bene[<span class=\"string\">&#x27;发电效益(万美元)&#x27;</span>].values <span class=\"comment\">#获取发电效益数据</span></span><br><span class=\"line\">RLV=dyna_bene[<span class=\"string\">&#x27;RLV实际&#x27;</span>].values <span class=\"comment\">#获取日最大峰谷差数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">LevelCapacity:水库水位-库容关系数据表</span></span><br><span class=\"line\"><span class=\"string\">levcap:水库水位-库容关系数据</span></span><br><span class=\"line\"><span class=\"string\">Zu:上水库水位</span></span><br><span class=\"line\"><span class=\"string\">Vu:上水库库容</span></span><br><span class=\"line\"><span class=\"string\">Zd:下水库水位</span></span><br><span class=\"line\"><span class=\"string\">Vd:下水库库容</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">r2_path=<span class=\"string\">r&quot;抽水蓄能电站水位-库容关系.xlsx&quot;</span>   <span class=\"comment\">#水电站水库数据储存路径</span></span><br><span class=\"line\">LevelCapacity=pd.ExcelFile(r2_path) <span class=\"comment\">#读取水库水位-库容关系数据</span></span><br><span class=\"line\">levcap=pd.read_excel(LevelCapacity, sheet_name=<span class=\"number\">0</span>,header=[<span class=\"number\">0</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">Zu=levcap[<span class=\"string\">&#x27;上水库&#x27;</span>,<span class=\"string\">&#x27;水位（m)&#x27;</span>].loc[levcap[<span class=\"string\">&#x27;上水库&#x27;</span>,<span class=\"string\">&#x27;水位（m)&#x27;</span>].notnull()].values</span><br><span class=\"line\">Vu=levcap[<span class=\"string\">&#x27;上水库&#x27;</span>].loc[levcap[<span class=\"string\">&#x27;上水库&#x27;</span>,<span class=\"string\">&#x27;库容(m3)&#x27;</span>].notnull(),<span class=\"string\">&#x27;库容(m3)&#x27;</span>].values/<span class=\"number\">10000</span></span><br><span class=\"line\">Zd=levcap[<span class=\"string\">&#x27;下水库&#x27;</span>].loc[levcap[<span class=\"string\">&#x27;下水库&#x27;</span>,<span class=\"string\">&#x27;水位（m)&#x27;</span>].notnull(),<span class=\"string\">&#x27;水位（m)&#x27;</span>].values</span><br><span class=\"line\">Vd=levcap[<span class=\"string\">&#x27;下水库&#x27;</span>].loc[levcap[<span class=\"string\">&#x27;下水库&#x27;</span>,<span class=\"string\">&#x27;库容(m3)&#x27;</span>].notnull(),<span class=\"string\">&#x27;库容(m3)&#x27;</span>].values/<span class=\"number\">10000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#上水库水位-库容关系曲线(库容单位万立方米)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Z_u</span>(<span class=\"params\">v</span>):</span><br><span class=\"line\">    zu=np.interp(v,Vu,Zu) <span class=\"comment\">#线性插值，v为库容，Vu为上水库库容，Zu为上水库水位</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">round</span>(zu,<span class=\"number\">1</span>) <span class=\"comment\">#返回水位值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#下水库水位-库容关系曲线(库容单位万立方米)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Z_d</span>(<span class=\"params\">v</span>):</span><br><span class=\"line\">    zd=np.interp(v,Vd,Zd)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">round</span>(zd,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n</details>\n<p>通过本地excel文件获取数据，并命名。</p>\n<h4 id=\"编写罚函数\"><a class=\"markdownIt-Anchor\" href=\"#编写罚函数\"></a> 编写罚函数</h4>\n<details>\n<summary>罚函数</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">D:时段数</span></span><br><span class=\"line\"><span class=\"string\">dh:水头损失</span></span><br><span class=\"line\"><span class=\"string\">y_g:发电效率</span></span><br><span class=\"line\"><span class=\"string\">y_p:抽水效率</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">generator_om:发电工况 x</span></span><br><span class=\"line\"><span class=\"string\">pumping_om:抽水工况 y</span></span><br><span class=\"line\"><span class=\"string\">power:功率 p</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># in_=[x,y,p] x为发电工况，y为抽水工况，p为功率 还未实现</span></span><br><span class=\"line\"><span class=\"comment\">#罚函数计算(所有罚函数存储于输出结果的列表中，每个元素代表一个罚函数)</span></span><br><span class=\"line\"><span class=\"comment\"># =============================================================================</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">penalty</span>(<span class=\"params\">in_,D=<span class=\"number\">96</span>,dh=<span class=\"number\">7</span>,y_g=<span class=\"number\">0.85</span>,y_p=<span class=\"number\">0.88</span></span>):  </span><br><span class=\"line\">    e=[]</span><br><span class=\"line\">    Vu=[<span class=\"number\">71.36</span>]    <span class=\"comment\">#上库起调库容(死库容)</span></span><br><span class=\"line\">    Vd=[<span class=\"number\">960.04</span>]   <span class=\"comment\">#下库起调库容(正常库容)</span></span><br><span class=\"line\">    <span class=\"comment\">#决策变量分割</span></span><br><span class=\"line\">    generator_om=np.copy(in_)[:D]  <span class=\"comment\">#发电工况</span></span><br><span class=\"line\">    pumping_om=np.copy(in_)[D:<span class=\"number\">2</span>*D] <span class=\"comment\">#抽水工况</span></span><br><span class=\"line\">    power=np.copy(in_)[<span class=\"number\">2</span>*D:] <span class=\"comment\">#功率</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(D):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> pumping_om[i]==<span class=\"number\">1</span> :</span><br><span class=\"line\">            power[i]=-<span class=\"number\">1200</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> generator_om[i]==<span class=\"number\">0</span> <span class=\"keyword\">and</span> pumping_om[i]==<span class=\"number\">0</span> :</span><br><span class=\"line\">            power[i]=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\">#计算各时段的上下库库容，分别保存于对应列表中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(p)):</span><br><span class=\"line\">        vu=Vu[i]</span><br><span class=\"line\">        vd=Vd[i]</span><br><span class=\"line\">        zu=Z_u(vu)</span><br><span class=\"line\">        zd=Z_d(vd)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> power[i]&gt;<span class=\"number\">0</span> :</span><br><span class=\"line\">            H=zu-zd-dh   <span class=\"comment\">#发电水头</span></span><br><span class=\"line\">            Q=power[i]*<span class=\"number\">10</span>**<span class=\"number\">3</span>/(<span class=\"number\">9.81</span>*y_g*H)   <span class=\"comment\">#发电流量(注意功率单位为MW，而水量转换中功率单位为KW)</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            H=zu-zd+dh   <span class=\"comment\">#抽水扬程</span></span><br><span class=\"line\">            Q=power[i]*<span class=\"number\">10</span>**<span class=\"number\">3</span>*y_p/(<span class=\"number\">9.81</span>*H)   <span class=\"comment\">#抽水流量(注意功率单位为MW，而水量转换中功率单位为KW)</span></span><br><span class=\"line\">        vu-=Q*<span class=\"number\">15</span>*<span class=\"number\">60</span>/<span class=\"number\">10000</span></span><br><span class=\"line\">        vd+=Q*<span class=\"number\">15</span>*<span class=\"number\">60</span>/<span class=\"number\">10000</span></span><br><span class=\"line\">        Vu.append(vu)</span><br><span class=\"line\">        Vd.append(vd)</span><br><span class=\"line\">        <span class=\"comment\">#考虑罚函数的库容范围为死库容和正常库容的5%范围内</span></span><br><span class=\"line\">        e1 = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, vu-<span class=\"number\">917.34</span>*<span class=\"number\">1.05</span>) <span class=\"comment\"># 比较库容和上水库最大库容的差值与上水库最大库容的5%的大小</span></span><br><span class=\"line\">        e2 = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, <span class=\"number\">71.36</span>*<span class=\"number\">0.95</span>-vu) <span class=\"comment\"># 比较上水库最小库容的5%与库容的差值的大小</span></span><br><span class=\"line\">        e3 = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, vd-<span class=\"number\">960.04</span>*<span class=\"number\">1.05</span>) <span class=\"comment\"># 比较库容和下水库最大库容的差值与下水库最大库容的5%的大小</span></span><br><span class=\"line\">        e4 = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, <span class=\"number\">91.71</span>*<span class=\"number\">0.95</span>-vd) <span class=\"comment\"># 比较下水库最小库容的5%与库容的差值的大小</span></span><br><span class=\"line\">        e.extend([e1,e2,e3,e4]) <span class=\"comment\"># 将四个罚函数值添加到e列表中</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i==<span class=\"built_in\">len</span>(p)-<span class=\"number\">1</span> : <span class=\"comment\">#最后一个时段</span></span><br><span class=\"line\">            e5=<span class=\"built_in\">max</span>(<span class=\"number\">0</span>,<span class=\"built_in\">abs</span>(vd-<span class=\"number\">960.04</span>)-<span class=\"number\">0.05</span>*<span class=\"number\">960.04</span>)</span><br><span class=\"line\">            e.append(e5) </span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> e</span><br></pre></td></tr></table></figure>\n</details>\n<h4 id=\"目标函数\"><a class=\"markdownIt-Anchor\" href=\"#目标函数\"></a> 目标函数</h4>\n<details>\n<summary>目标函数</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">generator_om:发电工况 x</span></span><br><span class=\"line\"><span class=\"string\">pumping_om:抽水工况 y</span></span><br><span class=\"line\"><span class=\"string\">power:功率 p</span></span><br><span class=\"line\"><span class=\"string\">Rem:优化后剩余负荷 R_</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#self：python中类的方法必须包含self参数，且必须位于其他参数之前</span></span><br><span class=\"line\"><span class=\"comment\"># =============================================================================</span></span><br><span class=\"line\"><span class=\"comment\">#目标函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fitness</span>(<span class=\"params\">in_,rem_load,D=<span class=\"number\">96</span>,c_g=<span class=\"number\">50</span>,c_p=<span class=\"number\">17</span></span>): <span class=\"comment\">#D为时段数，R0为剩余负荷，c_g为发电效益，c_p为抽水成本系数</span></span><br><span class=\"line\">    generator_om=np.copy(in_)[:D] <span class=\"comment\">#0-95列代表发电工况 （1000，96）</span></span><br><span class=\"line\">    pumping_om=np.copy(in_)[D:<span class=\"number\">2</span>*D] <span class=\"comment\">#96-191代表抽水工况</span></span><br><span class=\"line\">    power=np.copy(in_)[<span class=\"number\">2</span>*D:] <span class=\"comment\">#192-287代表功率</span></span><br><span class=\"line\">    Rem=rem_load-generator_om*power+pumping_om*<span class=\"number\">1200</span> <span class=\"comment\">#优化后剩余负荷</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(D):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> pumping_om[i]==<span class=\"number\">1</span> :</span><br><span class=\"line\">            power[i]=-<span class=\"number\">1200</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> generator_om[i]==<span class=\"number\">0</span> <span class=\"keyword\">and</span> y[i]==<span class=\"number\">0</span> :</span><br><span class=\"line\">            power[i]=<span class=\"number\">0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    a=np.linspace(<span class=\"number\">1</span>,<span class=\"number\">96</span>,<span class=\"number\">96</span>).astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\">    z=np.trapz(generator_om*power,a) <span class=\"comment\">#发电量</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    fit_1 = -(c_g*z+(-c_p*pumping_om*<span class=\"number\">1200</span>).<span class=\"built_in\">sum</span>())/<span class=\"number\">40000</span>    <span class=\"comment\">#发电效益最大(注意功率单位为MW，则效益单位为万美元)</span></span><br><span class=\"line\">    fit_2 = (((Rem-Rem.mean())**<span class=\"number\">2</span>).mean())**<span class=\"number\">0.5</span>/(((rem_load-rem_load.mean())**<span class=\"number\">2</span>).mean())**<span class=\"number\">0.5</span>    <span class=\"comment\">#剩余负荷波动最小</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [fit_1,fit_2]</span><br></pre></td></tr></table></figure>\n</details>\n<h4 id=\"计算代码\"><a class=\"markdownIt-Anchor\" href=\"#计算代码\"></a> 计算代码</h4>\n<p>本文采用多目标樽海鞘算法进行优化求解，已有代码为多目标粒子群算法。粒子群算法由Dr.Eberhart和Dr.Kennedy于1995年提出，模仿鸟群觅食改进对可行域中最优解的搜索；樽海鞘算法由Dr.Seyedali Mirjalili于2017年提出，模仿樽海鞘群的行动优化最优解的搜索。对于多目标问题而言，两者的相似之处在于都采用了Pareto前沿仓库作为优化的策略，但二者还有很大不同：</p>\n<ol>\n<li>粒子位置更新方式的不同：\n**多目标粒子群算法（MOPSO）**通常使用传统的粒子群优化算法中的位置更新策略，即基于个体最优解（pbest）和全局最优解（gbest）来引导粒子的运动。\n**多目标樽海鞘算法（MOMPSO）**则在此基础上增加了对Pareto前沿的引导。每个粒子不仅关注其个体最优解和全局最优解，还会考虑距离Pareto前沿的距离（或目标空间的“非支配”关系），这有助于提高解的多样性和分布性。</li>\n<li>Pareto前沿的处理：\n在MOPSO中，通常会采用拥挤度比较等方法来保持解集的多样性，但不会特别强调解的“分布性”，更多依赖全局最优解来引导粒子的搜索过程。\nMOMPSO则更加注重解的分布性，特别是通过引入“樽海鞘”的概念（类似于对Pareto前沿的高密度区域进行压制，保持低密度区域的探索），使得粒子群在搜索过程中能够更好地找到覆盖整个Pareto前沿的解，避免解过于集中或重叠。</li>\n<li>拥挤度比较和多样性维护：\nMOPSO通常使用“拥挤度”策略来维持解的多样性，拥挤度是衡量解在目标空间中的密集程度的一个指标。粒子在更新位置时，会避免与其他粒子过于接近，从而确保解的分布尽量均匀。\nMOMPSO则通过更加精细的“支配关系”处理和樽海鞘的概念来维护解集的多样性。例如，粒子不仅要优化目标函数的值，还要在Pareto前沿的“空白”区域探索，以避免在解空间中过于集中。</li>\n<li>非支配排序和选择机制：\n在MOPSO中，通常会结合非支配排序或Crowding距离来选择解，这有助于在多个目标之间找到一个平衡点，使得算法能够找到一个适合多目标优化的解集。\n在MOMPSO中，选择机制更加注重Pareto前沿的结构，粒子会根据与Pareto前沿的距离或支配关系来更新解集，以确保解集的多样性和均匀性。</li>\n<li>更新过程中的参考点或归约策略：\nMOPSO的更新过程主要依赖个体最优解（pbest）和全局最优解（gbest），有时也会引入一些参考点，但核心是粒子之间的协作与竞争。\nMOMPSO则更强调“Pareto最优”解集的结构性更新，它通常通过一种“归约”机制来从多个非支配解中选出具有代表性的解，从而更好地覆盖整个目标空间。</li>\n<li>算法目标：\nMOPSO的目标是找到一组平衡的解，这些解能够在多个目标之间取得较好的妥协，但多样性和分布性可能不如MOMPSO。\nMOMPSO的目标是更加注重Pareto前沿的分布性，不仅要优化目标函数的值，还要确保解在Pareto前沿的均匀分布。</li>\n</ol>\n<p>综上所述，MOMPSO的多目标优化算法通过更强的结构性指导和Pareto前沿的优化提高了搜索性能。在代码上，主要表现为更改了最优点选取和拥挤度计算。</p>\n<ul>\n<li>\n<p>Pareto最优解选择\n主要修改：</p>\n<ul>\n<li>\n<p>非支配排序：在MOMPSO中，不仅要根据网格划分，还要对粒子进行非支配排序（Non-Dominated Sorting）。即，我们需要找到非支配解，并通过拥挤度（Crowding Distance）来衡量解集的多样性。</p>\n</li>\n<li>\n<p>Pareto最优解选择：更新gbest时不仅考虑适应度，还需要考虑其在Pareto前沿上的位置以及在解空间中的分布性。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>拥挤度计算\n在MOMPSO中，拥挤度的计算不仅仅是基于每个粒子在网格中的位置，而是通过考虑粒子在目标空间中的相对位置来进行的。每个目标维度都会单独进行排序并计算粒子间的差值，粒子在稀疏区域的拥挤度会更高，从而保证解集的分布性。通过这种方式，MOMPSO在多目标优化中能够保持更好的解的多样性，避免解过于集中，从而更有效地探索Pareto前沿。具体修改见如下代码。</p>\n</li>\n<li>\n<p>代码改动方案：</p>\n<ul>\n<li>引入非支配排序（Non-Dominated Sorting）：\n为了实现非支配排序，我们需要实现一种方法来对粒子进行排序，并根据其支配关系计算拥挤度。</li>\n<li>具体代码中的改进：\n<ul>\n<li>选择更新（更新gbest）：\n选择粒子时，考虑不仅仅是适应度和网格划分，还要考虑其在Pareto前沿上的位置和拥挤度。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>改进拥挤度计算：</p>\n<ul>\n<li>\n<p>传统的拥挤度计算方法：\n在传统的多目标粒子群优化（MOPSO）中，拥挤度是通过以下方式计算的：\n排序：首先，按照每个目标函数的值对存档中的解进行排序。\n边界条件：对于每个目标维度的最小值和最大值，赋予粒子极高的拥挤度值（通常是无穷大），确保它们不会被排除。\n计算拥挤度：然后，拥挤度值是通过粒子在目标空间中的邻近解的目标值差值来计算的。粒子的拥挤度值越大，表示其附近的解越稀疏，反之，表示解集在该区域较为密集。</p>\n</li>\n<li>\n<p>MOMPSO中的拥挤度计算改进：\n在多目标樽海鞘算法（MOMPSO）中，拥挤度的计算方法改进如下：\n基于目标空间的拥挤度：\n与MOPSO中的拥挤度计算不同，MOMPSO引入了对每个目标空间维度的排序，并且同时考虑多个目标维度来计算粒子的拥挤度。\n对于每个目标，粒子的位置被排序并通过目标空间中的“邻近”粒子之间的距离来计算拥挤度。粒子被放置在更稀疏的区域时，拥挤度值会更高，从而保证解集的多样性。\n逐维排序与拥挤度计算：\n在计算拥挤度时，MOMPSO通常会对每个目标进行排序，并为每个粒子计算目标维度的“邻近距离”。例如，对于目标1的第一个粒子，它的拥挤度是与目标1上所有其他粒子的相对距离的一个度量。\n然后，MOMPSO会将所有目标维度的拥挤度进行组合，粒子的总拥挤度是所有目标维度拥挤度的加权和。</p>\n</li>\n<li>\n<p>改进的拥挤度值与分布性：\nMOMPSO在计算拥挤度时，结合了非支配排序的机制，使得在多目标优化中，粒子不仅要考虑距离近似的解，还要确保解的均匀分布，从而避免粒子集中在解空间的某些区域，导致过度搜索局部最优。</p>\n</li>\n<li>\n<p>MOMPSO中拥挤度计算的具体改进步骤：</p>\n<ul>\n<li>对每个目标进行排序：\n对存档中的每个粒子，根据目标函数值对其进行排序。对于每个目标的排序，粒子会被排序成一个顺序。</li>\n<li>计算每个目标的拥挤度：\n对于每个目标维度，计算排序后的粒子之间的邻近距离。距离越远的粒子，拥挤度越高，表示该区域更为稀疏；而距离较近的粒子表示该区域更为拥挤。</li>\n<li>组合拥挤度：\n对于每个粒子，综合考虑所有目标的拥挤度。通常，MOMPSO会将每个维度的拥挤度值加权或进行某种形式的归一化，以确保不同目标维度之间的平衡。</li>\n<li>选择解时使用拥挤度：\n在选择解时，MOMPSO会结合非支配排序和拥挤度来保证解集的分布性。拥挤度低的解（即分布较稀疏的区域）会有更大的机会被选为gbest。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<details>\n<summary>MOMPSO寻优</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># MSSA算法=============================================================================</span></span><br><span class=\"line\"><span class=\"comment\"># 全局粒子寻优=============================================================================</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MOMPSO</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, curr_archiving_in, curr_archiving_fit, curr_archiving_e, mesh_div_num, min_, max_, particals</span>):</span><br><span class=\"line\">        self.curr_archiving_in = curr_archiving_in  <span class=\"comment\"># 当前存档中所有粒子的坐标</span></span><br><span class=\"line\">        self.curr_archiving_fit = curr_archiving_fit  <span class=\"comment\"># 当前存档中所有粒子的适应度</span></span><br><span class=\"line\">        self.curr_archiving_e = curr_archiving_e  <span class=\"comment\"># 当前存档中所有粒子的罚函数</span></span><br><span class=\"line\">        self.mesh_div = mesh_div_num  <span class=\"comment\"># 等分因子</span></span><br><span class=\"line\">        self.num_ = self.curr_archiving_in.shape[<span class=\"number\">0</span>]  <span class=\"comment\"># 存档集(archive)的粒子数量</span></span><br><span class=\"line\">        self.particals = particals  <span class=\"comment\"># 粒子群算法生成的粒子数量</span></span><br><span class=\"line\">        self.id_archiving = np.zeros((self.num_))  <span class=\"comment\"># 各个粒子的id编号</span></span><br><span class=\"line\">        self.crowd_archiving = np.zeros((self.num_))  <span class=\"comment\"># 拥挤度矩阵</span></span><br><span class=\"line\">        self.probability_archiving = np.zeros((self.num_))  <span class=\"comment\"># 各个粒子被选为gbest的概率</span></span><br><span class=\"line\">        self.gbest_in = np.zeros((self.particals, self.curr_archiving_in.shape[<span class=\"number\">1</span>]))  <span class=\"comment\"># 初始化gbest矩阵_坐标</span></span><br><span class=\"line\">        self.gbest_fit = np.zeros((self.particals, self.curr_archiving_fit.shape[<span class=\"number\">1</span>]))  <span class=\"comment\"># 初始化gbest矩阵_适应值</span></span><br><span class=\"line\">        self.gbest_e = np.zeros((self.particals, self.curr_archiving_e.shape[<span class=\"number\">1</span>]))  <span class=\"comment\"># 初始化gbest矩阵_罚函数</span></span><br><span class=\"line\">        self.min_ = min_</span><br><span class=\"line\">        self.max_ = max_</span><br><span class=\"line\">        self.divide_archiving()</span><br><span class=\"line\">        self.get_crowd()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">cal_mesh_id</span>(<span class=\"params\">self, in_</span>):  <span class=\"comment\"># 计算网格编号id</span></span><br><span class=\"line\">        id_ = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.curr_archiving_in.shape[<span class=\"number\">1</span>]):  <span class=\"comment\"># 按照等分因子进行等分离散化，获取粒子在各维度上的编号</span></span><br><span class=\"line\">            id_dim = <span class=\"built_in\">int</span>((in_[i] - self.min_[i]) / (self.max_[i] - self.min_[i]) * self.num_)</span><br><span class=\"line\">            id_ = id_ + id_dim * (self.mesh_div ** i)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id_</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">divide_archiving</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 进行网格划分，为每个粒子定义网格编号</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.num_):</span><br><span class=\"line\">            self.id_archiving[i] = self.cal_mesh_id(self.curr_archiving_in[i])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_crowd</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 计算拥挤度</span></span><br><span class=\"line\">     index_ = (np.arange(<span class=\"number\">0</span>, self.num_)).tolist()  <span class=\"comment\"># 定义一个数组存放粒子集的索引号</span></span><br><span class=\"line\">     <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(index_) &gt; <span class=\"number\">0</span>:  <span class=\"comment\"># 计算拥挤度</span></span><br><span class=\"line\">        index_same = [index_[<span class=\"number\">0</span>]]  <span class=\"comment\"># 存放本次子循环中与index[0]粒子具有相同网格id所有检索位</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(index_)): </span><br><span class=\"line\">            <span class=\"keyword\">if</span> self.id_archiving[index_[<span class=\"number\">0</span>]] == self.id_archiving[index_[i]]:  <span class=\"comment\"># 与index[0]粒子具有相同网格id</span></span><br><span class=\"line\">                index_same.append(index_[i])  <span class=\"comment\"># 存放本次子循环中与index[0]粒子具有相同网格id所有检索位</span></span><br><span class=\"line\">        number_ = <span class=\"built_in\">len</span>(index_same)  <span class=\"comment\"># 本轮网格中的总粒子数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> index_same:  <span class=\"comment\"># 更新本轮网格id下的所有粒子的拥挤度(密度)</span></span><br><span class=\"line\">            self.crowd_archiving[i] = number_</span><br><span class=\"line\">            index_.remove(i)  <span class=\"comment\"># 删除本轮网格所包含的粒子对应的索引号，避免重复计算</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_probability</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 计算被选为gbest的概率</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.num_):</span><br><span class=\"line\">            self.probability_archiving[i] = <span class=\"number\">10.0</span> / (self.crowd_archiving[i] ** <span class=\"number\">3</span>)</span><br><span class=\"line\">        self.probability_archiving = self.probability_archiving / np.<span class=\"built_in\">sum</span>(self.probability_archiving)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">non_dominated_sorting</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 非支配排序</span></span><br><span class=\"line\">        <span class=\"comment\">#进行非支配排序，将存档中的粒子分为多个等级</span></span><br><span class=\"line\">        rank = np.zeros(self.num_, dtype=<span class=\"built_in\">int</span>)  <span class=\"comment\"># 存储每个粒子的排序等级</span></span><br><span class=\"line\">        fronts = [[]]  <span class=\"comment\"># 存储各个前沿的粒子</span></span><br><span class=\"line\">        domination_count = np.zeros(self.num_, dtype=<span class=\"built_in\">int</span>)  <span class=\"comment\"># 支配计数</span></span><br><span class=\"line\">        dominated_solutions = [[] <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.num_)]  <span class=\"comment\"># 存储每个粒子所支配的粒子</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.num_):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.num_):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> self.dominates(self.curr_archiving_fit[p], self.curr_archiving_fit[q]):</span><br><span class=\"line\">                    dominated_solutions[p].append(q)</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> self.dominates(self.curr_archiving_fit[q], self.curr_archiving_fit[p]):</span><br><span class=\"line\">                    domination_count[p] += <span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> domination_count[p] == <span class=\"number\">0</span>:</span><br><span class=\"line\">                rank[p] = <span class=\"number\">0</span></span><br><span class=\"line\">                fronts[<span class=\"number\">0</span>].append(p)</span><br><span class=\"line\">        </span><br><span class=\"line\">        i = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"built_in\">len</span>(fronts[i]) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            next_front = []</span><br><span class=\"line\">            <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> fronts[i]:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> q <span class=\"keyword\">in</span> dominated_solutions[p]:</span><br><span class=\"line\">                    domination_count[q] -= <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> domination_count[q] == <span class=\"number\">0</span>:</span><br><span class=\"line\">                        rank[q] = i + <span class=\"number\">1</span></span><br><span class=\"line\">                        next_front.append(q)</span><br><span class=\"line\">            i += <span class=\"number\">1</span></span><br><span class=\"line\">            fronts.append(next_front)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> rank, fronts</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">dominates</span>(<span class=\"params\">self, solution1, solution2</span>):</span><br><span class=\"line\">        <span class=\"string\">&quot;&quot;&quot;检查solution1是否支配solution2&quot;&quot;&quot;</span></span><br><span class=\"line\">        better = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(solution1)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> solution1[i] &gt; solution2[i]:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> solution1[i] &lt; solution2[i]:</span><br><span class=\"line\">                better = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> better</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    3. gbest 的选择方式</span></span><br><span class=\"line\"><span class=\"string\">    通常，选择全局最优解（gbest）的策略不仅仅依赖于一个粒子的表现，还可能结合多种标准，例如粒子的适应度值、拥挤度、支配关系等。在该代码段中，循环选择 best_front 中的粒子，意味着：</span></span><br><span class=\"line\"><span class=\"string\">    每次迭代可能都会选择一个来自 第一前沿 的粒子作为 gbest。</span></span><br><span class=\"line\"><span class=\"string\">    由于粒子是循环选择的，所以每个粒子都有可能在不同的代成为 gbest，这种选择方式帮助算法更全面地探索解空间。</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_gbest</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># 获取gbest的坐标、适应值、罚函数</span></span><br><span class=\"line\">        <span class=\"comment\"># 进行非支配排序</span></span><br><span class=\"line\">        rank, fronts = self.non_dominated_sorting()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 对于每个前沿，使用拥挤度来选择解</span></span><br><span class=\"line\">        best_front = fronts[<span class=\"number\">0</span>]  <span class=\"comment\"># 第一前沿最优</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        best_front通常表示非支配排序后的前沿。在多目标优化中，解集通常会被分为多个前沿（Front），其中：</span></span><br><span class=\"line\"><span class=\"string\">        第一前沿（best_front） 是非支配的解，即这些解在所有目标上都不被其他解支配（即没有任何其他解能在所有目标上同时优于这些解）。</span></span><br><span class=\"line\"><span class=\"string\">        第二前沿、第三前沿 等是依次支配关系更弱的解集，通常解集的质量逐步下降。</span></span><br><span class=\"line\"><span class=\"string\">        通过非支配排序，我们把存档中的解分成了多个不同的前沿（fronts），而第一前沿是质量最好的解。</span></span><br><span class=\"line\"><span class=\"string\">        &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.particals):</span><br><span class=\"line\">            chosen_index = best_front[i % <span class=\"built_in\">len</span>(best_front)]</span><br><span class=\"line\">            <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            chosen_index = best_front[i % len(best_front)] 的含义</span></span><br><span class=\"line\"><span class=\"string\">            这段代码的作用是从第一前沿（best_front）中选取一个粒子来作为全局最优解（gbest）。具体来说：</span></span><br><span class=\"line\"><span class=\"string\">            best_front[i % len(best_front)] 意味着按顺序循环访问 第一前沿 中的粒子。这是一个模运算，表示循环地选择前沿中的粒子。</span></span><br><span class=\"line\"><span class=\"string\">            i 是一个迭代变量，通常是在一个循环中自增。</span></span><br><span class=\"line\"><span class=\"string\">            len(best_front) 是 第一前沿中解的个数。</span></span><br><span class=\"line\"><span class=\"string\">            i % len(best_front) 就是将 i 限制在 best_front 中粒子个数的范围内。如果 i 大于 len(best_front)，则会从头开始循环选择。</span></span><br><span class=\"line\"><span class=\"string\">            &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">            self.gbest_in[i] = self.curr_archiving_in[chosen_index]</span><br><span class=\"line\">            self.gbest_fit[i] = self.curr_archiving_fit[chosen_index]</span><br><span class=\"line\">            self.gbest_e[i] = self.curr_archiving_e[chosen_index]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.gbest_in, self.gbest_fit, self.gbest_e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;全局粒子寻优完成&#x27;</span>)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    这种方式有三个好处</span></span><br><span class=\"line\"><span class=\"string\">    1、通过循环选择，可以确保解的多样性，避免集中于某个特定粒子。</span></span><br><span class=\"line\"><span class=\"string\">    2、它增强了算法的探索性，并提供了平衡探索和利用的机制。</span></span><br><span class=\"line\"><span class=\"string\">    3、通过选择多个解而非单一解，可以帮助避免过早收敛到局部最优解。</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h4 id=\"主函数\"><a class=\"markdownIt-Anchor\" href=\"#主函数\"></a> 主函数</h4>\n<details>\n<summary>主函数</summary>\n</details>\n<details>\n<summary>画图</summary>\n<h4 id=\"需要修改的模块\"><a class=\"markdownIt-Anchor\" href=\"#需要修改的模块\"></a> 需要修改的模块</h4>\n<ul>\n<li>get_probability 函数</li>\n<li>删除速度更新函数</li>\n<li>更改位置更新函数</li>\n<li>更改离散变量的位置更新函数</li>\n<li>更改参数值</li>\n</ul>\n</details>\n<h2 id=\"备用库容划分\"><a class=\"markdownIt-Anchor\" href=\"#备用库容划分\"></a> 备用库容划分</h2>\n<h3 id=\"划分思路\"><a class=\"markdownIt-Anchor\" href=\"#划分思路\"></a> 划分思路</h3>\n<p>如果抽水蓄能电站需要提供较高的等效负荷，<strong>备用库容的占比通常应该较大</strong>。</p>\n<p>原因如下：</p>\n<h3 id=\"1-负荷需求的增加\"><a class=\"markdownIt-Anchor\" href=\"#1-负荷需求的增加\"></a> 1. <strong>负荷需求的增加</strong>：</h3>\n<p>当电网对抽水蓄能电站的调节能力（即负荷需求）要求较高时，电站需要更频繁地进行发电或抽水操作。这意味着电站需要有足够的可调节容量，以应对快速的负荷波动或者应急情况。因此，备用库容作为电站应急调节能力的储备，必须相对增大，以便在需要时能够迅速调动更多的水量进行发电或抽水。</p>\n<h3 id=\"2-应急备用和快速响应能力\"><a class=\"markdownIt-Anchor\" href=\"#2-应急备用和快速响应能力\"></a> 2. <strong>应急备用和快速响应能力</strong>：</h3>\n<p>较高的等效负荷意味着电站可能面临更加复杂的运行调度，备用库容可以为电站提供必要的安全裕度。在负荷波动或突发情况下，备用库容可以保证电站在发生设备故障、外部需求急剧变化等情况下，仍能保持稳定运行。备用库容较大的话，有助于在高负荷期间提供更长时间的发电支持或抽水操作，从而增强系统的安全性和可靠性。</p>\n<h3 id=\"3-调度灵活性\"><a class=\"markdownIt-Anchor\" href=\"#3-调度灵活性\"></a> 3. <strong>调度灵活性</strong>：</h3>\n<p>如果电站要提供较高的等效负荷，它通常需要更高的调节灵活性，以便根据电网的需求做出响应。这就要求电站有足够的备用库容，以应对负荷变化对水库水位的影响，保证水库在不降低电站整体效率的前提下，仍能快速响应负荷需求。</p>\n<h3 id=\"4-长周期调节能力\"><a class=\"markdownIt-Anchor\" href=\"#4-长周期调节能力\"></a> 4. <strong>长周期调节能力</strong>：</h3>\n<p>当电站在高等效负荷下运行时，可能需要长时间的稳定调节，这也意味着备用库容需要足够大，以避免因电站负荷变化或设备故障等因素而导致电站无法正常运行。</p>\n<h3 id=\"综合考虑\"><a class=\"markdownIt-Anchor\" href=\"#综合考虑\"></a> 综合考虑：</h3>\n<ul>\n<li>高等效负荷下，电站可能需要在短时间内迅速提高发电量或储水能力，这要求备用库容能够支撑高频次、高强度的负荷调节。因此，备用库容占比通常应增加，以提高电站的应急响应和调节能力。</li>\n</ul>\n<h3 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论：</h3>\n<p>当抽水蓄能电站的等效负荷较高时，备用库容的占比应相应增大，以确保电站具有更好的灵活性、可靠性和应急响应能力，从而能够满足电网的高需求并应对突发情况。</p>\n<details>\n<summary>为什么负荷越高备用库容要求越高</summary>\n**等效负荷越高，备用库容的占比通常应该更高**，尤其是在只考虑备用功能的情形下。下面详细解释原因：\n<ol>\n<li><strong>等效负荷和备用库容的关系</strong></li>\n</ol>\n<ul>\n<li><strong>等效负荷</strong>通常是指电站在某个时刻的负荷需求。它考虑了电站的实际需求以及负荷波动、备用容量需求等因素。</li>\n<li><strong>备用库容</strong>是电站为了应对突发事件（如机组故障、电力需求激增等）所储备的水量，用来在应急情况下提供快速的备用电力输出。</li>\n</ul>\n<ol start=\"2\">\n<li><strong>等效负荷高时的需求</strong></li>\n</ol>\n<p>当等效负荷高时，意味着电站面临较大的负荷需求或者较高的负荷波动。为了应对这些负荷需求，备用库容的作用显得尤为重要。特别是在只考虑备用功能的情况下，备用库容需要更多的储备，以保证：</p>\n<ul>\n<li>当负荷需求急剧上升时，备用电力能够迅速释放。</li>\n<li>确保在突发事件发生时（如机组故障、系统事故等），备用容量能够及时响应，避免系统电力供应中断。</li>\n</ul>\n<ol start=\"3\">\n<li><strong>备用库容的作用</strong></li>\n</ol>\n<p>备用库容的主要作用是作为应急备用，而不是在日常调度中参与负荷的常规调节。当<strong>等效负荷较高</strong>时，电站的系统稳定性要求较高，这时备用库容需要更大，以应对极端负荷波动或设备故障。</p>\n<ol start=\"4\">\n<li><strong>为什么备用库容占比应该更高？</strong></li>\n</ol>\n<ul>\n<li><strong>负荷波动增大</strong>：等效负荷高通常意味着负荷波动或需求大，备用库容需要更大以应对这些变化。</li>\n<li><strong>应急响应需求更强</strong>：在高负荷情况下，电站的备用电力需求增加。备用库容需要确保能够在短时间内释放足够的电力来应对突发的高负荷情况。</li>\n<li><strong>安全系数更高</strong>：高等效负荷往往意味着电网负荷接近满载或系统风险较高，为了增加系统安全性，备用库容需要更大，以提供足够的应急储备。</li>\n</ul>\n<ol start=\"5\">\n<li><strong>备用库容占比计算的考虑因素</strong></li>\n</ol>\n<p>备用库容的占比并非一个固定的数值，而是受到以下因素的影响：</p>\n<ul>\n<li><strong>等效负荷的大小</strong>：负荷越高，备用库容的需求越大。</li>\n<li><strong>电网的稳定性要求</strong>：如果电网系统的稳定性较为脆弱，需要更大的备用库容。</li>\n<li><strong>电站的响应能力</strong>：如果电站的响应能力较强（如抽水蓄能电站），备用库容占比可能相对较小；如果电站的响应能力较弱，则需要更大的备用库容。</li>\n</ul>\n<p><strong>结论</strong></p>\n<p>在只考虑备用功能（不参与正常调度）的情况下，当<strong>等效负荷越高</strong>时，为了保证电站的应急响应能力和电网的稳定性，备用库容的占比应该相应地增加。这是因为备用库容的目的是应对高负荷和突发事件，因此负荷需求越大，备用库容的需求也随之增加。</p>\n</details>\n<p>按照已知数据，可以把全年等效负荷分为两部分，按照全年等效负荷平均值，将其分为大于平均值和小于平均值两部分，即等效负荷&gt;11873.183和等效负荷&lt;=11873.183，按照上述思路，等效负荷较大的部分设置备用库容占比为20%，检验比较递减至15%的改善率，较小部分设置占比5%，检验比较递增至15%的改善率。</p>\n<p>约束条件修改以代码895行为例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> rem_load[i].mean() &lt;= <span class=\"number\">10000</span>:</span><br><span class=\"line\">    Vu=[<span class=\"number\">71.36</span>+<span class=\"number\">845.98</span>*LOW_LOAD_P]    <span class=\"comment\">#上库起调库容为正常库容90%</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    Vu=[<span class=\"number\">71.36</span>+<span class=\"number\">845.98</span>*HIGH_LOAD_P]   <span class=\"comment\">#上库起调库容为正常库容80%</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"计算结果\"><a class=\"markdownIt-Anchor\" href=\"#计算结果\"></a> 计算结果</h3>\n<h4 id=\"pareto前沿分类及最终方案\"><a class=\"markdownIt-Anchor\" href=\"#pareto前沿分类及最终方案\"></a> Pareto前沿分类及最终方案</h4>\n<hr />\n<h1 id=\"智能算法在动态优化问题的应用\"><a class=\"markdownIt-Anchor\" href=\"#智能算法在动态优化问题的应用\"></a> 智能算法在动态优化问题的应用</h1>\n<p>根据《动态多目标优化进化算法及其应用》一书中所提到的约束DMOP测试函数，本文使用K.Den等在解决水热器动力系统问题中构造的一个带复杂约束的双目标动态优化问题，记作测试函数OPF。该函数的数学表达如下：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>min</mi><mo>⁡</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>s</mi></msub></msubsup><msub><mi>t</mi><mi>T</mi></msub><mrow><mo fence=\"true\">[</mo><msub><mi>a</mi><mi>s</mi></msub><mo>+</mo><msub><mi>b</mi><mi>s</mi></msub><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>c</mi><mi>s</mi></msub><msubsup><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow><mn>2</mn></msubsup><mo>+</mo><mo>∣</mo><msub><mi>d</mi><mi>s</mi></msub><mi>sin</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mrow><mo fence=\"true\">(</mo><msub><mi>e</mi><mi>s</mi></msub><mrow><mo fence=\"true\">(</mo><msubsup><mi>P</mi><mi>s</mi><mi>min</mi><mo>⁡</mo></msubsup><mo>−</mo><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">}</mo></mrow><mo>∣</mo><mo fence=\"true\">]</mo></mrow><mo separator=\"true\">,</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msub><mi>f</mi><mn>1</mn></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>s</mi></msub></msubsup><msub><mi>t</mi><mi>T</mi></msub><mrow><mo fence=\"true\">[</mo><msub><mi>a</mi><mi>s</mi></msub><mo>+</mo><msub><mi>β</mi><mi>s</mi></msub><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>γ</mi><mi>s</mi></msub><msubsup><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msub><mi>η</mi><mi>s</mi></msub><mi>exp</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>δ</mi><mi>s</mi></msub><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mo>∑</mo><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>s</mi></msub></msubsup><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>h</mi><mo>=</mo><mn>1</mn></mrow><mrow><msub><mi>N</mi><mi>s</mi></msub><msub><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>P</mi><mrow><mi>D</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>P</mi><mrow><mi>L</mi><mi>t</mi></mrow></msub><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>M</mi><mo separator=\"true\">,</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msub><mi>t</mi><mi>T</mi></msub><mrow><mo fence=\"true\">(</mo><msub><mi>a</mi><mrow><mn>0</mn><mi>h</mi></mrow></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>l</mi><mi>h</mi></mrow></msub><msub><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>h</mi></mrow></msub><msubsup><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow><mn>2</mn></msubsup><mo fence=\"true\">)</mo></mrow><mo>−</mo><msub><mi>W</mi><mi>h</mi></msub><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>h</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>N</mi><mi>h</mi></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mi>P</mi><mi>s</mi><mi>min</mi><mo>⁡</mo></msubsup><mo>⩽</mo><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo>⩽</mo><msubsup><mi>P</mi><mi>s</mi><mi>max</mi><mo>⁡</mo></msubsup><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>s</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>N</mi><mi>s</mi></msub><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>M</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msubsup><mi>P</mi><mi>h</mi><mi>min</mi><mo>⁡</mo></msubsup><mo>⩽</mo><msub><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow></msub><mo>⩽</mo><msubsup><mi>P</mi><mi>h</mi><mi>max</mi><mo>⁡</mo></msubsup><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>h</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>N</mi><mi>h</mi></msub><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><mi>M</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{array}{l}\\min f(x)=\\left(f_{1}(x), f_{2}(x)\\right), \\quad x=\\left(P_{h t}, P_{s t}\\right), \\\\f_{1}(x)=\\sum_{t=1}^{M} \\sum_{s=1}^{N_{s}} t_{T}\\left[a_{s}+b_{s} P_{s t}+c_{s} P_{s t}^{2}+\\mid d_{s} \\sin \\left\\{\\left(e_{s}\\left(P_{s}^{\\min }-P_{s t}\\right)\\right\\} \\mid\\right],\\right. \\\\f_{1}(x)=\\sum_{t=1}^{M} \\sum_{s=1}^{N_{s}} t_{T}\\left[a_{s}+\\beta_{s} P_{s t}+\\gamma_{s} P_{s t}^{2}+\\eta_{s} \\exp \\left(\\delta_{s} P_{s t}\\right)\\right], \\\\\\sum_{s=1}^{N_{s}} P_{s t}+\\sum_{h=1}^{N_{s} P_{h t}-P_{D t}-P_{L t}=0, \\quad t=1,2, \\cdots, M,} \\\\\\sum_{t=1}^{M} t_{T}\\left(a_{0 h}+a_{l h} P_{h t}+a_{2 h} P_{h t}^{2}\\right)-W_{h}=0, \\quad h=1,2, \\cdots, N_{h}, \\\\P_{s}^{\\min } \\leqslant P_{s t} \\leqslant P_{s}^{\\max }, \\quad s=1,2, \\cdots, N_{s}, \\quad t=1,2, \\cdots, M, \\\\P_{h}^{\\min } \\leqslant P_{h t} \\leqslant P_{h}^{\\max }, \\quad h=1,2, \\cdots, N_{h}, \\quad t=1,2, \\cdots, M,\\end{array}\\right. \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.00004em;vertical-align:-4.250019999999999em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.750020000000001em;\"><span style=\"top:0.20000999999999935em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:0.20500999999999925em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-0.08999000000000068em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-0.3849900000000006em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-0.6799900000000005em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-0.9749900000000005em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.2699900000000006em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.5649900000000008em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.859990000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.154990000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.204990000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.150010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.295010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.590010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.885010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.180010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.475010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.770010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-6.065010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-6.360010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-6.655010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-6.705010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-7.00002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.250019999999999em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.732462em;\"><span style=\"top:-6.892462000000001em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-5.551231em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\">+</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.830502em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">i</span><span class=\"mtight\">n</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">η</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.8687690000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029000000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.14329285714285717em;\"><span></span></span></span></span></span></span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span><span class=\"mpunct mtight\">,</span><span class=\"mspace mtight\" style=\"margin-right:1.4285714285714286em;\"></span><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"minner mtight\">⋯</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct mtight\">,</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-1.527538em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.981231em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831079999999999em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-0.32753799999999983em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.830502em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">i</span><span class=\"mtight\">n</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">a</span><span class=\"mtight\">x</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span></span></span><span style=\"top:0.8724619999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.830502em;\"><span style=\"top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">i</span><span class=\"mtight\">n</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831079999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">a</span><span class=\"mtight\">x</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2831079999999999em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.232462em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>其中，</mtext><msub><mi>N</mi><mi>h</mi></msub><mtext>表示水电发生器</mtext><msub><mi>P</mi><mrow><mi>h</mi><mi>t</mi></mrow></msub><mtext>的个数，</mtext><msub><mi>N</mi><mi>s</mi></msub><mtext>表示热熔产生器</mtext><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mtext>的个数，且</mtext><mi>x</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><msub><mi>P</mi><mrow><mi>k</mi><mi>t</mi></mrow></msub><mo separator=\"true\">,</mo><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo><mi>M</mi><mo>=</mo><mi>T</mi><mi mathvariant=\"normal\">/</mi><msub><mi>P</mi><mrow><mi>s</mi><mi>t</mi></mrow></msub><mtext>表示在整个作业时间段问题发生变化的总次数</mtext><mrow><mo fence=\"true\">(</mo><msub><mi>t</mi><mi>T</mi></msub></mrow><mtext>表示固定的区间）．作者建议在第</mtext><mi>t</mi><mtext>个固定区间上，</mtext><msub><mi>P</mi><mi>L</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><msub><mi>N</mi><mi>h</mi></msub><mo>+</mo><msub><mi>N</mi><mi>t</mi></msub></mrow></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><msub><mi>N</mi><mi>t</mi></msub><mo>+</mo><msub><mi>N</mi><mi>s</mi></msub></mrow></munderover><msub><mi>P</mi><mrow><mi>i</mi><mi>t</mi></mrow></msub><msub><mi>P</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>P</mi><mrow><mi>j</mi><mi>t</mi></mrow></msub><mtext>．另外，该测试函数有</mtext><mi>M</mi><mrow><mo fence=\"true\">(</mo><msub><mi>N</mi><mi>s</mi></msub><mo>+</mo><msub><mi>N</mi><mi>h</mi></msub><mo fence=\"true\">)</mo></mrow><mtext>个变量，</mtext><mi>M</mi><mo>+</mo><msub><mi>N</mi><mi>h</mi></msub><mtext>个等式约束及</mtext><mn>2</mn><mi>M</mi><mrow><mo fence=\"true\">(</mo><msub><mi>N</mi><mi>s</mi></msub><mo>+</mo><msub><mi>N</mi><mi>h</mi></msub><mo fence=\"true\">)</mo></mrow><mtext>个变量边界</mtext></mrow><annotation encoding=\"application/x-tex\">其中， N_{h}  表示水电发生器  P_{h t}  的个数， N_{s}  表示热熔产生器  P_{s t}  的个数，且  x=\\left(P_{k t}, P_{s t}\\right), M=T /P_{s t}  表示在整个作业时间段问题发生变化的总次数  \\left(t_{T}\\right.  表示固定的区间）．作者建议在第  t  个固定区间上， P_{L}=\\sum_{i=1}^{N_{h}+N_{t}} \\sum_{j=1}^{N_{t}+N_{s}} P_{i t} P_{i j} P_{j t}  ．另外，该测试函数有  M\\left(N_{s}+N_{h}\\right)  个变量， M+N_{h}  个等式约束及  2 M\\left(N_{s}+N_{h}\\right)  个变量边界 \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord cjk_fallback\">其</span><span class=\"mord cjk_fallback\">中</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">水</span><span class=\"mord cjk_fallback\">电</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">器</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">热</span><span class=\"mord cjk_fallback\">熔</span><span class=\"mord cjk_fallback\">产</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">器</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">且</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">在</span><span class=\"mord cjk_fallback\">整</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">作</span><span class=\"mord cjk_fallback\">业</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">段</span><span class=\"mord cjk_fallback\">问</span><span class=\"mord cjk_fallback\">题</span><span class=\"mord cjk_fallback\">发</span><span class=\"mord cjk_fallback\">生</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">化</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">总</span><span class=\"mord cjk_fallback\">次</span><span class=\"mord cjk_fallback\">数</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">固</span><span class=\"mord cjk_fallback\">定</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">区</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">）</span><span class=\"mord cjk_fallback\">．</span><span class=\"mord cjk_fallback\">作</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord cjk_fallback\">建</span><span class=\"mord cjk_fallback\">议</span><span class=\"mord cjk_fallback\">在</span><span class=\"mord cjk_fallback\">第</span><span class=\"mord mathnormal\">t</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">固</span><span class=\"mord cjk_fallback\">定</span><span class=\"mord cjk_fallback\">区</span><span class=\"mord cjk_fallback\">间</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.258973em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8451960000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.316865em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8394360000000005em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.311105em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29634285714285713em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16454285714285719em;\"><span style=\"top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">．</span><span class=\"mord cjk_fallback\">另</span><span class=\"mord cjk_fallback\">外</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">该</span><span class=\"mord cjk_fallback\">测</span><span class=\"mord cjk_fallback\">试</span><span class=\"mord cjk_fallback\">函</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">有</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">等</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">约</span><span class=\"mord cjk_fallback\">束</span><span class=\"mord cjk_fallback\">及</span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">边</span><span class=\"mord cjk_fallback\">界</span></span></span></span></span></p>\n<h2 id=\"遗传算法\"><a class=\"markdownIt-Anchor\" href=\"#遗传算法\"></a> 遗传算法</h2>\n<p>首先使用遗传算法解决该问题，具体代码如下：</p>\n<details>\n<summary>遗传算法</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> deap <span class=\"keyword\">import</span> base, creator, tools, algorithms</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 创建多目标优化问题</span></span><br><span class=\"line\">creator.create(<span class=\"string\">&quot;FitnessMulti&quot;</span>, base.Fitness, weights=(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))  <span class=\"comment\"># 最小化目标</span></span><br><span class=\"line\">creator.create(<span class=\"string\">&quot;Individual&quot;</span>, <span class=\"built_in\">list</span>, fitness=creator.FitnessMulti)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义目标函数 f1(x) 和 f2(x)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate</span>(<span class=\"params\">individual</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 提取个体的参数</span></span><br><span class=\"line\">    P_s = individual[:N_s * M]</span><br><span class=\"line\">    P_h = individual[N_s * M:]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f1(x) - 热电系统的目标函数</span></span><br><span class=\"line\">    f1 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">            f1 += t_T[t] * (a_s[s] + b_s[s] * P_s[s * M + t] + c_s[s] * P_s[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            <span class=\"built_in\">abs</span>(d_s[s]) * np.sin(e_s[s] * (P_s_min[s] - P_s[s * M + t])))</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f2(x) - 水电系统的目标函数</span></span><br><span class=\"line\">    f2 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">            f2 += t_T[t] * (a_s[s] + β_s[s] * P_s[s * M + t] + γ_s[s] * P_s[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            η_s[s] * np.exp(δ_s[s] * P_s[s * M + t]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 返回目标函数值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> f1, f2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 定义约束条件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_constraints</span>(<span class=\"params\">individual</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 电力平衡约束</span></span><br><span class=\"line\">    P_s = individual[:N_s * M]</span><br><span class=\"line\">    P_h = individual[N_s * M:]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 约束 1: sum(P_s) + sum(P_h) - P_D - P_L = 0</span></span><br><span class=\"line\">    power_balance = np.<span class=\"built_in\">sum</span>(P_s) + np.<span class=\"built_in\">sum</span>(P_h) - P_D - P_L</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 约束 2: P_s_min &lt;= P_s &lt;= P_s_max (热电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_s[s * M + t] &gt;= P_s_min[s] <span class=\"keyword\">and</span> P_s[s * M + t] &lt;= P_s_max[s]):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 约束 3: P_h_min &lt;= P_h &lt;= P_h_max (水电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_h):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_h[h * M + t] &gt;= P_h_min[h] <span class=\"keyword\">and</span> P_h[h * M + t] &lt;= P_h_max[h]):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 如果没有违反任何约束，则返回True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 定义个体的初始化和变异操作</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_individual</span>():</span><br><span class=\"line\">    <span class=\"comment\"># 创建个体，假设每个个体包含 N_s * M 个热电发电量和 N_h * M 个水电发电量</span></span><br><span class=\"line\">    P_s = [random.uniform(P_s_min[s], P_s_max[s]) <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M)]</span><br><span class=\"line\">    P_h = [random.uniform(P_h_min[h], P_h_max[h]) <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_h) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P_s + P_h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 配置遗传算法</span></span><br><span class=\"line\">toolbox = base.Toolbox()</span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;individual&quot;</span>, tools.initIterate, creator.Individual, create_individual)</span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;population&quot;</span>, tools.initRepeat, <span class=\"built_in\">list</span>, toolbox.individual)</span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;mate&quot;</span>, tools.cxBlend, alpha=<span class=\"number\">0.5</span>)  <span class=\"comment\"># 交叉操作</span></span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;mutate&quot;</span>, tools.mutGaussian, mu=<span class=\"number\">0</span>, sigma=<span class=\"number\">1</span>, indpb=<span class=\"number\">0.2</span>)  <span class=\"comment\"># 变异操作</span></span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;select&quot;</span>, tools.selNSGA2)  <span class=\"comment\"># 使用NSGA-II选择操作</span></span><br><span class=\"line\">toolbox.register(<span class=\"string\">&quot;evaluate&quot;</span>, evaluate)</span><br><span class=\"line\">toolbox.decorate(<span class=\"string\">&quot;evaluate&quot;</span>, tools.DeltaPenalty(check_constraints, <span class=\"number\">100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 运行遗传算法</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    start_time = time.time()  <span class=\"comment\"># 开始计时</span></span><br><span class=\"line\"></span><br><span class=\"line\">    population = toolbox.population(n=<span class=\"number\">100</span>)  <span class=\"comment\"># 初始化种群</span></span><br><span class=\"line\">    algorithms.eaMuPlusLambda(population, toolbox, mu=<span class=\"number\">100</span>, lambda_=<span class=\"number\">200</span>, cxpb=<span class=\"number\">0.7</span>, mutpb=<span class=\"number\">0.2</span>, ngen=<span class=\"number\">50</span>, verbose=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_time = time.time()  <span class=\"comment\"># 结束计时</span></span><br><span class=\"line\">    elapsed_time = end_time - start_time  <span class=\"comment\"># 计算经过的时间</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Evaluation time: <span class=\"subst\">&#123;elapsed_time&#125;</span> seconds&quot;</span>)  <span class=\"comment\"># 打印计算时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> population</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7. 执行并输出结果</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 假设N_s, N_h, M的值已经定义，并设置相关参数</span></span><br><span class=\"line\">    N_s, N_h, M = <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>  <span class=\"comment\"># 示例值</span></span><br><span class=\"line\">    P_s_min = [<span class=\"number\">10</span>] * N_s</span><br><span class=\"line\">    P_s_max = [<span class=\"number\">100</span>] * N_s</span><br><span class=\"line\">    P_h_min = [<span class=\"number\">20</span>] * N_h</span><br><span class=\"line\">    P_h_max = [<span class=\"number\">150</span>] * N_h</span><br><span class=\"line\">    P_D, P_L = <span class=\"number\">200</span>, <span class=\"number\">100</span>  <span class=\"comment\"># 示例负荷需求</span></span><br><span class=\"line\">    a_s = [<span class=\"number\">0.1</span>] * N_s</span><br><span class=\"line\">    b_s = [<span class=\"number\">0.2</span>] * N_s</span><br><span class=\"line\">    c_s = [<span class=\"number\">0.3</span>] * N_s</span><br><span class=\"line\">    d_s = [<span class=\"number\">0.4</span>] * N_s</span><br><span class=\"line\">    e_s = [<span class=\"number\">0.5</span>] * N_s</span><br><span class=\"line\">    β_s = [<span class=\"number\">0.6</span>] * N_s</span><br><span class=\"line\">    γ_s = [<span class=\"number\">0.7</span>] * N_s</span><br><span class=\"line\">    η_s = [<span class=\"number\">0.8</span>] * N_s</span><br><span class=\"line\">    δ_s = [<span class=\"number\">0.9</span>] * N_s</span><br><span class=\"line\">    t_T = [<span class=\"number\">1</span>] * M  <span class=\"comment\"># 假设时间段为1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    population = main()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 获取最优解（非支配前沿）</span></span><br><span class=\"line\">    front = tools.sortNondominated(population, <span class=\"built_in\">len</span>(population), first_front_only=<span class=\"literal\">True</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    # 输出前沿的个体</span></span><br><span class=\"line\"><span class=\"string\">    for ind in front:</span></span><br><span class=\"line\"><span class=\"string\">        print(ind.fitness.values)  # 打印每个个体的目标值</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># 输出最优解</span></span><br><span class=\"line\">    best_ind = tools.selBest(population, <span class=\"number\">1</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best individual is: %s\\nwith fitness: %s&quot;</span> % (best_ind, best_ind.fitness.values))</span><br></pre></td></tr></table></figure>\n</details>\n计算得该算法用时1.982s。\n<h2 id=\"pso算法\"><a class=\"markdownIt-Anchor\" href=\"#pso算法\"></a> PSO算法</h2>\n<p>使用PSO算法进行计算，具体代码如下：</p>\n<details>\n<summary>PSO算法</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设有4个热力发电单元和6个时段</span></span><br><span class=\"line\">Ns = <span class=\"number\">4</span>  <span class=\"comment\"># 热力发电单元的数量</span></span><br><span class=\"line\">M = <span class=\"number\">6</span>   <span class=\"comment\"># 时段的数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设每个发电单元的系数（根据实际情况修改）</span></span><br><span class=\"line\">a_s = np.array([<span class=\"number\">100</span>, <span class=\"number\">120</span>, <span class=\"number\">140</span>, <span class=\"number\">160</span>])  <span class=\"comment\"># 常数项</span></span><br><span class=\"line\">b_s = np.array([<span class=\"number\">10</span>, <span class=\"number\">12</span>, <span class=\"number\">14</span>, <span class=\"number\">16</span>])      <span class=\"comment\"># 线性系数</span></span><br><span class=\"line\">c_s = np.array([<span class=\"number\">0.5</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.8</span>])  <span class=\"comment\"># 平方项系数</span></span><br><span class=\"line\">d_s = np.array([<span class=\"number\">1.0</span>, <span class=\"number\">1.1</span>, <span class=\"number\">1.2</span>, <span class=\"number\">1.3</span>])  <span class=\"comment\"># 正弦项系数</span></span><br><span class=\"line\">e_s = np.array([<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>])  <span class=\"comment\"># 正弦项系数</span></span><br><span class=\"line\">P_min_s = np.array([<span class=\"number\">50</span>, <span class=\"number\">60</span>, <span class=\"number\">70</span>, <span class=\"number\">80</span>])  <span class=\"comment\"># 每个发电单元的最小功率输出</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 排放系数（根据实际情况修改）</span></span><br><span class=\"line\">alpha_s = np.array([<span class=\"number\">2</span>, <span class=\"number\">2.5</span>, <span class=\"number\">3</span>, <span class=\"number\">3.5</span>])</span><br><span class=\"line\">beta_s = np.array([<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.4</span>])</span><br><span class=\"line\">gamma_s = np.array([<span class=\"number\">0.01</span>, <span class=\"number\">0.02</span>, <span class=\"number\">0.03</span>, <span class=\"number\">0.04</span>])</span><br><span class=\"line\">eta_s = np.array([<span class=\"number\">0.5</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.7</span>, <span class=\"number\">0.8</span>])</span><br><span class=\"line\">delta_s = np.array([<span class=\"number\">0.05</span>, <span class=\"number\">0.06</span>, <span class=\"number\">0.07</span>, <span class=\"number\">0.08</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设功率调度（P），是一个Ns x M的矩阵，代表每个发电单元在每个时段的功率输出</span></span><br><span class=\"line\">P = np.random.uniform(<span class=\"number\">50</span>, <span class=\"number\">200</span>, size=(Ns, M))  <span class=\"comment\"># 随机生成一些功率调度，单位：MW</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设电网需求功率（与实际情况一致）</span></span><br><span class=\"line\">power_demand = np.array([<span class=\"number\">900</span>, <span class=\"number\">1100</span>, <span class=\"number\">1000</span>, <span class=\"number\">1300</span>, <span class=\"number\">1100</span>, <span class=\"number\">1200</span>])  <span class=\"comment\"># 单位：MW，6个时段</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设水力发电单元的最大功率输出</span></span><br><span class=\"line\">max_hydro_output = np.array([<span class=\"number\">250</span>, <span class=\"number\">250</span>])  <span class=\"comment\"># 单位：MW</span></span><br><span class=\"line\"><span class=\"comment\"># 假设热力发电单元的最大功率输出</span></span><br><span class=\"line\">max_thermal_output = np.array([<span class=\"number\">125</span>, <span class=\"number\">175</span>, <span class=\"number\">250</span>, <span class=\"number\">300</span>])  <span class=\"comment\"># 单位：MW</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算总成本目标函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">total_cost</span>(<span class=\"params\">P</span>):</span><br><span class=\"line\">    cost = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):  <span class=\"comment\"># 每个时段</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(Ns):  <span class=\"comment\"># 每个发电单元</span></span><br><span class=\"line\">            cost += a_s[s] + b_s[s] * P[s, t] + c_s[s] * P[s, t]**<span class=\"number\">2</span> + <span class=\"built_in\">abs</span>(d_s[s] * np.sin(e_s[s] * (P_min_s[s] - P[s, t]))))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算排放目标函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">total_emission</span>(<span class=\"params\">P</span>):</span><br><span class=\"line\">    emission = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):  <span class=\"comment\"># 每个时段</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(Ns):  <span class=\"comment\"># 每个发电单元</span></span><br><span class=\"line\">            emission += alpha_s[s] + beta_s[s] * P[s, t] + gamma_s[s] * P[s, t]**<span class=\"number\">2</span> + eta_s[s] * np.exp(delta_s[s] * P[s, t])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> emission</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 粒子群初始化</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">initialize_particles</span>(<span class=\"params\">population_size, Ns, M,P_min_s,P_max_s</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化粒子的位置和速度</span></span><br><span class=\"line\">    positions = np.random.uniform(P_min_s[:, np.newaxis], max_thermal_output[:, np.newaxis], size=(population_size, Ns, M))</span><br><span class=\"line\">    velocities = np.zeros_like(positions)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 记录每个粒子的个体最佳位置</span></span><br><span class=\"line\">    pbest_positions = positions.copy()</span><br><span class=\"line\">    pbest_values = np.array([total_cost(p) + total_emission(p) <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> positions])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 记录全局最佳位置</span></span><br><span class=\"line\">    gbest_position = positions[np.argmin(pbest_values)]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> positions, velocities, pbest_positions, pbest_values, gbest_position</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新速度和位置</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">update_particles</span>(<span class=\"params\">positions, velocities, pbest_positions, pbest_values, gbest_position, w=<span class=\"number\">0.5</span>, c1=<span class=\"number\">1.5</span>, c2=<span class=\"number\">1.5</span></span>):</span><br><span class=\"line\">    r1 = np.random.random(positions.shape)</span><br><span class=\"line\">    r2 = np.random.random(positions.shape)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 更新速度</span></span><br><span class=\"line\">    velocities = w * velocities + c1 * r1 * (pbest_positions - positions) + c2 * r2 * (gbest_position - positions)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 更新位置</span></span><br><span class=\"line\">    positions = positions + velocities</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 确保粒子的位置在合法范围内</span></span><br><span class=\"line\">    positions = np.clip(positions, P_min_s[:, np.newaxis], max_thermal_output[:, np.newaxis])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> positions, velocities</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 粒子群优化主程序</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">particle_swarm_optimization</span>(<span class=\"params\">population_size, generations</span>):</span><br><span class=\"line\">    positions, velocities, pbest_positions, pbest_values, gbest_position = initialize_particles(population_size, Ns, M)</span><br><span class=\"line\">    </span><br><span class=\"line\">    convergence_curve_cost = []  <span class=\"comment\"># 用于记录每代的成本值（收敛曲线）</span></span><br><span class=\"line\">    convergence_curve_emission = []  <span class=\"comment\"># 用于记录每代的排放值（收敛曲线）</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> generation <span class=\"keyword\">in</span> tqdm(<span class=\"built_in\">range</span>(generations), desc=<span class=\"string\">&quot;Generations&quot;</span>, unit=<span class=\"string\">&quot;gen&quot;</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 计算每个粒子的适应度（成本和排放）</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(population_size):</span><br><span class=\"line\">            cost = total_cost(positions[i])</span><br><span class=\"line\">            emission = total_emission(positions[i])</span><br><span class=\"line\">            fitness_value = cost + emission</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 更新个体最佳位置</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> fitness_value &lt; pbest_values[i]:</span><br><span class=\"line\">                pbest_values[i] = fitness_value</span><br><span class=\"line\">                pbest_positions[i] = positions[i]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 更新全局最佳位置</span></span><br><span class=\"line\">        gbest_index = np.argmin(pbest_values)</span><br><span class=\"line\">        gbest_position = pbest_positions[gbest_index]</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 更新粒子的速度和位置</span></span><br><span class=\"line\">        positions, velocities = update_particles(positions, velocities, pbest_positions, pbest_values, gbest_position)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 记录当前代的最优解（成本和排放）</span></span><br><span class=\"line\">        best_cost = total_cost(gbest_position)</span><br><span class=\"line\">        best_emission = total_emission(gbest_position)</span><br><span class=\"line\">        </span><br><span class=\"line\">        convergence_curve_cost.append(best_cost)  <span class=\"comment\"># 记录成本</span></span><br><span class=\"line\">        convergence_curve_emission.append(best_emission)  <span class=\"comment\"># 记录排放</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Generation <span class=\"subst\">&#123;generation + <span class=\"number\">1</span>&#125;</span>: Best Solution (Cost): <span class=\"subst\">&#123;best_cost&#125;</span>, Emission: <span class=\"subst\">&#123;best_emission&#125;</span>&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 绘制收敛曲线</span></span><br><span class=\"line\">    fig, ax1 = plt.subplots()</span><br><span class=\"line\"></span><br><span class=\"line\">    ax1.set_xlabel(<span class=\"string\">&#x27;Generation&#x27;</span>)</span><br><span class=\"line\">    ax1.set_ylabel(<span class=\"string\">&#x27;Cost&#x27;</span>, color=<span class=\"string\">&#x27;tab:blue&#x27;</span>)</span><br><span class=\"line\">    ax1.plot(convergence_curve_cost, color=<span class=\"string\">&#x27;tab:blue&#x27;</span>, label=<span class=\"string\">&quot;Cost&quot;</span>)</span><br><span class=\"line\">    ax1.tick_params(axis=<span class=\"string\">&#x27;y&#x27;</span>, labelcolor=<span class=\"string\">&#x27;tab:blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    ax2 = ax1.twinx()  <span class=\"comment\"># 创建共享X轴的第二个Y轴</span></span><br><span class=\"line\">    ax2.set_ylabel(<span class=\"string\">&#x27;Emission&#x27;</span>, color=<span class=\"string\">&#x27;tab:red&#x27;</span>)</span><br><span class=\"line\">    ax2.plot(convergence_curve_emission, color=<span class=\"string\">&#x27;tab:red&#x27;</span>, label=<span class=\"string\">&quot;Emission&quot;</span>)</span><br><span class=\"line\">    ax2.tick_params(axis=<span class=\"string\">&#x27;y&#x27;</span>, labelcolor=<span class=\"string\">&#x27;tab:red&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    fig.tight_layout()  <span class=\"comment\"># 调整布局</span></span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Convergence Curve: Cost and Emission&#x27;</span>)</span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行粒子群优化</span></span><br><span class=\"line\">particle_swarm_optimization(population_size=<span class=\"number\">50</span>, generations=<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n计算得该算法使用时间为1.231s.\n<h2 id=\"普通神经网络\"><a class=\"markdownIt-Anchor\" href=\"#普通神经网络\"></a> 普通神经网络</h2>\n<p>然后可以使用神经网络进行计算，具体代码如下：\n损失函数的选择？</p>\n<details>\n<summary>神经网络</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">N_s, N_h, M = <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>  <span class=\"comment\"># 示例值</span></span><br><span class=\"line\">P_s_min = [<span class=\"number\">10</span>] * N_s*M</span><br><span class=\"line\">P_s_max = [<span class=\"number\">100</span>] * N_s*M</span><br><span class=\"line\">P_h_min = [<span class=\"number\">20</span>] * N_s*M</span><br><span class=\"line\">P_h_max = [<span class=\"number\">150</span>] * N_s*M</span><br><span class=\"line\">P_D, P_L = <span class=\"number\">200</span>, <span class=\"number\">100</span>  <span class=\"comment\"># 示例负荷需求</span></span><br><span class=\"line\">a_s = [<span class=\"number\">0.1</span>] * N_s*M</span><br><span class=\"line\">b_s = [<span class=\"number\">0.2</span>] * N_s*M</span><br><span class=\"line\">c_s = [<span class=\"number\">0.3</span>] * N_s*M</span><br><span class=\"line\">d_s = [<span class=\"number\">0.4</span>] * N_s*M</span><br><span class=\"line\">e_s = [<span class=\"number\">0.5</span>] * N_s*M</span><br><span class=\"line\">β_s = [<span class=\"number\">0.6</span>] * N_s*M</span><br><span class=\"line\">γ_s = [<span class=\"number\">0.7</span>] * N_s*M</span><br><span class=\"line\">η_s = [<span class=\"number\">0.8</span>] * N_s*M</span><br><span class=\"line\">δ_s = [<span class=\"number\">0.9</span>] * N_s*M</span><br><span class=\"line\">t_T = [<span class=\"number\">1</span>] *  N_s*M  <span class=\"comment\"># 假设时间段为1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 定义神经网络模型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MultiObjectiveNN</span>(nn.Module): <span class=\"comment\">#定义了一个包含三个全连接层的神经网络</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, input_size, output_size</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(MultiObjectiveNN, self).__init__() <span class=\"comment\"># 继承父类的构造函数，初始化神经网络</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 定义神经网络的层</span></span><br><span class=\"line\">        self.fc1 = nn.Linear(input_size, <span class=\"number\">128</span>) <span class=\"comment\"># 输入层到隐藏层</span></span><br><span class=\"line\">        self.fc2 = nn.Linear(<span class=\"number\">128</span>, <span class=\"number\">64</span>) <span class=\"comment\"># 隐藏层到隐藏层</span></span><br><span class=\"line\">        self.fc3 = nn.Linear(<span class=\"number\">64</span>, output_size) <span class=\"comment\"># 隐藏层到输出层</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>): <span class=\"comment\"># 定义前向传播，应用ReLu作为激活函数，最后输出预测值</span></span><br><span class=\"line\">        x = torch.relu(self.fc1(x))  <span class=\"comment\"># 激活函数</span></span><br><span class=\"line\">        x = torch.relu(self.fc2(x))</span><br><span class=\"line\">        x = self.fc3(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义目标函数 f1(x) 和 f2(x)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate</span>(<span class=\"params\">individual</span>):</span><br><span class=\"line\">    P_s = individual[:N_s * M] <span class=\"comment\">#提取前N_s*M个元素</span></span><br><span class=\"line\">    P_h = individual[N_h * M:] <span class=\"comment\">#提取后N_h*M个元素</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f1(x) - 热电系统的目标函数</span></span><br><span class=\"line\">    f1 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">            f1 += t_T[t] * (a_s[s] + b_s[s] * P_s[s * M + t] + c_s[s] * P_s[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            <span class=\"built_in\">abs</span>(d_s[s]) * np.sin(e_s[s] * (P_s_min[s] - P_s[s * M + t])))</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f2(x) - 水电系统的目标函数</span></span><br><span class=\"line\">    f2 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_h):</span><br><span class=\"line\">            f2 += t_T[t] * (a_s[s] + β_s[s] * P_s[s * M + t] + γ_s[s] * P_h[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            η_s[s] * np.exp(δ_s[s] * P_h[s * M + t]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> f1, f2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 定义约束条件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_constraints</span>(<span class=\"params\">individual</span>):</span><br><span class=\"line\">    P_s = individual[:N_s * M]</span><br><span class=\"line\">    P_h = individual[N_h * M:]</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    # 电力平衡约束</span></span><br><span class=\"line\"><span class=\"string\">    power_balance = np.sum(P_s) + np.sum(P_h) - P_D - P_L</span></span><br><span class=\"line\"><span class=\"string\">    # 约束 1: sum(P_s) + sum(P_h) - P_D - P_L = 0</span></span><br><span class=\"line\"><span class=\"string\">    if abs(power_balance) &gt; 1e-6:</span></span><br><span class=\"line\"><span class=\"string\">        print(&quot;不满足约束1&quot;)</span></span><br><span class=\"line\"><span class=\"string\">        return False  # 违反约束</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># 约束 2: P_s_min &lt;= P_s &lt;= P_s_max (热电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_s[s * M + t] &gt;= P_s_min[s] <span class=\"keyword\">and</span> P_s[s * M + t] &lt;= P_s_max[s]):</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不满足约束2&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 约束 3: P_h_min &lt;= P_h &lt;= P_h_max (水电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_h):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_h[h * M + t] &gt;= P_h_min[h] <span class=\"keyword\">and</span> P_h[h * M + t] &lt;= P_h_max[h]):</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不满足约束3&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 构建训练数据集</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">generate_training_data</span>(<span class=\"params\">num_samples</span>):</span><br><span class=\"line\">    X_data = []</span><br><span class=\"line\">    y_data = []</span><br><span class=\"line\">    valid_samples = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num_samples):</span><br><span class=\"line\">        <span class=\"comment\"># 随机生成输入数据</span></span><br><span class=\"line\">        P_s = np.random.uniform(P_s_min, P_s_max, N_s * M) </span><br><span class=\"line\">        P_h = np.random.uniform(P_h_min, P_h_max, N_h * M)</span><br><span class=\"line\">        </span><br><span class=\"line\">        individual = np.concatenate([P_s,P_h]) <span class=\"comment\"># 将两个数组连接起来</span></span><br><span class=\"line\">        <span class=\"comment\">#print(individual)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 如果满足约束，计算目标函数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> check_constraints(individual):</span><br><span class=\"line\">            valid_samples += <span class=\"number\">1</span></span><br><span class=\"line\">            f1, f2 = evaluate(individual)</span><br><span class=\"line\">            X_data.append(individual)</span><br><span class=\"line\">            y_data.append([f1, f2])  <span class=\"comment\"># 两个目标函数的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> check_constraints(individual):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Generated <span class=\"subst\">&#123;valid_samples&#125;</span> valid samples out of <span class=\"subst\">&#123;num_samples&#125;</span>&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.array(X_data), np.array(y_data)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 定义损失函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">loss_function</span>(<span class=\"params\">predictions, targets, constraints</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 目标函数损失：最小化 f1 和 f2</span></span><br><span class=\"line\">    loss = torch.mean(torch.<span class=\"built_in\">sum</span>(predictions ** <span class=\"number\">2</span>, dim=<span class=\"number\">1</span>))  <span class=\"comment\"># 对每个目标函数计算平方损失</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 约束损失：如果违反约束，则增加惩罚</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> constraints:</span><br><span class=\"line\">        loss += <span class=\"number\">1000</span>  <span class=\"comment\"># 如果违反约束，加大惩罚</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> loss</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 训练神经网络模型</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">train_model</span>(<span class=\"params\">model, X_train, y_train, epochs=<span class=\"number\">10</span>, lr=<span class=\"number\">0.001</span></span>):</span><br><span class=\"line\">    optimizer = optim.Adam(model.parameters(), lr=lr)</span><br><span class=\"line\">    criterion = loss_function</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(epochs):</span><br><span class=\"line\">        model.train()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(X_train))</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(X_train)):</span><br><span class=\"line\">            </span><br><span class=\"line\">            X_batch = torch.tensor(X_train[i:i+<span class=\"number\">1</span>], dtype=torch.float32)</span><br><span class=\"line\">            y_batch = torch.tensor(y_train[i:i+<span class=\"number\">1</span>], dtype=torch.float32)</span><br><span class=\"line\">            </span><br><span class=\"line\">            optimizer.zero_grad()</span><br><span class=\"line\">            </span><br><span class=\"line\">            predictions = model(X_batch) <span class=\"comment\"># 预测目标函数值</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 检查约束</span></span><br><span class=\"line\">            constraints = check_constraints(X_train[i])</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 计算损失</span></span><br><span class=\"line\">            loss = criterion(predictions, y_batch, constraints)</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 反向传播和优化</span></span><br><span class=\"line\">            loss.backward() </span><br><span class=\"line\">            optimizer.step()</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Epoch <span class=\"subst\">&#123;epoch+<span class=\"number\">1</span>&#125;</span>/<span class=\"subst\">&#123;epochs&#125;</span>, Loss: <span class=\"subst\">&#123;loss.item()&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7. 运行并优化模型</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\">    <span class=\"comment\"># 构建训练数据</span></span><br><span class=\"line\">    X_train, y_train = generate_training_data(<span class=\"number\">1000</span>)  <span class=\"comment\"># 1000个样本</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> X_train.size == <span class=\"number\">0</span> <span class=\"keyword\">or</span> y_train.size == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;No valid training data generated.&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 初始化神经网络模型</span></span><br><span class=\"line\">    model = MultiObjectiveNN(input_size=N_s * M + N_h * M, output_size=<span class=\"number\">2</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 训练模型</span></span><br><span class=\"line\">    train_model(model, X_train, y_train, epochs=<span class=\"number\">10</span>, lr=<span class=\"number\">0.001</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 使用训练好的模型进行预测</span></span><br><span class=\"line\">    input_test = torch.randn(<span class=\"number\">1</span>, N_s * M + N_h * M)  <span class=\"comment\"># 随机生成一个测试输入</span></span><br><span class=\"line\">    output_test = model(input_test)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Predicted output (cost and emission): <span class=\"subst\">&#123;output_test&#125;</span>&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    end_time = time.time()  <span class=\"comment\"># 结束计时</span></span><br><span class=\"line\">    elapsed_time = end_time - start_time  <span class=\"comment\"># 计算经过的时间</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Evaluation time: <span class=\"subst\">&#123;elapsed_time&#125;</span> seconds&quot;</span>)  <span class=\"comment\"># 打印计算时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>在同等规模下，神经网络算法需要用时23.81s。</p>\n<h2 id=\"由pso改进的神经网络\"><a class=\"markdownIt-Anchor\" href=\"#由pso改进的神经网络\"></a> 由PSO改进的神经网络</h2>\n<p>尝试将PSO算法和神经网络结合起来，求解该问题。具体代码如下:</p>\n<details>\n<summary>PSO结合神经网络</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.nn <span class=\"keyword\">as</span> nn</span><br><span class=\"line\"><span class=\"keyword\">import</span> torch.optim <span class=\"keyword\">as</span> optim</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1. 定义神经网络模型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MultiObjectiveNN</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, input_size, output_size</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(MultiObjectiveNN, self).__init__()</span><br><span class=\"line\">        <span class=\"comment\"># 定义神经网络的层</span></span><br><span class=\"line\">        self.fc1 = nn.Linear(input_size, <span class=\"number\">128</span>)</span><br><span class=\"line\">        self.fc2 = nn.Linear(<span class=\"number\">128</span>, <span class=\"number\">64</span>)</span><br><span class=\"line\">        self.fc3 = nn.Linear(<span class=\"number\">64</span>, output_size)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        x = torch.relu(self.fc1(x))  <span class=\"comment\"># 激活函数</span></span><br><span class=\"line\">        x = torch.relu(self.fc2(x))</span><br><span class=\"line\">        x = self.fc3(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 定义问题的参数和目标函数</span></span><br><span class=\"line\">N_s, N_h, M = <span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">10</span>  <span class=\"comment\"># 示例值</span></span><br><span class=\"line\">P_s_min = [<span class=\"number\">10</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">P_s_max = [<span class=\"number\">100</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">P_h_min = [<span class=\"number\">10</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">P_h_max = [<span class=\"number\">150</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">P_D, P_L = <span class=\"number\">200</span>, <span class=\"number\">100</span>  <span class=\"comment\"># 示例负荷需求</span></span><br><span class=\"line\">a_s = [<span class=\"number\">0.1</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">b_s = [<span class=\"number\">0.2</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">c_s = [<span class=\"number\">0.3</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">d_s = [<span class=\"number\">0.4</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">e_s = [<span class=\"number\">0.5</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">β_s = [<span class=\"number\">0.6</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">γ_s = [<span class=\"number\">0.7</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">η_s = [<span class=\"number\">0.8</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">δ_s = [<span class=\"number\">0.9</span>] * (N_s*M+N_h*M)</span><br><span class=\"line\">t_T = [<span class=\"number\">1</span>] * (N_s*M+N_h*M)  <span class=\"comment\"># 假设时间段为1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. 定义目标函数 f1(x) 和 f2(x)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evaluate</span>(<span class=\"params\">position</span>):</span><br><span class=\"line\">    P_s = position[:N_s * M]</span><br><span class=\"line\">    P_h = position[N_s * M:]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f1(x) - 热电系统的目标函数</span></span><br><span class=\"line\">    f1 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">            f1 += t_T[t] * (a_s[s] + b_s[s] * P_s[s * M + t] + c_s[s] * P_s[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            <span class=\"built_in\">abs</span>(d_s[s]) * np.sin(e_s[s] * (P_s_min[s] - P_s[s * M + t])))</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># f2(x) - 水电系统的目标函数</span></span><br><span class=\"line\">    f2 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">            f2 += t_T[t] * (a_s[s] + β_s[s] * P_s[s * M + t] + γ_s[s] * P_s[s * M + t]**<span class=\"number\">2</span> + </span><br><span class=\"line\">                            η_s[s] * np.exp(δ_s[s] * P_s[s * M + t]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> f1, f2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 定义约束条件</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_constraints</span>(<span class=\"params\">position</span>):</span><br><span class=\"line\">    P_s = position[:N_s * M]</span><br><span class=\"line\">    P_h = position[N_s * M:]</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    # 电力平衡约束</span></span><br><span class=\"line\"><span class=\"string\">    power_balance = np.sum(P_s) + np.sum(P_h) - P_D - P_L</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    # 约束 1: sum(P_s) + sum(P_h) - P_D - P_L = 0</span></span><br><span class=\"line\"><span class=\"string\">    if abs(power_balance) &gt; 1e-6:</span></span><br><span class=\"line\"><span class=\"string\">        return False  # 违反约束</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># 约束 2: P_s_min &lt;= P_s &lt;= P_s_max (热电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_s):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_s[s * M + t] &gt;= P_s_min[s] <span class=\"keyword\">and</span> P_s[s * M + t] &lt;= P_s_max[s]):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 约束 3: P_h_min &lt;= P_h &lt;= P_h_max (水电)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(N_h):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (P_h[h * M + t] &gt;= P_h_min[h] <span class=\"keyword\">and</span> P_h[h * M + t] &lt;= P_h_max[h]):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span>  <span class=\"comment\"># 违反约束</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span>  <span class=\"comment\"># 如果没有违反任何约束，则返回 True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5. 粒子群优化（PSO）算法实现</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">PSO</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, n_particles, n_iterations, input_size, model</span>):</span><br><span class=\"line\">        self.n_particles = n_particles</span><br><span class=\"line\">        self.n_iterations = n_iterations</span><br><span class=\"line\">        self.position = np.random.uniform(P_s_min,P_s_max,size=(n_particles, N_s * M + N_h * M))  <span class=\"comment\"># 初始化粒子位置</span></span><br><span class=\"line\">        self.velocity = np.random.uniform(P_h_min,P_h_max,size=(n_particles, N_s * M + N_h * M))  <span class=\"comment\"># 初始化粒子速度</span></span><br><span class=\"line\">        self.pbest_position = np.copy(self.position)  <span class=\"comment\"># 个体最优位置</span></span><br><span class=\"line\">        self.pbest_value = np.full(self.n_particles, np.inf)  <span class=\"comment\"># 个体最优适应度</span></span><br><span class=\"line\">        self.gbest_position = np.zeros(input_size)  <span class=\"comment\"># 全局最优位置</span></span><br><span class=\"line\">        self.gbest_value = np.inf  <span class=\"comment\"># 全局最优适应度</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># 速度更新的常数</span></span><br><span class=\"line\">        self.w = <span class=\"number\">0.5</span>  <span class=\"comment\"># 惯性权重</span></span><br><span class=\"line\">        self.c1 = <span class=\"number\">1.5</span>  <span class=\"comment\"># 自我认知因子</span></span><br><span class=\"line\">        self.c2 = <span class=\"number\">1.5</span>  <span class=\"comment\"># 社会认知因子</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        self.model = model  <span class=\"comment\"># 神经网络模型</span></span><br><span class=\"line\">        self.optimizer = optim.Adam(self.model.parameters(), lr=<span class=\"number\">0.001</span>)</span><br><span class=\"line\">        self.criterion = nn.MSELoss()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_velocity</span>(<span class=\"params\">self, particle_idx</span>):</span><br><span class=\"line\">        r1 = np.random.random(N_s * M + N_h * M)</span><br><span class=\"line\">        r2 = np.random.random(N_s * M + N_h * M)</span><br><span class=\"line\">        inertia = self.w * self.velocity[particle_idx]</span><br><span class=\"line\">        cognitive = self.c1 * r1 * (self.pbest_position[particle_idx] - self.position[particle_idx])</span><br><span class=\"line\">        social = self.c2 * r2 * (self.gbest_position - self.position[particle_idx])</span><br><span class=\"line\">        self.velocity[particle_idx] = inertia + cognitive + social</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">update_position</span>(<span class=\"params\">self, particle_idx</span>):</span><br><span class=\"line\">        self.position[particle_idx] = self.position[particle_idx] + self.velocity[particle_idx]</span><br><span class=\"line\">        <span class=\"comment\"># 限制粒子的位置在约束范围内</span></span><br><span class=\"line\">        self.position[particle_idx] = np.clip(self.position[particle_idx], P_s_min,P_s_max)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">optimize</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_iterations):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_particles):</span><br><span class=\"line\">                fitness = evaluate(self.position[i])</span><br><span class=\"line\">                <span class=\"keyword\">if</span> check_constraints(self.position[i]):</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> fitness[<span class=\"number\">0</span>] &lt; self.pbest_value[i]:  <span class=\"comment\"># 更新个体最优</span></span><br><span class=\"line\">                        self.pbest_value[i] = fitness[<span class=\"number\">0</span>]</span><br><span class=\"line\">                        self.pbest_position[i] = self.position[i]</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> fitness[<span class=\"number\">0</span>] &lt; self.gbest_value:  <span class=\"comment\"># 更新全局最优</span></span><br><span class=\"line\">                        self.gbest_value = fitness[<span class=\"number\">0</span>]</span><br><span class=\"line\">                        self.gbest_position = self.position[i]</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 用全局最优解训练神经网络</span></span><br><span class=\"line\">            inputs = torch.tensor(self.gbest_position, dtype=torch.float32).unsqueeze(<span class=\"number\">0</span>)  <span class=\"comment\"># 输入</span></span><br><span class=\"line\">            targets = torch.tensor([self.gbest_value], dtype=torch.float32).unsqueeze(<span class=\"number\">0</span>)  <span class=\"comment\"># 目标</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\"># 训练神经网络</span></span><br><span class=\"line\">            self.optimizer.zero_grad()</span><br><span class=\"line\">            predictions = self.model(inputs)</span><br><span class=\"line\">            loss = self.criterion(predictions, targets)</span><br><span class=\"line\">            loss.backward()</span><br><span class=\"line\">            self.optimizer.step()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 更新速度和位置</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(self.n_particles):</span><br><span class=\"line\">                self.update_velocity(i)</span><br><span class=\"line\">                self.update_position(i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6. 运行 PSO 和神经网络优化</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\">    input_size = N_s * M + N_h * M</span><br><span class=\"line\">    model = MultiObjectiveNN(input_size, output_size=<span class=\"number\">2</span>)  <span class=\"comment\"># 初始化神经网络模型</span></span><br><span class=\"line\">    pso = PSO(n_particles=<span class=\"number\">50</span>, n_iterations=<span class=\"number\">100</span>, input_size=input_size, model=model)  <span class=\"comment\"># 30个粒子，100代迭代</span></span><br><span class=\"line\">    pso.optimize()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出最优解</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Global Best Position (Optimal Solution): <span class=\"subst\">&#123;pso.gbest_position&#125;</span>&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Global Best Value (Optimal Objective Value): <span class=\"subst\">&#123;pso.gbest_value&#125;</span>&quot;</span>)</span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    print(f&quot;Global Best Position: &#123;pso.gbest_position&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    print(f&quot;Global Best Value: &#123;pso.gbest_value&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span>  </span><br><span class=\"line\">    end_time = time.time()</span><br><span class=\"line\">    elapsed_time = end_time - start_time</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;程序运行时间：<span class=\"subst\">&#123;elapsed_time:<span class=\"number\">.2</span>f&#125;</span>秒&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>计算时间为3.01s。</p>\n<p>由以上可得，遗传算法、粒子群算法、神经网络都可以用于求解动态优化问题</p>\n","tags":["论文"]},{"title":"水电站课设完成记录","url":"/2024/05/07/%E6%B0%B4%E7%94%B5%E7%AB%99%E8%AF%BE%E8%AE%BE%E5%AE%8C%E6%88%90%E8%AE%B0%E5%BD%95/","content":"<h1 id=\"任务开展三峡水库中长期调度研究\"><a class=\"markdownIt-Anchor\" href=\"#任务开展三峡水库中长期调度研究\"></a> 任务：开展三峡水库中长期调度研究</h1>\n<span id=\"more\"></span>\n<h1 id=\"任务要求414\"><a class=\"markdownIt-Anchor\" href=\"#任务要求414\"></a> 任务要求(4.14)</h1>\n<h3 id=\"进行水库长系列常规调度模拟计算常规非优化\"><a class=\"markdownIt-Anchor\" href=\"#进行水库长系列常规调度模拟计算常规非优化\"></a> 进行水库长系列常规调度模拟计算（常规，非优化）</h3>\n<ul>\n<li>一般采用常规调度图作为调度依据。</li>\n</ul>\n<h3 id=\"进行水库长系列优化调度模拟计算\"><a class=\"markdownIt-Anchor\" href=\"#进行水库长系列优化调度模拟计算\"></a> 进行水库长系列优化调度模拟计算</h3>\n<ul>\n<li>约束：末水位为常规调度末水位</li>\n<li>目标函数：</li>\n<li>算法：</li>\n</ul>\n<p>需要通过惩罚系数调整发电保证率，得出惩罚系数、发电保证率和发电量三者的关系。</p>\n<h3 id=\"在指定年份运行常规调度和优化调度的模型获得结果并对比各特征值\"><a class=\"markdownIt-Anchor\" href=\"#在指定年份运行常规调度和优化调度的模型获得结果并对比各特征值\"></a> 在指定年份运行常规调度和优化调度的模型，获得结果并对比各特征值</h3>\n<h1 id=\"个性化数据\"><a class=\"markdownIt-Anchor\" href=\"#个性化数据\"></a> 个性化数据</h1>\n<ul>\n<li>计算初期水位：173.45m</li>\n<li>优化调度最小下泄流量：5690m³/s</li>\n<li>计划年：1975</li>\n</ul>\n<h2 id=\"明日任务完成任务一思路构建\"><a class=\"markdownIt-Anchor\" href=\"#明日任务完成任务一思路构建\"></a> 明日任务：完成任务一思路构建</h2>\n<ul>\n<li>idea：根据95%的设计保证率进行年平均流量排频处理，输入P-Ⅲ型曲线代码得到相近年份，对照调度图进行常规调度模拟。</li>\n</ul>\n<hr />\n<h2 id=\"使用方法参照415\"><a class=\"markdownIt-Anchor\" href=\"#使用方法参照415\"></a> 使用方法（参照）(4.15)</h2>\n<ul>\n<li>经验适线法</li>\n<li>点绘样本经验点据</li>\n</ul>\n<p>将实测资料由大到小排列，计算各年流量经验频率，然后将经验点据绘制在机率格纸上。</p>\n<ul>\n<li>估计参数的初值并绘制频率曲线</li>\n</ul>\n<p>采用矩法或其他方法，估计分布的3个参数，记为（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>v</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{s}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ),作为适线法的初值。根据该参数查P-Ⅲ型分布<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span>值表，可以求得一组不同频率p对应的设计值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>，即</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>x</mi><mi>p</mi></msub><mo>=</mo><mover accent=\"true\"><mi>x</mi><mo stretchy=\"true\">‾</mo></mover><mo>∗</mo><mrow><mo fence=\"true\">[</mo><mn>1</mn><mo>+</mo><msub><mi>C</mi><mi>p</mi></msub><mo>∗</mo><mi mathvariant=\"normal\">Φ</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mo separator=\"true\">,</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">x_{p}=\\overline{x}*\\left[1+C_{p}*\\Phi(p,C_{s})\\right] \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.63056em;vertical-align:0em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.63056em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.55056em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">Φ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span></span></span></span></span></p>\n<p>根据(p,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>)绘制频率曲线（也称为理论频率曲线),并将此线画在绘有经验点据的机率格纸上。</p>\n<ul>\n<li>调整适线</li>\n</ul>\n<p>检查频率曲线与经验点据的拟合情况，若不理想，则调整参数（主要是调整<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{s}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>v</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>)，再重新计算频率曲线。</p>\n<h3 id=\"point\"><a class=\"markdownIt-Anchor\" href=\"#point\"></a> point</h3>\n<p>在计算时需要根据已有的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Φ</mi></mrow><annotation encoding=\"application/x-tex\">\\Phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Φ</span></span></span></span>值表读出不同<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>v</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_{s}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>下的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>K</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">K_{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>值进行择优选取曲线，当比值大于3时，则需要慎重考虑取值，可以反算前面的数据是否出现问题。</p>\n<h2 id=\"选年\"><a class=\"markdownIt-Anchor\" href=\"#选年\"></a> 选年</h2>\n<p>经过排频分析，得出95%设计保证率选年可以选为1959年。</p>\n<p><img src=\"/images/paipinjieguotu.jpg\" alt=\"paipinjieguotu\" /></p>\n<h2 id=\"任务一存在问题\"><a class=\"markdownIt-Anchor\" href=\"#任务一存在问题\"></a> 任务一存在问题：</h2>\n<h4 id=\"已知发电量如何确定水头\"><a class=\"markdownIt-Anchor\" href=\"#已知发电量如何确定水头\"></a> 已知发电量，如何确定水头</h4>\n<p>由出力公式，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>=</mo><mi>k</mi><mi>Q</mi><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">N=kQH</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">Q</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>，由水力学关系，有k(H),h(Q),<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mtext>下</mtext></msub></mrow><annotation encoding=\"application/x-tex\">H_{下}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord cjk_fallback mtight\">下</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>(Q),故所有参数均为下泄流量Q的函数。</p>\n<h4 id=\"如何使已知的一切数据表通过代码联动起来实现导入运行即可导出\"><a class=\"markdownIt-Anchor\" href=\"#如何使已知的一切数据表通过代码联动起来实现导入运行即可导出\"></a> 如何使已知的一切数据表通过代码联动起来，实现导入运行即可导出</h4>\n<ul>\n<li>为试算过程。</li>\n</ul>\n<p>需要解决程序如何在各阶段都能够线性插值，表格的使用顺序是什么样的，如何放置各阶段的约束条件。</p>\n<h2 id=\"明日任务\"><a class=\"markdownIt-Anchor\" href=\"#明日任务\"></a> 明日任务</h2>\n<p>完成程序的基本调试。</p>\n<hr />\n<h2 id=\"单时段常规调度程序416\"><a class=\"markdownIt-Anchor\" href=\"#单时段常规调度程序416\"></a> 单时段常规调度程序(4.16)</h2>\n<p>目前已经完成常规调度基本程序，需要进一步导入整个表格实现计算。以下为单个时段计算程序。</p>\n<p>思路存在问题：试算的结果无法进行及时的更新，无法确定具体的值。故不应将N设为试算结果评判标准，或应设置适当的Q的自增值。</p>\n<ul>\n<li>以下为上述思路代码</li>\n</ul>\n<details>\n<summary>代码一</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%%程序一</span></span><br><span class=\"line\">Q = input(<span class=\"string\">&quot;输入试算流量值：&quot;</span>);</span><br><span class=\"line\">hc = input(<span class=\"string\">&quot;输入时段初水位&quot;</span>);</span><br><span class=\"line\">Nsj = input(<span class=\"string\">&quot;输入实际出力&quot;</span>);</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; Q &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(Q-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; Q &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(Q-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(Q-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">H = hc - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> H &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; H &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(H-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> H &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(H-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">N = kcl*Q*H/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<p>最终结果误差小于0.0001，故接受。</p>\n<h2 id=\"尚未解决的问题\"><a class=\"markdownIt-Anchor\" href=\"#尚未解决的问题\"></a> 尚未解决的问题</h2>\n<ul>\n<li>如果初始流量值大于实际流量值，如何收敛到正确结果；</li>\n<li>初始填入的数据仍然需要通过读图读表得到，如何将其加入代码实现自动读图；</li>\n<li>在得出实际下泄流量后，还需要计算时段末水位和库容。库容还需设置边界条件***(这里是很重要的数据边界条件)***。</li>\n</ul>\n<h2 id=\"明日任务-2\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-2\"></a> 明日任务</h2>\n<p>完善程序细节，尽量解决上述问题。</p>\n<hr />\n<h2 id=\"任务一终稿有问题417\"><a class=\"markdownIt-Anchor\" href=\"#任务一终稿有问题417\"></a> 任务一终稿（有问题）(4.17)</h2>\n<p>最终联动程序设计思路：</p>\n<ul>\n<li>根据已得出的时段初水位读出当前时段发电量；</li>\n<li>根据入库流量假设出库流量，列入程序一进行试算；</li>\n<li>利用试算结果得出时段末水位，得出下一时段计算初始条件，重复计算。</li>\n</ul>\n<h3 id=\"需要逐步解决的问题\"><a class=\"markdownIt-Anchor\" href=\"#需要逐步解决的问题\"></a> 需要逐步解决的问题：</h3>\n<h4 id=\"1如何设置数组条件\"><a class=\"markdownIt-Anchor\" href=\"#1如何设置数组条件\"></a> 1.如何设置数组条件；</h4>\n<h4 id=\"2如何在自定义函数中使用工作区变量\"><a class=\"markdownIt-Anchor\" href=\"#2如何在自定义函数中使用工作区变量\"></a> 2.如何在自定义函数中使用工作区变量；</h4>\n<h4 id=\"3三峡汛限水位和死水位为同一高度即在6月-9月之间无规定发电量来多少泄多少发多少如何设置程序具体功能\"><a class=\"markdownIt-Anchor\" href=\"#3三峡汛限水位和死水位为同一高度即在6月-9月之间无规定发电量来多少泄多少发多少如何设置程序具体功能\"></a> 3.三峡汛限水位和死水位为同一高度，即在6月-9月之间无规定发电量，来多少泄多少发多少，如何设置程序具体功能；</h4>\n<h4 id=\"4如何限制最大发电量最大下泄流量以及计算弃水\"><a class=\"markdownIt-Anchor\" href=\"#4如何限制最大发电量最大下泄流量以及计算弃水\"></a> 4.如何限制最大发电量，最大下泄流量，以及计算弃水</h4>\n<h2 id=\"目前已解决1-2-3问题\"><a class=\"markdownIt-Anchor\" href=\"#目前已解决1-2-3问题\"></a> 目前已解决1、2、3问题</h2>\n<h3 id=\"遗留问题如何确定下泄流量初值如何限制最大发电量最大下泄流量以及计算弃水\"><a class=\"markdownIt-Anchor\" href=\"#遗留问题如何确定下泄流量初值如何限制最大发电量最大下泄流量以及计算弃水\"></a> 遗留问题：如何确定下泄流量初值；如何限制最大发电量，最大下泄流量，以及计算弃水。</h3>\n<details>\n<summary>代码二</summary>\n<p>以下为主程序代码：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%changguidiaodu.m</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) &gt; <span class=\"number\">145</span></span><br><span class=\"line\">    Q = input(<span class=\"string\">&quot;liuliang&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Q = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),N] = Nqfun(Q,hc);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= Q;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = Q*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>) + jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>) - jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%库容水位曲线</span></span><br><span class=\"line\"><span class=\"comment\">%已知库容求水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt; <span class=\"number\">145</span></span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\">        Q = (jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>)-jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>))*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">        [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)] = Nqfun(Q,hc);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) == jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) == <span class=\"number\">145</span></span><br><span class=\"line\">        Q = jieguo(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)] = Nqfun(Q,hc);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>读取调度图实际出力功能代码：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%NFun.m</span></span><br><span class=\"line\"><span class=\"comment\">%%利用调度图读取实际发电出力</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">result</span> = <span class=\"title\">NFun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt; diaodutu(y,<span class=\"built_in\">i</span>) &amp;&amp; x &lt; diaodutu(y,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = <span class=\"number\">0.8</span>*chuli(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &lt; diaodutu(y,<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">6</span>)*<span class=\"number\">0.8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; diaodutu(y,<span class=\"number\">7</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>以下为已知出力试算流量代码：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h,r]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h/<span class=\"number\">10000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"存在问题\"><a class=\"markdownIt-Anchor\" href=\"#存在问题\"></a> 存在问题</h3>\n<ul>\n<li>全功能代码过于复杂，并不容易调试，现尝试分函数块逐情况处理。</li>\n</ul>\n<h2 id=\"明日任务-3\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-3\"></a> 明日任务</h2>\n<p>优化处理任务一程序，完善功能。</p>\n<hr />\n<h2 id=\"课后新思路419\"><a class=\"markdownIt-Anchor\" href=\"#课后新思路419\"></a> 课后新思路(4.19)</h2>\n<ul>\n<li>155m为非汛期最低水位，即真正的死水位，故在枯水期调度时水位不能低于155；</li>\n<li>可以考虑对每一时段进行以电定水试算（查阅水文水利计算课本）</li>\n</ul>\n<h3 id=\"存在问题-2\"><a class=\"markdownIt-Anchor\" href=\"#存在问题-2\"></a> 存在问题：</h3>\n<ul>\n<li>两个主要功能函数存在循环嵌套的问题，需要细改</li>\n</ul>\n<p>以下为新代码：</p>\n<details>\n<summary>代码三</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%changguidiaodu</span></span><br><span class=\"line\"><span class=\"comment\">%for j = 1:15</span></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) &gt; <span class=\"number\">145</span></span><br><span class=\"line\">    Q = input(<span class=\"string\">&quot;liuliang&quot;</span>);</span><br><span class=\"line\">    N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),N] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">if jieguo(j,5) &lt;= 145</span></span><br><span class=\"line\"><span class=\"comment\">        [jieguo(j,5),jieguo(j,6),N] = ZVend(jieguo(j,12),jieguo(j,4),jieguo(j,2),jieguo(j,5));</span></span><br><span class=\"line\"><span class=\"comment\">        break;</span></span><br><span class=\"line\"><span class=\"comment\">end</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Q = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= Q;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = Q*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>) + jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>) - jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%库容水位曲线</span></span><br><span class=\"line\"><span class=\"comment\">%已知库容求时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"comment\">%Nqfun</span></span><br><span class=\"line\"><span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h,h51,r]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y,z)</span></span></span><br><span class=\"line\"><span class=\"comment\">%插值下游水位流量曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> x &lt; Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     <span class=\"keyword\">elseif</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h51 = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &lt; K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-h51)+K(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> h51 &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h51 &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">[h,h51,~] = ZVend(x*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>,y,z);</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"comment\">%ZVend</span></span><br><span class=\"line\"><span class=\"comment\">%%求时段末水位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h5,h6,N]</span> = <span class=\"title\">ZVend</span><span class=\"params\">(x,y,z)</span>%<span class=\"title\">x</span>为当前计算下的时段末库容，<span class=\"title\">y</span>为当前时段的初始水位,<span class=\"title\">z</span>为本时段来流流量,<span class=\"title\">w</span>为当前计算所得时段末水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> w &lt; <span class=\"number\">145</span></span><br><span class=\"line\">        Q = (y<span class=\"number\">-145</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">        [h6,N] = Nqfun(Q,y,z);</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> y == w &amp;&amp; w == <span class=\"number\">145</span></span><br><span class=\"line\">        Q = z;</span><br><span class=\"line\">        [h6,N] = Nqfun(Q,y,z);</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"现在出现的问题关键在于想实现全自动读取数据也许有贪心不足的情况接下来的任务还是继续跑第一次的程序手动算出一组数据再进行改进-目前思路出现了一些循环论证的问题需要搞清楚怎么把所需要试算的数据拆开再循环应该是逻辑本身有问题下次推进的时候先解决一下整个计算的试算步骤\"><a class=\"markdownIt-Anchor\" href=\"#现在出现的问题关键在于想实现全自动读取数据也许有贪心不足的情况接下来的任务还是继续跑第一次的程序手动算出一组数据再进行改进-目前思路出现了一些循环论证的问题需要搞清楚怎么把所需要试算的数据拆开再循环应该是逻辑本身有问题下次推进的时候先解决一下整个计算的试算步骤\"></a> 现在出现的问题关键在于想实现全自动读取数据，也许有贪心不足的情况，接下来的任务，还是继续跑第一次的程序，手动算出一组数据再进行改进。目前思路出现了一些循环论证的问题，需要搞清楚怎么把所需要试算的数据拆开再循环，应该是逻辑本身有问题，下次推进的时候先解决一下整个计算的试算步骤。</h3>\n<h2 id=\"明日任务-4\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-4\"></a> 明日任务</h2>\n<p>解决函数逻辑问题。</p>\n<hr />\n<p>今日无具体推进。(4.20)</p>\n<p>上课间隙简单跑了一下昨天最后的思路，发现一开始就出现了问题，因为水头本身很低，所以最后循环出来的时段末水位甚至成为了负值，这就导致以电定水的循环无法结束，故回到最初的思路，即在计算完出力后在循环内立即计算时段末水位，若不低于145，则继续迭代流量值，若低于145，则转为来多少发多少，计算结束后直接退出循环。</p>\n<p>这里也是上文所述的出现了循环嵌套的问题，今天所产生的新思路为，将正常插值计算时段末水位和来多少发多少计算时段末水位<em><strong>分开成两个函数进行使用</strong></em>，在出现水位过低的情况时，调用后者，并在计算完成后直接退出循环。</p>\n<p>仍需实践探索。</p>\n<h2 id=\"明日任务-5\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-5\"></a> 明日任务</h2>\n<p>争取改善时段循环的关键代码。</p>\n<hr />\n<p>正式完成水电站常规调度。最终代码如下：(4.22)</p>\n<details>\n<summary>代码四</summary>\n<p>主程序代码：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;changguidiaodu.m</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">ylim([<span class=\"number\">130</span>,<span class=\"number\">175</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>计算当前水位设计出力代码：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;NFun.m</span><br><span class=\"line\"><span class=\"comment\">%%利用调度图读取设计发电出力</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">result</span> = <span class=\"title\">NFun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= diaodutu(y,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>) &amp;&amp; x &lt;= diaodutu(y,<span class=\"built_in\">i</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &lt;= diaodutu(y,<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">6</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= diaodutu(y,<span class=\"number\">7</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>计算实际发电出力</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;Nqfun.m</span><br><span class=\"line\"><span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h51,h,r,flg]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y,z,v)</span>%下泄流量、初水位、入库水量、时段初水量</span></span><br><span class=\"line\">[h51,kcl] = head(x,y);</span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算时段末水位</span></span><br><span class=\"line\">h = ZVendnormal(z+v-x*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>);</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> h&lt;=<span class=\"number\">145</span></span><br><span class=\"line\">    h = <span class=\"number\">145</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> y &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; y &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">            w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(y-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    x = z+v-w;</span><br><span class=\"line\">    [h51,kcl] = head(x,y);</span><br><span class=\"line\">    r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\">    flg = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>计算正常情况下时段末水位：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;ZVendnormal.m</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">w</span> = <span class=\"title\">ZVendnormal</span><span class=\"params\">(x)</span>%<span class=\"title\">x</span>为时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>计算发电水头：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;head.m</span><br><span class=\"line\"><span class=\"comment\">%%水头计算函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h51,kcl]</span> = <span class=\"title\">head</span><span class=\"params\">(x,y)</span>%下泄流量,时段初水位</span></span><br><span class=\"line\"><span class=\"comment\">%插值下游水位流量曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> x &lt; Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     <span class=\"keyword\">elseif</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h51 = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &lt; K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-h51)+K(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> h51 &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h51 &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<p>最终得到枯水年枯水期发电水位变化曲线为：</p>\n<p>如图，在全年除汛期应正常维持在死水位外，其他时期的水头对发电来说过低，整体发电量很少。所选择的枯水年来水极少是一方面的原因，还有一方面，即直接使用调度图可能会导致竭泽而渔，彻底不给后面的来水情况做预备。</p>\n<p><img src=\"/images/shuiweibianhuatu-1713946448261.jpg\" alt=\"shuiweibianhuatu\" /></p>\n<p>接下来的任务是在已知初水位末水位的情况下，在汛限水位的约束下对发电和水位曲线进行优化调度。即任务二：</p>\n<h3 id=\"进行水库长系列优化调度模拟计算-2\"><a class=\"markdownIt-Anchor\" href=\"#进行水库长系列优化调度模拟计算-2\"></a> 进行水库长系列优化调度模拟计算</h3>\n<ul>\n<li>约束：末水位为常规调度末水位</li>\n<li>目标函数：</li>\n<li>算法：</li>\n</ul>\n<p>需要通过惩罚系数调整发电保证率，得出惩罚系数、发电保证率和发电量三者的关系。</p>\n<h2 id=\"明日任务-6\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-6\"></a> 明日任务</h2>\n<p>初步寻找所使用的优化调度方法和方程建立思路。</p>\n<hr />\n<p>(4.23)\n上午上课发现之前计算的初始水位选的有点太低，所以回来又改了一下常规调度的代码，矫正了一些参数的输出，变动不大，就不放出来了。</p>\n<p>晚上在查找优化调度使用的方法，在多约束又多阶段的情况下，决定使用微分动态规划进行优化计算。需要具体学习一下微分动态规划的理论和建立方程的方法，作为明天的任务。</p>\n<p>查到有关微分动态规划理论的网址如下：</p>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/f22de42327b4\">https://www.jianshu.com/p/f22de42327b4</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/629149697\">https://zhuanlan.zhihu.com/p/629149697</a></li>\n</ul>\n<hr />\n<p>(4.24)\n昨晚观察表格发现后三个月来水并不少，所以决定今天首先把时段末水位重新蓄回正常蓄水位，水位蓄高之后发电量与之前相比也大了很多。修改的主程序代码如下，其余功能函数没有发生改变：</p>\n<details>\n<summary>代码五</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%前24旬调度计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%后12旬（蓄水至175）</span></span><br><span class=\"line\">jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(<span class=\"number\">393</span>-jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>))&gt;<span class=\"number\">0.01</span></span><br><span class=\"line\">Q = Q+<span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">25</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">jieguo(j,7) = NFun(hc,j);</span></span><br><span class=\"line\"><span class=\"comment\">Nsj = jieguo(j,7);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>),f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">185</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">10</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"明日任务-7\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-7\"></a> 明日任务</h2>\n<p>首先尝试使用最基本的动态规划解决问题。先建立好动态规划方程并设置计算的数据结构。</p>\n<hr />\n<p>（5.6）</p>\n<h2 id=\"首先建立逆序递推方程\"><a class=\"markdownIt-Anchor\" href=\"#首先建立逆序递推方程\"></a> 首先建立逆序递推方程</h2>\n<h3 id=\"1阶段与阶段变量\"><a class=\"markdownIt-Anchor\" href=\"#1阶段与阶段变量\"></a> 1.阶段与阶段变量</h3>\n<p>根据中长期规划，按旬划分为36个阶段，以t表示阶段变量，则t为面临时段，t+1~T为余留时期；</p>\n<h3 id=\"2状态变量\"><a class=\"markdownIt-Anchor\" href=\"#2状态变量\"></a> 2.状态变量</h3>\n<p>选择水库蓄水量为状态变量，记<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">V(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>为t时段初蓄水量；</p>\n<h3 id=\"3决策变量\"><a class=\"markdownIt-Anchor\" href=\"#3决策变量\"></a> 3.决策变量</h3>\n<p>取水电站发电引用流量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi><mi>f</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Qfd(t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>为决策变量；</p>\n<h2 id=\"4状态转移方程\"><a class=\"markdownIt-Anchor\" href=\"#4状态转移方程\"></a> 4.状态转移方程</h2>\n<p>即水量平衡方程，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>V</mi><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">[</mo><msub><mi>Q</mi><mrow><mi>r</mi><mi>k</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>Q</mi><mrow><mi>f</mi><mi>d</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>Q</mi><mrow><mi>q</mi><mi>s</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>∗</mo><mi mathvariant=\"normal\">Δ</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">V(t+1) = V(t) + [Q_{rk}(t) - Q_{fd}(t) - Q_{qs}(t)]*\\Delta T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span><span class=\"mord mathnormal mtight\">s</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>;</p>\n<h3 id=\"5指标函数\"><a class=\"markdownIt-Anchor\" href=\"#5指标函数\"></a> 5.指标函数</h3>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">output(t) = K * Qfd(t) * H(t);</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t) &gt;= Pb</span><br><span class=\"line\">    Pcl(t) = output(t);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t) = output(t) + b*(output(t)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6递推方程\"><a class=\"markdownIt-Anchor\" href=\"#6递推方程\"></a> 6.递推方程</h3>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Unknown column alignment: P at position 23: …\n\\begin{array}\nP̲best(t+1) = max…'>\\left\\{\n\\begin{array}\nPbest(t+1) = max(Pcl(t)+Pbest(t)); \\\\\nV(t+1) = V(t) + (Qrk(t)-Qfd(t)-Qqs(t))*T;\n\\end{array}\n\\right.</p>\n<h3 id=\"7约束条件\"><a class=\"markdownIt-Anchor\" href=\"#7约束条件\"></a> 7.约束条件</h3>\n<ul>\n<li>上下游水头差计算（函数约束）</li>\n<li>水电站预想出力限制（范围约束）</li>\n<li>水电站最大过流能力限制（范围约束）</li>\n<li>综合利用约束（范围约束）</li>\n<li>水库水量平衡（函数约束）</li>\n<li>库容曲线约束（函数约束）</li>\n<li>库水位或库蓄水量约束（范围约束）</li>\n<li>下游水位流量关系约束（值约束）</li>\n</ul>\n<p>即得如下代码：</p>\n<details>\n<summary>代码六</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = input(<span class=\"string\">&quot;最小生态流量为&quot;</span>);<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">Z = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">output = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Qfd = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">yxcl = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xxnl = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">output(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">6753</span>;</span><br><span class=\"line\">yxcl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">xxnl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Omax(<span class=\"number\">12</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &lt; yxcl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &lt; xxnl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &gt;= Qst &amp;&amp; Z(t,<span class=\"number\">1</span>) &gt;= <span class=\"number\">145</span> &amp;&amp; Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>)==<span class=\"number\">175</span> &amp;&amp; Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>)== <span class=\"number\">175</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(t,<span class=\"number\">1</span>),Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t,<span class=\"number\">1</span>) = Yuxcl(H(t));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t,<span class=\"number\">1</span>) = Xiaxnl(Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = V(t,<span class=\"number\">1</span>) + (Qrk(t,<span class=\"number\">1</span>)-Qfd(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t,<span class=\"number\">1</span>) = K * Qfd(t,<span class=\"number\">1</span>) * H(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t,<span class=\"number\">1</span>) = output(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t,<span class=\"number\">1</span>) = output(t,<span class=\"number\">1</span>) + b*(output(t,<span class=\"number\">1</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"number\">1</span>)+Pbest(t,<span class=\"number\">1</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &gt; yxcl(t,<span class=\"number\">1</span>)</span><br><span class=\"line\">    output(t,<span class=\"number\">1</span>) = yxcl(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Qfd(t,<span class=\"number\">1</span>) &gt; xxnl(t,<span class=\"number\">1</span>) </span><br><span class=\"line\">    Qfd(t,<span class=\"number\">1</span>) = xxnl(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Qfd(t,<span class=\"number\">1</span>) &lt; Qst </span><br><span class=\"line\">    Qfd(t,<span class=\"number\">1</span>) = Qst;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Z(t,<span class=\"number\">1</span>) &lt; <span class=\"number\">145</span></span><br><span class=\"line\">    Z(t,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;     </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) =<span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">其中，有最大下泄能力计算函数：</span><br><span class=\"line\"></span><br><span class=\"line\">​~~~matlab</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">q</span> = <span class=\"title\">Xiaxnl</span><span class=\"params\">(x)</span>%当前计算期上游水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">11</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        q = ((Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Omax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>预想出力限制计算函数：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Nyx</span> = <span class=\"title\">Yuxcl</span><span class=\"params\">(x)</span>%当前计算期出力水头</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">17</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        Nyx = ((Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>库容曲线约束计算函数：</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%库容曲线约束</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">z</span> = <span class=\"title\">Kurqx</span><span class=\"params\">(x)</span>%下一计算期的初始库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        z = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"写出计算方程后出现如下问题\"><a class=\"markdownIt-Anchor\" href=\"#写出计算方程后出现如下问题\"></a> 写出计算方程后，出现如下问题</h2>\n<ul>\n<li>问题1：只能计算下一个时段，如何实现全时段计算？如何将一个时段内的计算初始条件划分为多个段进行计算？如何设置数组？如何设置循环次数？</li>\n<li>问题2：约束条件很多，如何写入程序？写在哪里？如何实现变量约束条件内的改变？</li>\n</ul>\n<details>\n<summary>代码七</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\"><span class=\"comment\">%间隔数</span></span><br><span class=\"line\">n = <span class=\"number\">51</span>;</span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;</span><br><span class=\"line\"><span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;</span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">36</span>);</span><br><span class=\"line\">output = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">36</span>);</span><br><span class=\"line\">Qfd = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">yxcl = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">xxnl = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qst;</span><br><span class=\"line\">yxcl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">xxnl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Omax(<span class=\"number\">12</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">51</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"built_in\">j</span>) &lt; yxcl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &lt; xxnl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &gt;= Qst &amp;&amp; Z(t,<span class=\"built_in\">j</span>) &gt;= <span class=\"number\">145</span> &amp;&amp; V(t,<span class=\"number\">1</span>) &lt;= <span class=\"number\">393</span> &amp;&amp; V(t,<span class=\"number\">1</span>) &gt;= <span class=\"number\">171.5</span></span><br><span class=\"line\">Z(t,<span class=\"number\">15</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(t,<span class=\"number\">1</span>),(Z(t,<span class=\"built_in\">j</span>)+Z(t,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>))/<span class=\"number\">2</span>);<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = K * Qfd(t,<span class=\"number\">1</span>) * H(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) + b*(output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"number\">1</span>)+Pbest(t,<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">Qfd(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qfd(t,<span class=\"number\">1</span>)+<span class=\"number\">0.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Yuxcl(H(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Xiaxnl(Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = V(t,<span class=\"number\">1</span>) + (Qrk(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"以上代码基本解决上述问题出现新问题\"><a class=\"markdownIt-Anchor\" href=\"#以上代码基本解决上述问题出现新问题\"></a> 以上代码基本解决上述问题，出现新问题：</h2>\n<ul>\n<li>为什么总是跳出循环？如何解决？</li>\n<li>为什么计算结果里依然出现了不符合约束条件的值？</li>\n<li>如何确保最后一个水位为145？[增加if语句，若j=15则进入，单独计算流量值]</li>\n</ul>\n<h2 id=\"明日任务-8\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-8\"></a> 明日任务</h2>\n<p>解决上述问题。</p>\n<hr />\n<p>（5.7）</p>\n<h2 id=\"问题在哪里以及如何改变q\"><a class=\"markdownIt-Anchor\" href=\"#问题在哪里以及如何改变q\"></a> 问题：在哪里以及如何改变Q？</h2>\n<p>解决：Qfd为事先定义的数组。现在将约束条件变为if语句，加入Qfd初值设置，即将Q设为决策变量，相比于课堂所讲方法，他将水位作为决策变量。</p>\n<h2 id=\"问题出现维数灾不知道需要计算多久\"><a class=\"markdownIt-Anchor\" href=\"#问题出现维数灾不知道需要计算多久\"></a> 问题：出现维数灾，不知道需要计算多久。</h2>\n<details>\n<summary>代码八</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">Pcl = <span class=\"built_in\">zeros</span>(<span class=\"number\">51</span>,<span class=\"number\">36</span>);</span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">51</span>,<span class=\"number\">36</span>);</span><br><span class=\"line\">t = <span class=\"number\">1</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">15</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%%试算发电流量</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> t &lt;= <span class=\"number\">51</span></span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = V(t,<span class=\"built_in\">j</span>) + (Qrk(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(t,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"keyword\">if</span> V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt; <span class=\"number\">393</span> || V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) &lt; <span class=\"number\">145</span> || Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) &gt; <span class=\"number\">175</span></span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"built_in\">j</span>) &gt; yxcl(t,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + b*(output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"built_in\">j</span>)+Pbest(t,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Yuxcl(H(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Xiaxnl(Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">t = t+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"明日任务等待结果\"><a class=\"markdownIt-Anchor\" href=\"#明日任务等待结果\"></a> 明日任务：等待结果。</h2>\n<hr />\n<p>（5.8）</p>\n<h2 id=\"发现问题qfd的改变过于死板导致程序会陷入一个时段的死循环\"><a class=\"markdownIt-Anchor\" href=\"#发现问题qfd的改变过于死板导致程序会陷入一个时段的死循环\"></a> 发现问题：Qfd的改变过于死板，导致程序会陷入一个时段的死循环</h2>\n<h2 id=\"完成优化调度代码如下\"><a class=\"markdownIt-Anchor\" href=\"#完成优化调度代码如下\"></a> 完成优化调度，代码如下：</h2>\n<details>\n<summary>代码九</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">15000</span>,<span class=\"number\">15</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk1(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程2</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">171.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk2(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">16</span>:<span class=\"number\">27</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">28</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span><span class=\"number\">-27</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,endZ(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>])</span><br><span class=\"line\">ylim([<span class=\"number\">145</span> <span class=\"number\">185</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<p>得到水位变化如下图：</p>\n<p><img src=\"/images/image-20240508161239028.png\" alt=\"image-20240508161239028\" /></p>\n<p>使用1975年数据进行演算，得到优化调度保证率为77%，全年发电量13562.95wkW,常规调度保证率为45%，全年发电处理7916.28wkW,有显著的优化效果，可见调度图调度的保守性。</p>\n<hr />\n<p>（5.9）\n需要在程序中加入弃水计算部分，经过查找资料，得到弃水的出现条件是在水头一定的条件下电站出力不得大于水电站的预想出力，若大于，则多余水量为弃水.代码如下：</p>\n<details>\n<summary>代码十</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%前27旬调度计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">27</span></span><br><span class=\"line\">h = <span class=\"number\">0</span>;</span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">1</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">1</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"comment\">%计算弃水</span></span><br><span class=\"line\">Q1 = <span class=\"number\">1500</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) &gt; Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>))) &gt;= <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">    Q1 = Q1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">    [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),h,N,f] = Nqfun(Q1,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算有弃水情况下的发电流量</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> h &gt; <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        Vq = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">9</span>) = (V - Vq)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">9</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%后9旬（蓄水至175）</span></span><br><span class=\"line\">jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(<span class=\"number\">393</span>-jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>))&gt;<span class=\"number\">0.01</span></span><br><span class=\"line\">Q = Q+<span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">27</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>),f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">185</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">10</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;下泄流量/m³&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1975年来流常规调度水位变化曲线&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<p>需要加入惩罚系数和发电保证率之间的关系的计算，代码如下：</p>\n<details>\n<summary>代码十一<summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\">m = <span class=\"number\">0</span>;<span class=\"comment\">%计算保证率指标</span></span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">15000</span>,<span class=\"number\">15</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> c = <span class=\"number\">1</span>:<span class=\"number\">46</span></span><br><span class=\"line\">b = punish(c,<span class=\"number\">1</span>);<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">25000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">25000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span><span class=\"number\">-1</span> == <span class=\"number\">0</span></span><br><span class=\"line\">        f = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    faulce(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl1(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl1(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl1(<span class=\"built_in\">i</span>,:)+Pbest(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk1(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%统计发电出力</span></span><br><span class=\"line\">n = <span class=\"built_in\">size</span>(Pcl1,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            P1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl1(<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">j</span> == n</span><br><span class=\"line\">            P1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">     <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程2</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">171.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">164.27</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk2(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%统计发电出力</span></span><br><span class=\"line\">n = <span class=\"built_in\">size</span>(Pcl2,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            P2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl2(<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">         <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">j</span> == n</span><br><span class=\"line\">            P2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">16</span>:<span class=\"number\">27</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">28</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span><span class=\"number\">-27</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,endZ(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>])</span><br><span class=\"line\">ylim([<span class=\"number\">145</span> <span class=\"number\">185</span>])</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1975年来流优化调度水位变化曲线&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算发电保证率</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    P(<span class=\"number\">1</span>,k) = P1(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">16</span>:<span class=\"number\">24</span></span><br><span class=\"line\">    P(<span class=\"number\">1</span>,k) = P2(<span class=\"number\">1</span>,k<span class=\"number\">-15</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> d = <span class=\"number\">1</span>:<span class=\"number\">24</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> P(<span class=\"number\">1</span>,d) &lt; <span class=\"number\">499</span></span><br><span class=\"line\">       m = m+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">percent(c,<span class=\"number\">1</span>) = <span class=\"number\">1</span>-m/<span class=\"number\">24</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<p>基本完成课程设计任务。从最终得到的数据曲线来看，动态规划的问题比较大，另外两种方法均无法达到保证出力，是还没有解决的问题。常规调度第二段若完全按照调度图调度，整体发电甚至会更少。如果仍有时间，可以考虑改变出力目标，尝试全部改为保证出力计算。动态规划需要先做一些简单的小题再理解一下决策变量如何改变。</p>\n<p>先这样。over</p>\n<hr />\n","tags":["课设、水电站"]},{"title":"流域水文模型结课作业","url":"/2024/10/09/%E6%B5%81%E5%9F%9F%E6%B0%B4%E6%96%87%E6%A8%A1%E5%9E%8B%E7%BB%93%E8%AF%BE%E4%BD%9C%E4%B8%9A/","content":"<h2 id=\"任务\"><a class=\"markdownIt-Anchor\" href=\"#任务\"></a> 任务</h2>\n<p>采用流域水文模型进行流域降雨-径流模拟。本次模拟中采用线性扰动LPM模型。</p>\n<h3 id=\"模型概况\"><a class=\"markdownIt-Anchor\" href=\"#模型概况\"></a> 模型概况 <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></h3>\n<h4 id=\"总径流响应slm模型的系统方程\"><a class=\"markdownIt-Anchor\" href=\"#总径流响应slm模型的系统方程\"></a> 总径流响应（SLM）模型的系统方程</h4>\n<p>离散化的系统方程表达为：$$Y(k) = \\sum_{i=1}^{m}H(i)X(k-i+1) \\tag{0.1}$$\n水文预报的应用之一就是由降雨X(k)推求总径流Y(k)。显然，其中的前提就是已知系统的响应函数H(i)。然而，在未完全建立SLM模型之前，响应函数是有待确定的。我们把由历史上（或实时方式）观测的输入、输出信息[X(k)、Y(K)]用来便是水文系统模型中未知或待定的部分，称之为水文系统识别。它是水文系统方法中重要的内容之一。只有把系统模型中待定的部分都确定了，才能应用到实际的水文预报或水温计算。对于总径流线性响应模型，系统识别的问题归为水文模型响应函数的推求。采用最多的是矩阵最小二乘法，简述如下：</p>\n<p>考虑到所用资料有误差，或对系统所作的线性假定不完善，式(0.1)可做如下表述：$$Y(k)=\\sum_{i=1}^{m}X(k-i+1)H(i)+e(k) \\tag{0.2}$$\n式中,e(k)为随机误差项。\n随着水文时间序列的变化，即当k=1,2,...,n时，式（0.2）可逐行写为：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>e</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Y(1) = X(1)H(1)+e(1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>e</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Y(2) = X(1)H(2) + X(2)H(1) + e(2)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mrow><annotation encoding=\"application/x-tex\">\\vdots\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>e</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Y(m) = X(1)H(m) + X(2)H(m-1) + \\dots + X(m)H(1) + e(m)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"+0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mrow><annotation encoding=\"application/x-tex\">\\vdots\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mi>H</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>+</mo><mi>e</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Y(n) = X(n-m+1)H(m) + X(n-m+2)H(m-1) + \\dots +X(n)H(1) + e(n)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>他们可以用矩阵方程形式表达，简记为$$Y_{n\\times 1} = X_{n\\times n}H_{m\\times 1} + E_{n\\times 1} \\tag{0.2}$$\n式中，n代表水文资料的总长度，m是响应函数的记忆长度。由于n&gt;m，式（0.2）是一个超定方程组，其中的响应函数向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mrow><mi>m</mi><mo>×</mo><mn>1</mn></mrow></msub><mo>=</mo><mo stretchy=\"false\">[</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>h</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">]</mo><mi>L</mi></msup></mrow><annotation encoding=\"application/x-tex\">H_{m\\times 1} = [h(1),h(2),\\dots,h(m)]^L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913309999999998em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span></span></span></span></span></span></span></span>可采用最小二乘法识别。目标函数记为$$J(H)=\\sum_{k=1}<sup>{n}e</sup>2(k)=E<sup>TE=(Y-XH)</sup>T(Y-XH) \\=Y<sup>TY-2H</sup>TX<sup>TY+H</sup>TX^TXH \\tag{0.3}$$\n由目标函数极小化，即min{J(H)}，不难导出响应函数的最小二乘解向量为：$$\\hat H = [X<sup>TX]</sup>{-1}[X^TY] \\tag{0.4}$$</p>\n<h4 id=\"线性扰动模型的结构和基本假定\"><a class=\"markdownIt-Anchor\" href=\"#线性扰动模型的结构和基本假定\"></a> 线性扰动模型的结构和基本假定</h4>\n<p>线性扰动模型建立的思想是：依据观测的降雨<sub>径流（或河道输入</sub>输出）资料记为{I(k),Q(k)}，计算季节均值及其平滑值，分别记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">I_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。关于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">I_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>~<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>之间的复杂关系不作任何假定。然后，分别计算系统输入、输出变量相对他们季节均值的扰动项，即$$X(k) = I(k) - I_d \\tag{1}$$ $$Y(k) = Q(k) - Q_d \\tag{2}$$</p>\n<p>由于一个水文输入~输出序列中季节均值占有主导部分，为简化模型假定：输入的扰动项<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>I</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">X(k) = I(k) - I_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>与输出的扰动项<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>Q</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Y(k) = Q(k) - Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>之间存在线性关系，即$$Y(k) = \\sum_{j=1}^{m}H(j)X(k-j+1)+e(k) \\tag{3}$$\n式中，H(j)被称为线性扰动系统响应函数，e(k)为误差，则我们把由上述三式组合的系统模型称为线性扰动模型（LPM）。</p>\n<h3 id=\"模型建立具体步骤\"><a class=\"markdownIt-Anchor\" href=\"#模型建立具体步骤\"></a> 模型建立具体步骤<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></h3>\n<ul>\n<li>由观测的资料分别计算水文系统输入~输出序列样本的季节均值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">I_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，d=1,2,3...,365。</li>\n<li>季节均值是流域的基本水文属性之一，应当是比较平稳的过程。但实际中求得的季节均值不可避免地带有随机噪音而出现振荡，因此，需要采用一定的数学方法使季节均值光滑。本次计算使用傅里叶级数法进行光滑。数学方程为：</li>\n</ul>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><msub><mi>Q</mi><mi>d</mi></msub><mo>=</mo><mover accent=\"true\"><msub><mi>Q</mi><mi>d</mi></msub><mo>ˉ</mo></mover><mo>+</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>L</mi></munderover><mo stretchy=\"false\">[</mo><msub><mi>A</mi><mi>j</mi></msub><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mn>2</mn><mi>π</mi><mi>j</mi><mi>d</mi></mrow><mn>365</mn></mfrac><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>B</mi><mi>j</mi></msub><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mn>2</mn><mi>π</mi><mi>j</mi><mi>d</mi></mrow><mn>365</mn></mfrac><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">Q_d = \\bar{Q_d} + \\sum_{j=1}^{L}[A_jcos(\\frac{2\\pi jd}{365}) + B_jsin(\\frac{2\\pi jd}{365})] \\tag{4}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0145499999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8201099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˉ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2421130000000007em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000006em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.2421130000000007em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">4</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>式中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><msub><mi>Q</mi><mi>d</mi></msub><mo>ˉ</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\bar{Q_d}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0145499999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8201099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˉ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span>为均值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>为傅里叶系数，j为调和函数的序数，即</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><mover accent=\"true\"><msub><mi>Q</mi><mi>d</mi></msub><mo>ˉ</mo></mover><mo>=</mo><mfrac><mn>1</mn><mn>365</mn></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mn>365</mn></munderover><msub><mi>Q</mi><mi>d</mi></msub></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\bar{Q_d} = \\frac{1}{365}\\sum_{j=1}^{365}Q_d \\tag{5}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0145499999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8201099999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">ˉ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2148900000000005em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4137769999999998em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.2148900000000005em;vertical-align:-1.4137769999999998em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">5</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><msub><mi>A</mi><mi>j</mi></msub><mo>=</mo><mfrac><mn>2</mn><mn>365</mn></mfrac><munderover><mo>∑</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mn>365</mn></munderover><msub><mi>Q</mi><mi>d</mi></msub><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mn>2</mn><mi>π</mi><mi>j</mi><mi>d</mi></mrow><mn>365</mn></mfrac><mo stretchy=\"false\">)</mo></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(6)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">A_j = \\frac{2}{365}\\sum_{d=1}^{365}Q_dcos(\\frac{2\\pi jd}{365}) \\tag{6}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1032260000000003em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.801113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.1032260000000003em;vertical-align:-1.302113em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">6</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable width=\"100%\"><mtr><mtd width=\"50%\"></mtd><mtd><mrow><msub><mi>B</mi><mi>j</mi></msub><mo>=</mo><mfrac><mn>2</mn><mn>365</mn></mfrac><munderover><mo>∑</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mn>365</mn></munderover><msub><mi>Q</mi><mi>d</mi></msub><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mfrac><mrow><mn>2</mn><mi>π</mi><mi>j</mi><mi>d</mi></mrow><mn>365</mn></mfrac><mo stretchy=\"false\">)</mo></mrow></mtd><mtd width=\"50%\"></mtd><mtd><mtext>(7)</mtext></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">B_j = \\frac{2}{365}\\sum_{d=1}^{365}Q_dsin(\\frac{2\\pi jd}{365}) \\tag{7}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1032260000000003em;vertical-align:-1.302113em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.801113em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">6</span><span class=\"mord mtight\">5</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span></span><span class=\"tag\"><span class=\"strut\" style=\"height:3.1032260000000003em;vertical-align:-1.302113em;\"></span><span class=\"mord text\"><span class=\"mord\">(</span><span class=\"mord\"><span class=\"mord\">7</span></span><span class=\"mord\">)</span></span></span></span></span></span></p>\n<p>当式(4)中的调和函数只取得几项时，就得到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>d</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的光滑过程。实际中，一般取L=4或5个调和系数。</p>\n<ul>\n<li>利用式（1）、（2）计算输入扰动项X(k)和输出扰动项Y(k)形成式（3）的线性系统方程。</li>\n<li>采用与线性总径流模型相同的方法，由最小二乘法识别LPM模型的相应函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>H</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat H(j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.19677em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span>。</li>\n<li>一旦响应函数已经求得，便可利用式（3）由降雨（或上流入流）的扰动值X(k)求得相应的出流扰动<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>Y</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat Y(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.19677em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>。</li>\n<li>由此计算或预报出系列<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>Q</mi><mi>d</mi></msub><mo>+</mo><mover accent=\"true\"><mi>Y</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Q(k)=Q_d+\\hat Y(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.19677em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span>。</li>\n</ul>\n<h3 id=\"模型建立\"><a class=\"markdownIt-Anchor\" href=\"#模型建立\"></a> 模型建立</h3>\n<h4 id=\"计算平滑后数据\"><a class=\"markdownIt-Anchor\" href=\"#计算平滑后数据\"></a> 计算平滑后数据</h4>\n<p>此次模型建立取L=4进行平滑。根据上述公式对Q、P、E得到平滑结果如下：</p>\n<p><img src=\"%E6%B5%81%E9%87%8F%E5%B9%B3%E6%BB%91%E7%BB%93%E6%9E%9C.png\" alt=\"alt text\" />\n<img src=\"%E9%99%8D%E9%9B%A8%E5%B9%B3%E6%BB%91%E7%BB%93%E6%9E%9C.png\" alt=\"alt text\" />\n<img src=\"%E8%92%B8%E5%8F%91%E5%B9%B3%E6%BB%91%E7%BB%93%E6%9E%9C.png\" alt=\"alt text\" /></p>\n<h4 id=\"建立线性系统方程\"><a class=\"markdownIt-Anchor\" href=\"#建立线性系统方程\"></a> 建立线性系统方程</h4>\n<p>根据式（1）（2）计算输入输出扰动项并得到类似式（3）的线性系统方程。</p>\n<h4 id=\"使用遗传算法计算hat-hk\"><a class=\"markdownIt-Anchor\" href=\"#使用遗传算法计算hat-hk\"></a> 使用遗传算法计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>H</mi><mo>^</mo></mover><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\hat H(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.19677em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span></h4>\n<p>首先编写一个简单的遗传算法代码：</p>\n<details>\n<summary>初始化种群:该函数生成一个大小为pop_size的初始种群，每个个体的基因长度为gene_length，基因值为0或1。</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">population</span> = <span class=\"title\">initialize_population</span><span class=\"params\">(pop_size, gene_length)</span></span></span><br><span class=\"line\">    population = randi([<span class=\"number\">0</span>, <span class=\"number\">1</span>], pop_size, gene_length);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>适应度函数：该函数计算个体的适应度，适应度为个体中1的数量。</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(individual)</span></span></span><br><span class=\"line\">    fit = sum(individual);  <span class=\"comment\">% Example: maximize the number of 1s</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>选择操作：这个函数根据适应度选择个体，适应度越高，被选中的概率越大。randsample函数用于带权重的随机抽样</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population, fitnesses)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population), <span class=\"built_in\">length</span>(population), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices, :);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>交叉操作：这个函数对两个父代个体进行交叉操作，生成两个子代个体。交叉点是随机选择的</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[offspring1, offspring2]</span> = <span class=\"title\">crossover</span><span class=\"params\">(parent1, parent2)</span></span></span><br><span class=\"line\">    point = randi([<span class=\"number\">1</span>, <span class=\"built_in\">length</span>(parent1) - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    offspring1 = [parent1(<span class=\"number\">1</span>:point), parent2(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\">    offspring2 = [parent2(<span class=\"number\">1</span>:point), parent1(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>变异操作：该函数对个体进行变异操作，每个基因以mutation_rate的概率发生变异，xor用于反转基因值</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutated_individual</span> = <span class=\"title\">mutate</span><span class=\"params\">(individual, mutation_rate)</span></span></span><br><span class=\"line\">    mutation_mask = <span class=\"built_in\">rand</span>(<span class=\"built_in\">size</span>(individual)) &lt; mutation_rate;</span><br><span class=\"line\">    mutated_individual = xor(individual, mutation_mask);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>生成新一代：这个函数生成新一代种群，通过选择、交叉和变异操作生成新的个体</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new_pop</span> = <span class=\"title\">new_generation</span><span class=\"params\">(population, mutation_rate)</span></span></span><br><span class=\"line\">    new_pop = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">size</span>(population));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">2</span>:<span class=\"built_in\">length</span>(population)</span><br><span class=\"line\">        parent1 = population(<span class=\"built_in\">i</span>, :);</span><br><span class=\"line\">        parent2 = population(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :);</span><br><span class=\"line\">        [offspring1, offspring2] = crossover(parent1, parent2);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>, :) = mutate(offspring1, mutation_rate);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :) = mutate(offspring2, mutation_rate);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<details>\n<summary>遗传算法主函数：该函数包含遗传算法的核心部分，包括上述所有函数以及终止条件，并最终输出结果</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">final_population</span> = <span class=\"title\">genetic_algorithm</span><span class=\"params\">(pop_size, gene_length, mutation_rate, generations)</span></span></span><br><span class=\"line\">    population = initialize_population(pop_size, gene_length);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> gen = <span class=\"number\">1</span>:generations</span><br><span class=\"line\">        fitnesses = arrayfun(@fitness, population);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">max</span>(fitnesses) == gene_length</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;  <span class=\"comment\">% Terminate if an optimal solution is found</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        population = selection(population, fitnesses);</span><br><span class=\"line\">        population = new_generation(population, mutation_rate);</span><br><span class=\"line\">        fprintf(<span class=\"string\">&#x27;Generation %d: Max Fitness = %d\\n&#x27;</span>, gen, <span class=\"built_in\">max</span>(fitnesses));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    final_population = population;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>fitnesses = arrayfun(@fitiness,population)语法\n<ul>\n<li>arrayfun:arrayfun函数在matlab中用于对数组的每个元素应用指定的函数，它的语法是</li>\n</ul>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">arrayfun(function_handle,array)</span><br></pre></td></tr></table></figure>\n其中function_handle是要应用的函数，array是要处理的数组。\n<ul>\n<li>@fitness：@fitness是一个函数句柄，指向定义的fitness函数。在上文已经提及其用于计算个体的适应度。</li>\n<li>population：population是一个矩阵，表示当前种群。每一行代表一个个体，每一列代表一个基因。</li>\n</ul>\n</li>\n</ul>\n</details>\n<details>\n<summary>参数设置和运行：这部分代码设置了包括种群大小、基因长度、变异率和最大代数等参数，并运行遗传算法</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">10</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% Run Genetic Algorithm</span></span><br><span class=\"line\">final_population = genetic_algorithm(pop_size, gene_length, mutation_rate, generations);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Final Population:&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(final_population);</span><br></pre></td></tr></table></figure>\n</details>\n<p>然后对其进行改写。\n首先，对进行交叉、进行变异、生成下一代的函数不做任何改变，用来进行交叉操作，变异操作，生成下一代。</p>\n<p>对于适应度函数，由于本次课设任务为拟合流量过程，因此将个体适应度改为在线性系统方程中所得到的函数值与流量数据的差值。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(individual)</span></span></span><br><span class=\"line\">    fit = <span class=\"built_in\">abs</span>(Y(<span class=\"built_in\">i</span>)-bin2dec(individual)*X(<span class=\"built_in\">i</span>));  <span class=\"comment\">%将个体由二进制转化为十进制进行计算</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>选择操作中，根据适应度选择个体。在上述情况下，设置适应度最小的个体最有可能被选中。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population, fitnesses)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = <span class=\"number\">1</span> - fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population), <span class=\"built_in\">length</span>(population), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices, :);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>对于参数的随机生成，由于选取的参数为方程的系数，且样本数据较大会导致循环次数较多，因此需要限制生成的参数为小数且小数和整数部分的长度都不过长。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">100</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\n<p>还需要编制按照上述要求将生成的二进制样本转化为十进制数的函数bin_dec。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decimal</span> = <span class=\"title\">bin_dec</span><span class=\"params\">(population)</span></span></span><br><span class=\"line\">    int_part(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>) = population(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>);</span><br><span class=\"line\">    frac_part(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">3</span>) = population(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">    a = <span class=\"built_in\">length</span>(int_part(<span class=\"built_in\">j</span>,:));</span><br><span class=\"line\">    b = <span class=\"built_in\">length</span>(frac_part(<span class=\"built_in\">j</span>,:));</span><br><span class=\"line\">    <span class=\"comment\">% Convert the integer part</span></span><br><span class=\"line\">    decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:a</span><br><span class=\"line\">        decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + int_part(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(a - <span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the fractional part</span></span><br><span class=\"line\">    decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)  = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:b</span><br><span class=\"line\">        decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)  + frac_part(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(-<span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Combine the integer and fractional parts</span></span><br><span class=\"line\">    decimal(<span class=\"built_in\">j</span>) = decimal_int(<span class=\"built_in\">j</span>) + decimal_frac(<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>最后还需要修改程序的数据结构，对X(k),Y(k)中三年内的数据进行计算，得到每一日输入输出的响应函数，最终得到结果。</p>\n<p>需要注意的是，由于整个代码都使用函数进行计算，而函数工作区和普通工作区是不互通的，因此需要进行参数的传递。主要需要解决的是由arrayfun()函数传递参数的问题。</p>\n<p>整合函数如下：</p>\n<details>\n<summary>遗传算法识别响应函数</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%遗传算法识别响应函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%遗传算法参数设置</span></span><br><span class=\"line\"><span class=\"comment\">% Parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">1000</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">1000</span>;</span><br><span class=\"line\">fitness_threshold = <span class=\"number\">0.01</span>;<span class=\"comment\">%循环终止条件</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">365</span></span><br><span class=\"line\">c = Y(k);</span><br><span class=\"line\">d = X(k);</span><br><span class=\"line\"><span class=\"comment\">% Run Genetic Algorithm</span></span><br><span class=\"line\">[best_individual,final_population] = genetic_algorithm(pop_size, gene_length, mutation_rate, generations,c,d,fitness_threshold);</span><br><span class=\"line\"><span class=\"built_in\">ans</span>(<span class=\"number\">1</span>,k) = bin_dec(best_individual);</span><br><span class=\"line\"><span class=\"comment\">%disp(ans(1,k));</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%初始种群</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">population</span> = <span class=\"title\">initialize_population</span><span class=\"params\">(pop_size, gene_length)</span></span></span><br><span class=\"line\">    population = randi([<span class=\"number\">0</span>, <span class=\"number\">1</span>], pop_size, gene_length);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%适应度计算</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(decimal,c,d)</span> </span></span><br><span class=\"line\">    fit = <span class=\"built_in\">abs</span>(c-decimal*d);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%选择</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population_decimal, fitnesses,population)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = <span class=\"number\">1</span> - fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population_decimal), <span class=\"built_in\">length</span>(population_decimal), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices,:);</span><br><span class=\"line\">    <span class=\"comment\">%disp(population);</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%交叉</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[offspring1, offspring2]</span> = <span class=\"title\">crossover</span><span class=\"params\">(parent1, parent2)</span></span></span><br><span class=\"line\">    point = randi([<span class=\"number\">1</span>, <span class=\"built_in\">length</span>(parent1) - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    offspring1 = [parent1(<span class=\"number\">1</span>:point), parent2(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\">    offspring2 = [parent2(<span class=\"number\">1</span>:point), parent1(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%变异</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutated_individual</span> = <span class=\"title\">mutate</span><span class=\"params\">(individual, mutation_rate)</span></span></span><br><span class=\"line\">    mutation_mask = <span class=\"built_in\">rand</span>(<span class=\"built_in\">size</span>(individual)) &lt; mutation_rate;</span><br><span class=\"line\">    mutated_individual = xor(individual, mutation_mask);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%生成下一代</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new_pop</span> = <span class=\"title\">new_generation</span><span class=\"params\">(population, mutation_rate)</span></span></span><br><span class=\"line\">    new_pop = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">size</span>(population));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">2</span>:<span class=\"built_in\">length</span>(population)</span><br><span class=\"line\">        parent1 = population(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        parent2 = population(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,:);</span><br><span class=\"line\">        [offspring1, offspring2] = crossover(parent1, parent2);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>, :) = mutate(offspring1, mutation_rate);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :) = mutate(offspring2, mutation_rate);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%二进制转化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decimal</span> = <span class=\"title\">bin_dec</span><span class=\"params\">(population_row)</span></span></span><br><span class=\"line\">    <span class=\"comment\">% Assuming population_row is a row vector</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">length</span>(population_row) &lt; <span class=\"number\">8</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;Population vector must be at least 8 bits long.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    int_part = population_row(<span class=\"number\">1</span>:<span class=\"number\">5</span>); <span class=\"comment\">% First 5 bits for integer part</span></span><br><span class=\"line\">    frac_part = population_row(<span class=\"number\">6</span>:<span class=\"number\">8</span>); <span class=\"comment\">% Next 3 bits for fractional part</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the integer part</span></span><br><span class=\"line\">    decimal_int = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(int_part)</span><br><span class=\"line\">        decimal_int = decimal_int + int_part(<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(<span class=\"built_in\">length</span>(int_part) - <span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the fractional part</span></span><br><span class=\"line\">    decimal_frac = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(frac_part)</span><br><span class=\"line\">        decimal_frac = decimal_frac + frac_part(<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(-<span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Combine integer and fractional parts</span></span><br><span class=\"line\">    decimal = decimal_int + decimal_frac;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[best_individual,final_population]</span> = <span class=\"title\">genetic_algorithm</span><span class=\"params\">(pop_size, gene_length, mutation_rate, generations,c,d,fitness_threshold)</span></span></span><br><span class=\"line\">    population = initialize_population(pop_size, gene_length);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> gen = <span class=\"number\">1</span>:generations</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:pop_size</span><br><span class=\"line\">            population_decimal(<span class=\"built_in\">i</span>) = bin_dec(population(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fitnesses = arrayfun(@(individuals) fitness(individuals,c,d), population_decimal);</span><br><span class=\"line\">        max_fitness = <span class=\"built_in\">max</span>(fitnesses);</span><br><span class=\"line\">        <span class=\"comment\">%</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> max_fitness &lt; fitness_threshold</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">%&#125;</span></span><br><span class=\"line\">        population = selection(population_decimal, fitnesses, population);</span><br><span class=\"line\">        population = new_generation(population, mutation_rate);</span><br><span class=\"line\">        <span class=\"comment\">%fprintf(&#x27;Generation %d: Max Fitness = %d\\n&#x27;, gen, min(fitnesses));</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    final_population = population;</span><br><span class=\"line\">    <span class=\"comment\">%</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(final_population)</span><br><span class=\"line\">        population_decimal(<span class=\"built_in\">i</span>) = bin_dec(final_population(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    fitnesses = arrayfun(@(individuals) fitness(individuals,c,d), population_decimal);</span><br><span class=\"line\">    [~, max_fitness_index] = <span class=\"built_in\">min</span>(fitnesses);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Get the individual with the highest fitness</span></span><br><span class=\"line\">    best_individual = final_population(max_fitness_index, :);</span><br><span class=\"line\">    <span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"模型检验\"><a class=\"markdownIt-Anchor\" href=\"#模型检验\"></a> 模型检验</h3>\n<p>选取2010-2014年间任一场洪水，检验所得数据精确性。经分析，决定选取2013-9-22——2013-9-29为检验期。由上述模型得到的参数进行检验，得到下图结果。</p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>梁庚辰,J.E.Nash.大流域汇流演算的线性扰动模型[J].水力发电学报,1991,(02):14-28. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>《工程水文学》,2005,叶守则,詹道江. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","tags":["课设"]},{"title":"水电站课设(二)","url":"/2024/06/24/%E6%B0%B4%E7%94%B5%E7%AB%99%E8%AF%BE%E8%AE%BE-%E4%BA%8C/","content":"<p>2024.6.23 好久不见。</p>\n<span id=\"more\"></span>\n<p>第六学期的考试正式结束，意味着小学期的课设正式开始。水电站课程设计的任务在十天前已经下发，现在来做一个总结。</p>\n<h2 id=\"使用数据\"><a class=\"markdownIt-Anchor\" href=\"#使用数据\"></a> 使用数据</h2>\n<p>计算期初水位：173.45\n优化调度最小下泄流量：4690\n比较年份：1949</p>\n<h2 id=\"新任务\"><a class=\"markdownIt-Anchor\" href=\"#新任务\"></a> 新任务</h2>\n<p>提取各时段的运行规则。根据水库优化调度模型求解结果，提取各时段的调度规则。</p>\n<h2 id=\"问题分析\"><a class=\"markdownIt-Anchor\" href=\"#问题分析\"></a> 问题分析</h2>\n<p>-- 使用的数据是水库优化调度模型所得到的求解结果\n-- 目前需要首先重新修正优化调度模型，修正结果，增加数据结果，形成数据总表</p>\n<h3 id=\"代码改进\"><a class=\"markdownIt-Anchor\" href=\"#代码改进\"></a> 代码改进</h3>\n<p>在阅读文献的时候没有发现有设置汛期水位完全不变的情况，故现在对结课设计进行改变，取消汛期水位限制。另外需要将所有约束条件放入if内，修正递推函数。</p>\n<p>目前决定重新编制优化调度代码，首先列出约束条件、初始值、递推函数，预计明天完善完成。代码如下：</p>\n<details>\n<summary>代码一</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码（第二版）</span></span><br><span class=\"line\"><span class=\"comment\">%确定初始值及数据结构</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>) = <span class=\"number\">377.45</span>;<span class=\"comment\">%计算初始库容</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>) = <span class=\"number\">175</span>;<span class=\"comment\">%计算初始水位</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\"><span class=\"comment\">%设决策变量为下泄流量Qfd(t,1),可能出现弃水Qqs(t,1)</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">H(t) = head(Qxx,hsy);<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t) = Yuxcl(H(t));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t) = Xiaxnl(hsy);<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = input(<span class=\"string\">&quot;最小生态流量为&quot;</span>);<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"><span class=\"comment\">%水量平衡约束</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>) = V(t)+(Qrk(t)-Qfd(t)-Qqs(t))*T(t);</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%库水位约束</span></span><br><span class=\"line\">Z(t) &gt;= <span class=\"number\">145</span>;</span><br><span class=\"line\">Z(t) &lt;= <span class=\"number\">185</span>;</span><br><span class=\"line\"><span class=\"comment\">%初末库水位约束</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数</span></span><br><span class=\"line\">P(t) = k*Qfd(t)*H(t);</span><br><span class=\"line\"><span class=\"keyword\">if</span> P(t) &gt; Pb</span><br><span class=\"line\">    P(t) = P(t);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    P(t) = P(t) + b*(P(t)-Pb);<span class=\"comment\">%b为惩罚系数</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%递推函数</span></span><br><span class=\"line\">SumP(t) = <span class=\"built_in\">max</span>(P(t)+SumP(t+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"今日任务\"><a class=\"markdownIt-Anchor\" href=\"#今日任务\"></a> 今日任务</h2>\n<p>处理状态和决策离散化与时段平均出力的计算方法和具体代码。</p>\n<h3 id=\"进度\"><a class=\"markdownIt-Anchor\" href=\"#进度\"></a> 进度</h3>\n<p>基本完成代码编制，但是数据意义还需要思考，另需要正确获取最优解的数值。</p>\n<h3 id=\"新知识点\"><a class=\"markdownIt-Anchor\" href=\"#新知识点\"></a> 新知识点</h3>\n<p>max函数意为返回数组的最大值。</p>\n<h2 id=\"明日任务\"><a class=\"markdownIt-Anchor\" href=\"#明日任务\"></a> 明日任务</h2>\n<p>完成动态规划代码修改</p>\n<hr />\n<h2 id=\"进度-2\"><a class=\"markdownIt-Anchor\" href=\"#进度-2\"></a> 进度</h2>\n<p>昨晚进行到需要在已得到数据中提取需要的最优解的一组数据，但收工后思考之后发现，如果按照真正计算出来的所有结果来选择最优解，就失去了所谓动态规划面向时段的优势和意义，即无视了动态规划的性质——最优解的每个局部解也都是最优的。</p>\n<p>故现在开始思考，为什么课本上和课堂上老师都在强调逆推过程而不是更加符合时间顺序的顺推过程？目前我认为，逆推时后一时段的水位和面临时段的来流可以看作八个约束条件之一，每一个时段的计算都是已知结果通过下泄流量来确定上一时段的库容和水位，依此找到确定结果的放水过程的最优解。</p>\n<h3 id=\"结论任务\"><a class=\"markdownIt-Anchor\" href=\"#结论任务\"></a> 结论&amp;任务</h3>\n<p>上述思想可行且所得到的结果效果很好，和结果设计版本相比有较大的完善。在结课作业中尚有一项未能完成，即惩罚因子的大小和保证率的关系。接下来寻找一下二者的函数关系。</p>\n<h4 id=\"结论\"><a class=\"markdownIt-Anchor\" href=\"#结论\"></a> 结论</h4>\n<p>没有找到关系☹️</p>\n<p>现附所有动态规划代码如下：</p>\n<details>\n<summary>代码二</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码（第二版）</span></span><br><span class=\"line\"><span class=\"comment\">%确定初始值及数据结构</span></span><br><span class=\"line\">n = <span class=\"number\">36</span>;<span class=\"comment\">%计算时段数</span></span><br><span class=\"line\">Vmin = <span class=\"number\">171.5</span>;</span><br><span class=\"line\">Vmax = <span class=\"number\">505</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">V(<span class=\"number\">36</span>,:) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">V(<span class=\"number\">1</span>,:) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,:) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,:) = <span class=\"number\">175</span>;<span class=\"comment\">%计算初始水位</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">P = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">SumP = <span class=\"number\">0</span>;</span><br><span class=\"line\">T = <span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%各时段时间间隔</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%设决策变量为下泄流量Qfd(t,1),可能出现弃水Qqs(t,1)</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%单时段离散化与平均出力的计算方法</span></span><br><span class=\"line\"><span class=\"comment\">%将一时段的状态V(t)离散为M个数值</span></span><br><span class=\"line\"><span class=\"comment\">%又水库水位限制为(145,185)</span></span><br><span class=\"line\"><span class=\"comment\">%故首先选择将水库库容离散为40个数值（即一米一个库容）</span></span><br><span class=\"line\"><span class=\"comment\">%又首先需要确定Qfd的离散值</span></span><br><span class=\"line\"><span class=\"comment\">%故制作Qfd初始值表格</span></span><br><span class=\"line\"><span class=\"comment\">%表格范围设置为（生态流量，时段最大下泄流量）</span></span><br><span class=\"line\"><span class=\"comment\">%此次计算设Qfd为决策变量</span></span><br><span class=\"line\">b = <span class=\"built_in\">linspace</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"comment\">%b = 0.8;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">flag = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">35</span></span><br><span class=\"line\"></span><br><span class=\"line\">t = n-<span class=\"built_in\">j</span>;</span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> t == <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">i</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Qxx(t,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t,<span class=\"number\">1</span>) - (V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - V(t,<span class=\"number\">1</span>))/T);</span><br><span class=\"line\">     <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">     Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">     <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">     [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t,<span class=\"built_in\">i</span>)] = head(Qxx(t,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">     <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">     P(t+<span class=\"number\">1</span>,:) = kcl(t,<span class=\"built_in\">i</span>)*Qxx(t,<span class=\"built_in\">i</span>)*H(t,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">     Pmax(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">     h(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">     <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">    xxnl(t) = Xiaxnl(Z(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前上游水位,计算当前时段水库最大下泄能力</span></span><br><span class=\"line\">    Qfd = <span class=\"built_in\">linspace</span>(Qst,xxnl(t),<span class=\"number\">1000</span>);<span class=\"comment\">%Qfd初始数组，共1000个数据点</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            V(t,<span class=\"built_in\">i</span>) = V(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) - (Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"built_in\">i</span>))*T;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> V(t,<span class=\"built_in\">i</span>) &lt; Vmin</span><br><span class=\"line\">                V(t,<span class=\"built_in\">i</span>) = Vmin;</span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - (V(t+<span class=\"number\">1</span>) - V(t))/T);</span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">            Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">            <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">            [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)] = head(Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &lt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;<span class=\"comment\">%继续i循环</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">            P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">            <span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">            yxcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Yuxcl(H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;<span class=\"comment\">%跳出i循环</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> V(t,<span class=\"built_in\">i</span>) &gt; Vmax</span><br><span class=\"line\">                Qqs(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = (V(t,<span class=\"built_in\">i</span>)-Vmax)/T;</span><br><span class=\"line\">                V(t,<span class=\"built_in\">i</span>) = Vmax;</span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - (V(t,<span class=\"built_in\">i</span>) - V(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>))/T);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Qfd(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">           </span><br><span class=\"line\">            <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">            Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">            <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">            [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)] = head(Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">            <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &lt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">            <span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">            yxcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Yuxcl(H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">%%指标函数</span></span><br><span class=\"line\">            <span class=\"comment\">%</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> P(t,<span class=\"built_in\">i</span>) &gt; yxcl(t)</span><br><span class=\"line\">                P(t,<span class=\"built_in\">i</span>) = yxcl(t);</span><br><span class=\"line\">                <span class=\"comment\">%flag(t) = 1;</span></span><br><span class=\"line\">            <span class=\"comment\">%&#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &gt; Pb &amp;&amp; P(t,<span class=\"built_in\">i</span>) &lt; yxcl(t)</span><br><span class=\"line\">                P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">                <span class=\"comment\">%flag(t) = 1;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) + b(<span class=\"number\">1</span>,k)*(P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)-Pb);<span class=\"comment\">%b为惩罚系数</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> f = <span class=\"number\">1</span>:<span class=\"number\">999</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> P(t+<span class=\"number\">1</span>,f) &gt; P(t+<span class=\"number\">1</span>,f+<span class=\"number\">1</span>)</span><br><span class=\"line\">        Ppro(t+<span class=\"number\">1</span>,f) = P(t+<span class=\"number\">1</span>,f);   </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">[Pmax(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>),l] = <span class=\"built_in\">max</span>(Ppro(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">200</span>));</span><br><span class=\"line\">V(t,:) = V(t,l);</span><br><span class=\"line\">Z(t,:) = Z(t,l);</span><br><span class=\"line\">Q(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qxx(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\">qs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qqs(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\">h(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = H(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Pmax(m,<span class=\"number\">1</span>) &gt; Pb</span><br><span class=\"line\">    flag = flag+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">per(k,<span class=\"number\">1</span>) = flag/<span class=\"number\">36</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<p>做出图像如下：</p>\n<p><img src=\"/images/youhuadiaodu.png\" alt=\"优化调度图像\" />\n<img src=\"/images/yhliuliang.png\" alt=\"优化调度出库入库流量图像\" /></p>\n<h2 id=\"明日任务-2\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-2\"></a> 明日任务</h2>\n<p>读文献，基本得出函数关系式，基本确定编程思路，得出所有可以用于训练模型的数据。</p>\n<hr />\n<h2 id=\"读文献有感\"><a class=\"markdownIt-Anchor\" href=\"#读文献有感\"></a> 读文献有感</h2>\n<ul>\n<li>\n<p>具体阅读了有关NSGA-Ⅱ(Non-dominated Sorting Genetic Algorithm)的优化思路和实现方法，如果在课设报告提交前尚有时间，可以考虑把优化调度的方法从动态规划改变为NSGA。\n[1] A Fast Non-dominated Sorting Genetic Algorithm For Multi-objective Optimization:NSGA-Ⅱ</p>\n</li>\n<li>\n<p>粒子群优化算法（PSO）由鸟群寻找食物得到灵感，通过计算寻找“最好的”粒子，即“离食物最近的”粒子，因此可用于在已有优化调度数据的前提下拟合提取调度函数。</p>\n</li>\n</ul>\n<p>有一关键评价函数，优化适应度函数。用于评价每一个粒子的“好坏”，从而决定优化方向。</p>\n<h2 id=\"调度函数表达式\"><a class=\"markdownIt-Anchor\" href=\"#调度函数表达式\"></a> 调度函数表达式</h2>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>Q</mi><mi>t</mi></msub><mo>=</mo><msub><mi>α</mi><mi>t</mi></msub><mo>⋅</mo><msub><mi>I</mi><mi>t</mi></msub><mo>+</mo><msub><mi>β</mi><mi>t</mi></msub><msub><mo>⋅</mo><mi>V</mi></msub><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">Q_{t} = \\alpha_{t} \\cdot I_{t} + \\beta_{t} \\cdot _V{t} \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.59445em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">⋅</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">V</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span></span></span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>Q</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">Q_{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为t时段下泄流量，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>I</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">I_{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为t时段入流，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">V_{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为t时段初库容.</p>\n<h3 id=\"matlab语法学习\"><a class=\"markdownIt-Anchor\" href=\"#matlab语法学习\"></a> matlab语法学习</h3>\n<p>1.函数句柄：在matlab中，函数可以像变量一样进行传递和操作。函数句柄就是指向函数的指针，可以调用函数或者将函数作为参数传递给其他函数。</p>\n<p>2.@符号：在matlab中，@符号用于创建函数句柄。</p>\n<h3 id=\"pso算法具体实现代码\"><a class=\"markdownIt-Anchor\" href=\"#pso算法具体实现代码\"></a> PSO算法具体实现代码</h3>\n<p><a href=\"http://t.csdnimg.cn/Xpizk\">http://t.csdnimg.cn/Xpizk</a></p>\n<details>\n<summary>PSO算法</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%pop——种群数量</span></span><br><span class=\"line\"><span class=\"comment\">%dim——问题维度</span></span><br><span class=\"line\"><span class=\"comment\">%ub——变量上界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%lb——变量下界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%fobj——适应度函数（指针）</span></span><br><span class=\"line\"><span class=\"comment\">%MaxIter——最大迭代次数</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Pos——x的最佳值</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Score——最优适应度</span></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">clc;</span><br><span class=\"line\">clear all;</span><br><span class=\"line\">close all;</span><br><span class=\"line\">pop=<span class=\"number\">50</span>;</span><br><span class=\"line\">dim=<span class=\"number\">2</span>;</span><br><span class=\"line\">ub=[<span class=\"number\">10</span>,<span class=\"number\">10</span>];</span><br><span class=\"line\">lb=[<span class=\"number\">-10</span>,<span class=\"number\">-10</span>];</span><br><span class=\"line\">vmax=[<span class=\"number\">2</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">vmin=[<span class=\"number\">-2</span>,<span class=\"number\">-2</span>];</span><br><span class=\"line\">maxIter=<span class=\"number\">100</span>;</span><br><span class=\"line\">fobj=@(X)fun(X);</span><br><span class=\"line\">[Best_Pos,Best_fitness,IterCurve]=pso(pop,dim,ub,lb,fobj,vmax,vmin,maxIter);</span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(IterCurve,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;linewidth&#x27;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">grid on;</span><br><span class=\"line\"><span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;求解得到的x1，x2是:&#x27;</span>,num2str(Best_Pos(<span class=\"number\">1</span>)),<span class=\"string\">&#x27; &#x27;</span>,num2str(Best_Pos(<span class=\"number\">2</span>))]);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;最优解对应的函数:&#x27;</span>,num2str(Best_fitness)]);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%确定计算初始值 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">initialization</span><span class=\"params\">(pop,ub,lb,dim)</span>%得到在范围内的初始数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=(ub(<span class=\"built_in\">j</span>)-lb(<span class=\"built_in\">j</span>))*<span class=\"built_in\">rand</span>()+lb(<span class=\"built_in\">j</span>);<span class=\"comment\">%在限定的  </span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fitness</span>=<span class=\"title\">fun</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    fitness=sum(x.^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">BoundaryCheck</span><span class=\"params\">(X,ub,lb,dim)</span>%检查原始数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&gt;ub(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=ub(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&lt;lb(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=lb(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%PSO计算</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[Best_Pos,Best_fitness,IterCurve]</span>=<span class=\"title\">pso</span><span class=\"params\">(pop,dim,ub,lb,fobj,vmax,vmin,maxIter)</span></span></span><br><span class=\"line\">c1=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">c2=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">V=initialization(pop,vmax,vmin,dim);</span><br><span class=\"line\">X=initialization(pop,ub,lb,dim);</span><br><span class=\"line\">fitness=<span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,pop);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">    fitness(<span class=\"built_in\">i</span>)=fobj(X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">pBest=X;</span><br><span class=\"line\">pBestFitness=fitness;</span><br><span class=\"line\">[~,index]=<span class=\"built_in\">min</span>(fitness);</span><br><span class=\"line\">gBestFitness=fitness(index);</span><br><span class=\"line\">gBest=X(index,:);</span><br><span class=\"line\">Xnew=X;</span><br><span class=\"line\">fitnessNew=fitness;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t=<span class=\"number\">1</span>:maxIter</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        r1=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        r2=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=V(<span class=\"built_in\">i</span>,:)+c1.*r1.*(pBest(<span class=\"built_in\">i</span>,:)-X(<span class=\"built_in\">i</span>,:))+c2.*r2.*(gBest-X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=BoundaryCheck(V(<span class=\"built_in\">i</span>,:),vmax,vmin,dim);</span><br><span class=\"line\">        Xnew(<span class=\"built_in\">i</span>,:)=X(<span class=\"built_in\">i</span>,:)+V(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        fitnessNew(<span class=\"built_in\">i</span>)=fobj(Xnew(<span class=\"number\">1</span>,:));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;pBestFitness(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            pBest(<span class=\"built_in\">i</span>,:)=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">            pBestFitness(<span class=\"built_in\">i</span>)=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;gBestFitness</span><br><span class=\"line\">            gBestFitness=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            gBest=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    X=Xnew;</span><br><span class=\"line\">    fitness=fitnessNew;</span><br><span class=\"line\">    Best_Pos=gBest;</span><br><span class=\"line\">    Best_fitness=gBestFitness;</span><br><span class=\"line\">    IterCurve(t)=gBestFitness;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h3 id=\"需要解决的问题\"><a class=\"markdownIt-Anchor\" href=\"#需要解决的问题\"></a> 需要解决的问题</h3>\n<p>根据上述代码及文献，已经基本搞清楚PSO算法的编写过程和思路。现在需要解决的关键问题是如何设置变量内容、变量的数据结构和变量的上下界，即如何利用优化调度已经得到的数据通过PSO得到想要的参数拟合结果。</p>\n<p>根据所找文献，他将参数按照月份进行了划分，将非汛期的每一月都进行了参数拟合计算。所以提出以下思路：</p>\n<ul>\n<li>\n<p>将每一月的入库流量和下泄流量作为输入参数，从1941-1990共50年，即初始种群数为50，先假设迭代次数为200。</p>\n</li>\n<li>\n<p>按照文献已经得到的参数，假设需要得到的三个参数为“粒子的最优坐标”，即三维PSO问题。</p>\n</li>\n</ul>\n<h2 id=\"明日任务-3\"><a class=\"markdownIt-Anchor\" href=\"#明日任务-3\"></a> 明日任务</h2>\n<p>完成变量数据结构设计，初步完成PSO代码。</p>\n<hr />\n<h3 id=\"matlab语法学习-2\"><a class=\"markdownIt-Anchor\" href=\"#matlab语法学习-2\"></a> matlab语法学习</h3>\n<ul>\n<li>num2str函数：将数字转换为字符数组</li>\n</ul>\n<h2 id=\"训练数据准备\"><a class=\"markdownIt-Anchor\" href=\"#训练数据准备\"></a> 训练数据准备</h2>\n<p>按照列出的关系表达式，需要的初始数据有：当前时段的初始库容、时段入流，以及由优化调度得到的下泄流量。</p>\n<p>依据文献所给思路，编制50年各旬下泄流量、初始库容、时段入流的数据表，即36个50×3列数据表。</p>\n<h2 id=\"训练数据使用\"><a class=\"markdownIt-Anchor\" href=\"#训练数据使用\"></a> 训练数据使用</h2>\n<p>每一旬得到的三组数据用于拟合数据参数，相当于二元一次线性非齐次方程组求“最接近的解。对于PSO，初始搜索点的位置及速度一般是在允许的范围内随机产生的，而对于函数提取，初始点的数据即为优化调度已得到的数据。</p>\n<p>类比可以推测，可以将时段入流和初始库容作为”初始搜索点“，即初始位置，将下泄流量作为速度。</p>\n<p>接上述观点，既然PSO不需要初始值，是不是优化调度获得的数据其实并不能直接用于参数估计，而是作为变量范围作为参考，迭代次数增加其实是在更加逼近范围内的最优值，而最优值也是由优化调度过程给出的。所以PSO是作为反映优化调度规律，便于调度计算而使用的算法。</p>\n<h2 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"#结果\"></a> 结果</h2>\n<p>现得到36组参数数据，还需要带入具体流量数据进行测试。</p>\n<hr />\n<h2 id=\"成果得出\"><a class=\"markdownIt-Anchor\" href=\"#成果得出\"></a> 成果得出</h2>\n<p>最后得到由调度函数调度的水位变化曲线和下泄流量曲线。</p>\n<p>修改的PSO算法代码如下：</p>\n<details>\n<summary>PSO算法（修改版）</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%pop——种群数量</span></span><br><span class=\"line\"><span class=\"comment\">%dim——问题维度</span></span><br><span class=\"line\"><span class=\"comment\">%ub——变量上界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%lb——变量下界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%fobj——适应度函数（指针）</span></span><br><span class=\"line\"><span class=\"comment\">%MaxIter——最大迭代次数</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Pos——x的最佳值</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Score——最优适应度</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\">a = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">b = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>);</span><br><span class=\"line\">c = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-2</span>);</span><br><span class=\"line\">pop=<span class=\"number\">50</span>;</span><br><span class=\"line\">dim=<span class=\"number\">2</span>;</span><br><span class=\"line\">vmax=[<span class=\"built_in\">max</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>)),<span class=\"built_in\">max</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>))];</span><br><span class=\"line\">vmin=[<span class=\"built_in\">min</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>)),<span class=\"built_in\">min</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>))];</span><br><span class=\"line\">ub=[<span class=\"number\">2</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">lb=[<span class=\"number\">0</span>,<span class=\"number\">0</span>];</span><br><span class=\"line\">maxIter=<span class=\"number\">2000</span>;</span><br><span class=\"line\">fobj=@(X,a,b,c)fun(X,a,b,c);</span><br><span class=\"line\">[Best_Pos,Best_fitness,IterCurve]=pso(pop,dim,ub,lb,fobj,vmax,vmin,maxIter,a,b,c);</span><br><span class=\"line\">canshu(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>) = Best_Pos(<span class=\"number\">1</span>);</span><br><span class=\"line\">canshu(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>*<span class=\"built_in\">i</span>) = Best_Pos(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">figure</span></span><br><span class=\"line\"><span class=\"comment\">plot(IterCurve,&#x27;r&#x27;,&#x27;linewidth&#x27;,2);</span></span><br><span class=\"line\"><span class=\"comment\">grid on;</span></span><br><span class=\"line\"><span class=\"comment\">disp([&#x27;求解得到的x1，x2是:&#x27;,num2str(Best_Pos(1)),&#x27; &#x27;,num2str(Best_Pos(2))]);</span></span><br><span class=\"line\"><span class=\"comment\">disp([&#x27;最优解对应的函数:&#x27;,num2str(Best_fitness)]);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">72</span>    </span><br><span class=\"line\">    ave(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">mean</span>(canshu(:,<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    <span class=\"comment\">%ave(2*i,2) = mean(canshu(:,2*i));</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">%初始化粒子坐标和粒子速度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">initialization</span><span class=\"params\">(pop,ub,lb,dim)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=(ub(<span class=\"built_in\">j</span>)-lb(<span class=\"built_in\">j</span>))*<span class=\"built_in\">rand</span>()+lb(<span class=\"built_in\">j</span>);<span class=\"comment\">%在限定的  </span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fitness</span>=<span class=\"title\">fun</span><span class=\"params\">(x,a,b,c)</span></span></span><br><span class=\"line\">    fitness=sum(<span class=\"built_in\">abs</span>(c-x.*[a;b*<span class=\"number\">100000000</span>/(<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">10</span>)]*[<span class=\"number\">1</span>;<span class=\"number\">1</span>]));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%检查初始数据点坐标位置是否在允许范围内</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">BoundaryCheck</span><span class=\"params\">(X,ub,lb,dim)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&gt;ub(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=ub(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&lt;lb(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=lb(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[Best_Pos,Best_fitness,IterCurve]</span>=<span class=\"title\">pso</span><span class=\"params\">(pop,dim,ub,lb,fobj,vmax,vmin,maxIter,a,b,c)</span></span></span><br><span class=\"line\">c1=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">c2=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">V=initialization(pop,vmax,vmin,dim);</span><br><span class=\"line\">X=initialization(pop,ub,lb,dim);</span><br><span class=\"line\">fitness=<span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,pop);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">    fitness(<span class=\"built_in\">i</span>)=fobj(X(<span class=\"built_in\">i</span>,:),a,b,c);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">pBest=X;</span><br><span class=\"line\">pBestFitness=fitness;</span><br><span class=\"line\">[~,index]=<span class=\"built_in\">min</span>(fitness);</span><br><span class=\"line\">gBestFitness=fitness(index);</span><br><span class=\"line\">gBest=X(index,:);</span><br><span class=\"line\">Xnew=X;</span><br><span class=\"line\">fitnessNew=fitness;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t=<span class=\"number\">1</span>:maxIter</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        r1=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        r2=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=V(<span class=\"built_in\">i</span>,:)+c1.*r1.*(pBest(<span class=\"built_in\">i</span>,:)-X(<span class=\"built_in\">i</span>,:))+c2.*r2.*(gBest-X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=BoundaryCheck(V(<span class=\"built_in\">i</span>,:),vmax,vmin,dim);</span><br><span class=\"line\">        Xnew(<span class=\"built_in\">i</span>,:)=X(<span class=\"built_in\">i</span>,:)+V(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        fitnessNew(<span class=\"built_in\">i</span>)=fobj(Xnew(<span class=\"number\">1</span>,:),a,b,c);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;pBestFitness(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            pBest(<span class=\"built_in\">i</span>,:)=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">            pBestFitness(<span class=\"built_in\">i</span>)=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;gBestFitness</span><br><span class=\"line\">            gBestFitness=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            gBest=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    X=Xnew;</span><br><span class=\"line\">    fitness=fitnessNew;</span><br><span class=\"line\">    Best_Pos=gBest;</span><br><span class=\"line\">    Best_fitness=gBestFitness;</span><br><span class=\"line\">    IterCurve(t)=gBestFitness;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<p>根据所提取的调度函数进行时段计算的代码如下：</p>\n<details>\n<summary>调度函数</summary>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%利用调度函数调度(1949)</span></span><br><span class=\"line\">flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">T = <span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">10</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">Vmax = <span class=\"number\">505</span>;</span><br><span class=\"line\">Zmax = <span class=\"number\">185</span>;</span><br><span class=\"line\">Vhs = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Vhs(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">Zhs = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Zhs(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">173.45</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\">Qhs(t,<span class=\"number\">1</span>) = ave(<span class=\"number\">2</span>*t<span class=\"number\">-1</span>,<span class=\"number\">1</span>)*Qrk(t,<span class=\"number\">1</span>)+ave(<span class=\"number\">2</span>*t,<span class=\"number\">1</span>)*Vhs(t,<span class=\"number\">1</span>)/T;</span><br><span class=\"line\">Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Vhs(t,<span class=\"number\">1</span>) + (Qrk(t,<span class=\"number\">1</span>)-Qhs(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"keyword\">if</span> Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt; Vmax</span><br><span class=\"line\">    Qhsqs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = (Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Vmax)/T;</span><br><span class=\"line\">    Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Vmax;</span><br><span class=\"line\">    Zhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Zmax;</span><br><span class=\"line\">    Qhs(t,<span class=\"number\">1</span>) = Qrk(t,<span class=\"number\">1</span>)-(Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Vhs(t,<span class=\"number\">1</span>))/T;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Zhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Kurqx(Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[Hhs(t,<span class=\"number\">1</span>),kclhs(t,<span class=\"number\">1</span>)] = head(Qhs(t,<span class=\"number\">1</span>),Zhs(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">Phs(t,<span class=\"number\">1</span>) = kclhs(t,<span class=\"number\">1</span>)*Qhs(t,<span class=\"number\">1</span>)*<span class=\"built_in\">abs</span>(Hhs(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Phs(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &gt; <span class=\"number\">499</span></span><br><span class=\"line\">        flag = flag + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">per = flag/<span class=\"number\">36</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">37</span>,Zhs(:,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">0</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">190</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,Qhs(:,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;下泄流量/m³&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1949年来流调度函数水位变化曲线&quot;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<p><img src=\"/images/diaoduhanshushuiweibianhuatu.png\" alt=\"调度函数图像\" /></p>\n<h2 id=\"结果比较\"><a class=\"markdownIt-Anchor\" href=\"#结果比较\"></a> 结果比较</h2>\n<p>根据得出的数据对常规调度、优化调度、调度函数调度进行比较。</p>\n<p>选择比较的参数：平均水位、发电水头、下泄流量、弃水量、保证率和总发电量。</p>\n<p>经比较可以发现，三种方法的平均水位，平均下泄流量和发电水头差别不大，调度函数调度弃水较多，而常规调度后期水位很高，但前期为了符合调度图调度发电量较低，其中优化调度的结果较为实用。</p>\n<p>具体比较数据见下表。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>平均出力</th>\n<th>保证率</th>\n<th>平均水头</th>\n<th>平均水位</th>\n<th>平均下泄流量</th>\n<th>弃水量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>常规调度</td>\n<td>431.59</td>\n<td>55%</td>\n<td>91.69</td>\n<td>165.62</td>\n<td>17364.8</td>\n<td>0</td>\n</tr>\n<tr>\n<td>优化调度</td>\n<td>779.81</td>\n<td>95%</td>\n<td>55</td>\n<td>166</td>\n<td>17557.44</td>\n<td>0</td>\n</tr>\n<tr>\n<td>调度图</td>\n<td>445.4</td>\n<td>65%</td>\n<td>57</td>\n<td>168.77</td>\n<td>17441.272</td>\n<td>33039.45</td>\n</tr>\n</tbody>\n</table>\n","tags":["课设"]},{"title":"算法学习记录","url":"/2024/09/24/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","content":"<h2 id=\"两数之和\"><a class=\"markdownIt-Anchor\" href=\"#两数之和\"></a> 两数之和</h2>\n<p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</p>\n<p>你可以假设每种输入只会对应一个答案，并且你不能使用两次相同的元素。</p>\n<p>你可以按任意顺序返回答案。</p>\n<h3 id=\"思路一-暴力求解\"><a class=\"markdownIt-Anchor\" href=\"#思路一-暴力求解\"></a> 思路一、暴力求解</h3>\n<p>输入所给数组，将其遍历求和，判断其值是否等于目标值，若等于则输出两个数的数组下标。</p>\n<details>\n<summary>求解代码如下</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">twoSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> n = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; ++j)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(nums[i] + nums[j] == target)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> &#123;i , j&#125;;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &#123;&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"回文数\"><a class=\"markdownIt-Anchor\" href=\"#回文数\"></a> 回文数</h2>\n<p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。</p>\n<p>回文数\n是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>\n<p>例如，121 是回文，而 123 不是。</p>\n<h3 id=\"思路反转一半数字\"><a class=\"markdownIt-Anchor\" href=\"#思路反转一半数字\"></a> 思路：反转一半数字</h3>\n<p>既然数字为回文数，则可以将其反转一半来判断。</p>\n<p>首先考虑一些临界情况。一定不是回文数的有负数及个位数，故首先排除。</p>\n<p>再来考虑如何反转后半部分的数字。为得到后半数字，可以进行%10计算，在循环内重组后半数字的顺序。例如对于1221这个数字，先通过/10移除最后一个数字得到122，再求出1221%10得到1。122%10则可以得到倒数第二位数字。如果我们把倒数第一位数字*10再加上倒数第二位数字，则得到了反转后的数字，以此类推。</p>\n<p>关键在于如何知道我们已经反转了一半的数字。由于我们不断地将原始数字/10，然后给反转的数字*10，故当原始数字小于等于反转后的数字时，我们就已经处理了一半的数字了。</p>\n<details>\n<summary>回文数</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x &lt; <span class=\"number\">0</span> || (x/<span class=\"number\">10</span> == <span class=\"number\">0</span> &amp;&amp; x != <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> revertedNumber = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (x &gt; revertedNumber)&#123;</span><br><span class=\"line\">\t\t\trevertedNumber = revertedNumber * <span class=\"number\">10</span> + x%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\tx /= <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x == revertedNumber || x == revertedNumber/<span class=\"number\">10</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//若x有奇数个数字，则中间一位并不影响回文数的性质，去掉中间一位即可</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"多数元素\"><a class=\"markdownIt-Anchor\" href=\"#多数元素\"></a> 多数元素</h2>\n<p>给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。</p>\n<p>你可以假设数组是非空的，并且给定的数组总是存在多数元素。</p>\n<h3 id=\"思路摩尔投票法\"><a class=\"markdownIt-Anchor\" href=\"#思路摩尔投票法\"></a> 思路：摩尔投票法</h3>\n<p>核心理念为票数正负抵消。</p>\n<p>在本题中，假设数组长度为n，数组的众数为x。</p>\n<ul>\n<li>推论一：若记众数的票数为+1，非众数的票数为-1，则所有数字的和一定&gt;0。</li>\n<li>推论二：若数组前a个数票数和为0，则剩余（n-a）个数字的众数仍为x。</li>\n</ul>\n<p>根据以上推论，当发生票数和=0的时候，剩余数组的众数一定不变，因为：</p>\n<ul>\n<li>\n<p>若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> = x，则已经遍历过的数组中有一半是众数。</p>\n</li>\n<li>\n<p>若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> != x，则所有抵消过的数字中众数的个数最小是0个，最大是一半。</p>\n</li>\n</ul>\n<p>即按照以上推论，每次出现票数和为零都可以缩小搜索范围，直到遍历完成，最后一个假定的数字即为众数。</p>\n<details>\n<summary>多数元素</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">majorityElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x = <span class=\"number\">0</span>, votes = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (votes == <span class=\"number\">0</span>) x = num;<span class=\"comment\">//当票数和为零的时候假设当前数字为众数</span></span><br><span class=\"line\">            votes += num == x ? <span class=\"number\">1</span> : <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"区间和的个数\"><a class=\"markdownIt-Anchor\" href=\"#区间和的个数\"></a> 区间和的个数</h2>\n<p>给你一个整数数组 nums 以及两个整数 lower 和 upper 。求数组中，值位于范围 [lower, upper] （包含 lower 和 upper）之内的 区间和的个数 。</p>\n<p>区间和 S(i, j) 表示在 nums 中，位置从 i 到 j 的元素之和，包含 i 和 j (i ≤ j)。</p>\n<h3 id=\"思路归并排序\"><a class=\"markdownIt-Anchor\" href=\"#思路归并排序\"></a> 思路：归并排序</h3>\n<p>设前缀和数组为<em>Prenum</em> ，则等价于对所有下标 <em>(i,j)</em>，满足</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∈</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Prenum[j]-Prenum[i]\\in(lower,upper)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>我们先考虑两个<strong>升序排列</strong>的数组<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,试找出所有下标对 <em>(i,j)</em>,满足</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∈</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">n_1[j]-n_2[i]\\in(lower,upper)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>在已知两个数组为升序排列的情况下，是相对简单的。我们维护两个指针<em>l</em>,<em>r</em>。起初，他们都指向<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的起点。</p>\n<p>随后，我们首先考察<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的第一个元素。首先，不断将指针<em>l</em>向右移动，直到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>≥</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">n_2[l]-n_1[0]\\ge lower</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>为止，则此时<em>l</em>右侧的所有元素都满足<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>≥</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">n_2[i]-n_1[0]\\ge lower</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>；然后，向右移动<em>r</em>，直到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>r</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>≥</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">n_2[r]-n_1[0]\\ge upper</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>为止，此时<em>r</em>左侧的所有元素都满足<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>r</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mn>0</mn><mo stretchy=\"false\">]</mo><mo>≤</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">n_2[r]-n_1[0]\\leq upper</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>。故<em>l</em>,<em>r</em>区间内的所有元素都满足</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∈</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">n_1[j]-n_2[i]\\in(lower,upper)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>至此，由于数组是升序排列的，所以<em>l</em>,<em>r</em>都只需要向右移动，依此来遍历<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">n_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>中的所有元素，每次都统计下标 <em>(l,r)</em> 的大小，我们就得到了区间和的数量。</p>\n<p>因此最后需要考虑的就是得到两个升序数组，则使用归并排序对原数组处理得到两个升序数组用于计算。</p>\n<details>\n<summary>区间和的个数</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countRangeSumRecursive</span><span class=\"params\">(vector&lt;<span class=\"type\">long</span>&gt;&amp; sum, <span class=\"type\">int</span> lower, <span class=\"type\">int</span> upper, <span class=\"type\">int</span> left, <span class=\"type\">int</span> right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left == right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> mid = (left + right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> n1 = <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, left, mid);</span><br><span class=\"line\">            <span class=\"type\">int</span> n2 = <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, mid + <span class=\"number\">1</span>, right);</span><br><span class=\"line\">            <span class=\"type\">int</span> ret = n1 + n2;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 首先统计下标对的数量</span></span><br><span class=\"line\">            <span class=\"type\">int</span> i = left;</span><br><span class=\"line\">            <span class=\"type\">int</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> r = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt;= mid) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (l &lt;= right &amp;&amp; sum[l] - sum[i] &lt; lower) l++;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (r &lt;= right &amp;&amp; sum[r] - sum[i] &lt;= upper) r++;</span><br><span class=\"line\">                ret += (r - l);</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 随后合并两个排序数组</span></span><br><span class=\"line\">            <span class=\"function\">vector&lt;<span class=\"type\">long</span>&gt; <span class=\"title\">sorted</span><span class=\"params\">(right - left + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> p1 = left, p2 = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (p1 &lt;= mid || p2 &lt;= right) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (p1 &gt; mid) &#123;</span><br><span class=\"line\">                    sorted[p++] = sum[p2++];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p2 &gt; right) &#123;</span><br><span class=\"line\">                    sorted[p++] = sum[p1++];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sum[p1] &lt; sum[p2]) &#123;</span><br><span class=\"line\">                        sorted[p++] = sum[p1++];</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        sorted[p++] = sum[p2++];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; sorted.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">                sum[left + i] = sorted[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countRangeSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> lower, <span class=\"type\">int</span> upper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">long</span>&gt; sum&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span>&amp; v: nums) &#123;</span><br><span class=\"line\">            s += v;</span><br><span class=\"line\">            sum.<span class=\"built_in\">push_back</span>(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, <span class=\"number\">0</span>, sum.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"最大装水\"><a class=\"markdownIt-Anchor\" href=\"#最大装水\"></a> 最大装水</h2>\n<p>给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。</p>\n<p>找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>\n<p>返回容器可以储存的最大水量。</p>\n<p>说明：你不能倾斜容器。</p>\n<h3 id=\"思路双指针\"><a class=\"markdownIt-Anchor\" href=\"#思路双指针\"></a> 思路：双指针</h3>\n<p>水箱的面积大小由左右两侧最短板的长度决定，故可以得到以下计算公式：</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo>×</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">S = min(height[i],height[j]) \\times (j -i)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>设置两个指针分别指向水箱的两个端点，当指针对撞的时候结束计算。</p>\n<p>每一次移动指针向内收窄，都会导致底板长度-1，这时面积的变化会有两种可能：</p>\n<p>1、将指向较长板的指针向内收窄：由于底的长度一定会减小，而板的最小值的长度一定会减小或者不变，故得到的面积<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>≤</mo><msub><mi>S</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">S\\leq S_{min}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>2、将指向较短板的指针向内收窄：由于板的最小值只可能变大（下一个最短板的长度大于当前最短板）或不变（即当前最短板的长度等于下一组最短板的长度）。</p>\n<p>由此，得到解题算法：比较前后指针所指向的板长，每次将指向较短板的指针向内移动，保存最大面积值，直到指针相撞比较结束，返回最大面积。</p>\n<details>\n<summary>最大装水</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxArea</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = height.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>, res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; j) &#123;</span><br><span class=\"line\">            res = height[i] &lt; height[j] ? </span><br><span class=\"line\">                <span class=\"built_in\">max</span>(res, (j - i) * height[i++]): </span><br><span class=\"line\">                <span class=\"built_in\">max</span>(res, (j - i) * height[j--]); </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"数组中的第k大的元素\"><a class=\"markdownIt-Anchor\" href=\"#数组中的第k大的元素\"></a> 数组中的第k大的元素</h2>\n<p>给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。</p>\n<p>请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。</p>\n<p>你必须设计并实现时间复杂度为 O(n) 的算法解决此问题。</p>\n<h3 id=\"思路快速选择\"><a class=\"markdownIt-Anchor\" href=\"#思路快速选择\"></a> 思路：快速选择</h3>\n<p>设N为数组长度，根据快速排序原理，如果某次哨兵划分后，基准数的索引恰好为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">N-k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>,则意味着它就是第k大的数字，可以直接返回。</p>\n<p>对于包含大量重复数字的数组，每轮的哨兵划分都有可能划分为长度为1，和n-1两个部分，时间复杂度会退化至<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>有一种解决办法是使用<strong>三路划分</strong>，即每次都把数组划分为大于、小于、等于基准数的三部分。</p>\n<details>\n<summary>数组中第k大的元素</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">findKthLargest</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(nums, k);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">quickSelect</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 随机选择基准数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pivot = nums[<span class=\"built_in\">rand</span>() % nums.<span class=\"built_in\">size</span>()];</span><br><span class=\"line\">        <span class=\"comment\">// 将大于、小于、等于 pivot 的元素划分至 big, small, equal 中</span></span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; big, equal, small;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num &gt; pivot)</span><br><span class=\"line\">                big.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num &lt; pivot)</span><br><span class=\"line\">                small.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                equal.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 big 中，递归划分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k &lt;= big.<span class=\"built_in\">size</span>())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(big, k);</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 small 中，递归划分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.<span class=\"built_in\">size</span>() - small.<span class=\"built_in\">size</span>() &lt; k)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(small, k - nums.<span class=\"built_in\">size</span>() + small.<span class=\"built_in\">size</span>());</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 equal 中，直接返回 pivot</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> pivot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"股票\"><a class=\"markdownIt-Anchor\" href=\"#股票\"></a> 股票</h2>\n<p>有一支股票，你只有一股，已知过去N天的股价，只能进行一次买卖，请问你能获得最大利润是多少</p>\n<p>（给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。</p>\n<p>你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。</p>\n<p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。）</p>\n<h3 id=\"思路找到已经过去的每一天的最小值\"><a class=\"markdownIt-Anchor\" href=\"#思路找到已经过去的每一天的最小值\"></a> 思路：找到已经过去的每一天的最小值</h3>\n<p>在买卖股票的时候，为了获得最高的利润，肯定希望在最低价买入，在最高价卖出。由此，我们可以遍历数组一边，每次记录已遍历的部分的最小值，然后用于计算和数组后面数字的差的最大值。</p>\n<details>\n<summary>买卖股票的时机</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> inf = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> minprice = inf, maxprofit = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> price: prices) &#123;</span><br><span class=\"line\">            maxprofit = <span class=\"built_in\">max</span>(maxprofit, price - minprice);</span><br><span class=\"line\">            minprice = <span class=\"built_in\">min</span>(price, minprice);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"判断一个链表中是否存在一个环\"><a class=\"markdownIt-Anchor\" href=\"#判断一个链表中是否存在一个环\"></a> 判断一个链表中是否存在一个环</h2>\n<p>给出一个链表A-&gt;B-&gt;C-&gt;D-&gt;E-&gt;F-&gt;G-&gt;D，如何判断是否存在环。</p>\n<h3 id=\"思路快慢指针\"><a class=\"markdownIt-Anchor\" href=\"#思路快慢指针\"></a> 思路：快慢指针</h3>\n<h2 id=\"有序三元数组的最大值\"><a class=\"markdownIt-Anchor\" href=\"#有序三元数组的最大值\"></a> 有序三元数组的最大值</h2>\n<p>给你一个下标从 0 开始的整数数组 nums 。</p>\n<p>请你从所有满足 i &lt; j &lt; k 的下标三元组 (i, j, k) 中，找出并返回下标三元组的最大值。如果所有满足条件的三元组的值都是负数，则返回 0 。</p>\n<p>下标三元组 (i, j, k) 的值等于 (nums[i] - nums[j]) * nums[k] 。</p>\n<h3 id=\"思路类似股票问题\"><a class=\"markdownIt-Anchor\" href=\"#思路类似股票问题\"></a> 思路：类似<em>股票</em>问题</h3>\n<p>和上述买卖股票问题相似，可以先存储（nums[i] - nums[j]）的最大值，然后枚举k得到三元数组的最大值。</p>\n<details>\n<summary>有序三元数组的最大值</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">maximumTripletValue</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> max_diff = <span class=\"number\">0</span>, pre_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : nums) &#123;</span><br><span class=\"line\">            ans = <span class=\"built_in\">max</span>(ans, (<span class=\"type\">long</span> <span class=\"type\">long</span>) max_diff * x);</span><br><span class=\"line\">            max_diff = <span class=\"built_in\">max</span>(max_diff, pre_max - x);</span><br><span class=\"line\">            pre_max = <span class=\"built_in\">max</span>(pre_max, x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"滑动窗口的最大值\"><a class=\"markdownIt-Anchor\" href=\"#滑动窗口的最大值\"></a> 滑动窗口的最大值</h2>\n<p>给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。</p>\n<p>返回 <em>滑动窗口中的最大值</em> 。</p>\n<h3 id=\"思路单调队列\"><a class=\"markdownIt-Anchor\" href=\"#思路单调队列\"></a> 思路：单调队列</h3>\n<p>通过移动窗口，可以看到每移动一次，队尾向右增加一个数字，队首减少一个数字。每次出队的元素都有可能是最大值，即小于新入队的元素。故想到每次出队入队都将原窗口内的数字和即将入队的数字比较，将最大值存入窗口，将小于最大值的所有元素移出窗口，保证窗口中的第一个元素为当前窗口内的最大值，则整个判断过程只需要遍历一次，时间复杂度为O(1)。</p>\n<details>\n<summary>单调队列</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">maxSlidingWindow</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span> || k == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> &#123;&#125;;</span><br><span class=\"line\">        deque&lt;<span class=\"type\">int</span>&gt; deque;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">res</span><span class=\"params\">(nums.size() - k + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>, i = <span class=\"number\">1</span> - k; j &lt; nums.<span class=\"built_in\">size</span>(); i++, j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 删除 deque 中对应的 nums[i-1]</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; deque.<span class=\"built_in\">front</span>() == nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">                deque.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 保持 deque 递减</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!deque.<span class=\"built_in\">empty</span>() &amp;&amp; deque.<span class=\"built_in\">back</span>() &lt; nums[j])</span><br><span class=\"line\">                deque.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">            deque.<span class=\"built_in\">push_back</span>(nums[j]);</span><br><span class=\"line\">            <span class=\"comment\">// 记录窗口最大值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">                res[i] = deque.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"存在重复元素\"><a class=\"markdownIt-Anchor\" href=\"#存在重复元素\"></a> 存在重复元素</h2>\n<p>给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) &lt;= k 。如果存在，返回 true ；否则，返回 false 。</p>\n<h3 id=\"思路滑动窗口\"><a class=\"markdownIt-Anchor\" href=\"#思路滑动窗口\"></a> 思路：滑动窗口</h3>\n<p>由于只需要判断在k范围内是否存在重复元素，故可以使用滑动窗口限制比较的元素的数量。</p>\n<details>\n<summary>滑动窗口</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">containsNearbyDuplicate</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        unordered_set&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\">        <span class=\"type\">int</span> length = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt; k) &#123;</span><br><span class=\"line\">                s.<span class=\"built_in\">erase</span>(nums[i - k - <span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.<span class=\"built_in\">count</span>(nums[i])) &#123;<span class=\"comment\">//计算出现的次数</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            s.<span class=\"built_in\">emplace</span>(nums[i]);<span class=\"comment\">//将元素添加到队列末尾</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"序列化分\"><a class=\"markdownIt-Anchor\" href=\"#序列化分\"></a> 序列化分</h2>\n<p>给定一个正整数序列，将该序列化分为m个连续的子序列，每个子序列至少包含一个元素，要求使得子序列的和的最大值最小。</p>\n<h3 id=\"思路二分查找\"><a class=\"markdownIt-Anchor\" href=\"#思路二分查找\"></a> 思路：二分查找</h3>\n<p>对于整数数列，他的子序列和的最大值的范围为：最小值：序列中单个元素的最大值(即将单个元素划分为子列)；最大值：序列中所有元素的和(即将整个序列划分为子列)，故二分查找的区间为[min,max]。</p>\n<p>二分查找是为了更快的实现在子序列的个数已经限定的条件下，找到子序列和的最大值最小的情况。</p>\n<p>具体算法： 1、先选取查找区间中点元素作为最大值，判断在该最大值的情况下，序列是否可以划分为要求的m个子序列。若划分个数 <strong>n&lt;m</strong> ，则说明最大值过大，若 <strong>n&gt;m</strong> ，则说明最大值取得过小，依此找到题目要求的最大值的最小值。</p>\n<details>\n<summary>二分查找</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> a[maxn];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> cut = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> s = a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s + a[i] &lt;= x) s += a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123; s = a[i]; cut++; &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cut;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bin_search</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> mid = l + (r - l) / <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid) &lt;= m) &#123;</span><br><span class=\"line\">\t\t\tr = mid;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tl = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> t;</span><br><span class=\"line\">\tll mx, sum;</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (t--) &#123;</span><br><span class=\"line\">\t\tmx = <span class=\"number\">0</span>, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t\tsum += a[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (mx &lt; a[i])</span><br><span class=\"line\">\t\t\t\tmx = a[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ans = <span class=\"built_in\">bin_search</span>(mx, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"分裂数组一\"><a class=\"markdownIt-Anchor\" href=\"#分裂数组一\"></a> 分裂数组（一）</h2>\n<p>给定一个整数集合,将其划分为两个不相交的子集A1和A2,元素个数分别是n1和n2,元素之和分别是S1和S2.设计一个算法满足|n1-n2|最小且|S1-S2|最小.</p>\n<h3 id=\"思路动态规划\"><a class=\"markdownIt-Anchor\" href=\"#思路动态规划\"></a> 思路：动态规划</h3>\n<p>要将一个整数集合划分为两个不相交的子集，使得两个子集的元素个数之差 ∣n1−n2∣ 和元素之和之差 ∣S1−S2∣ 都尽可能小，我们可以利用动态规划的方法来解决这个问题。</p>\n<p>具体来说，我们可以使用一个二维动态规划数组 dp[i][j] 来表示：当前集合的前 i 个元素能否被划分为两个子集，使得其中一个子集的和为 j。然后，我们可以进一步记录划分方案，以找到最佳的划分方式。</p>\n<p>以下是算法的具体步骤：</p>\n<p>初始化动态规划数组：</p>\n<p>dp[i][j] 表示前 i 个元素能否划分出和为 j 的子集。</p>\n<p>初始化 dp[0][0] = True，表示空集合可以划分出和为 0 的子集。\n填充动态规划数组：</p>\n<p>遍历集合中的每个元素 num 和每个可能的和 j。</p>\n<p>如果 dp[i-1][j] 为 True，那么 dp[i][j+num] 也为 True，表示可以将 num 加入到和为 j 的子集中。\n记录划分方案：</p>\n<p>使用一个额外的数组来记录每个 j 对应的划分方案中是否包含当前元素 num。\n寻找最佳划分：</p>\n<p>遍历所有可能的和 j，找到最接近集合总和一半的和，从而确保 ∣S1−S2∣ 最小。\n在找到的和附近，寻找元素个数之差 ∣n1−n2∣ 最小的划分。</p>\n<details>\n<summary>动态规划</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">min_difference_partition</span>(<span class=\"params\">nums</span>):  </span><br><span class=\"line\">    total_sum = <span class=\"built_in\">sum</span>(nums)  </span><br><span class=\"line\">    n = <span class=\"built_in\">len</span>(nums)  </span><br><span class=\"line\">    half_total = total_sum // <span class=\"number\">2</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Initialize dp array  </span></span><br><span class=\"line\">    dp = [[<span class=\"literal\">False</span>] * (half_total + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n + <span class=\"number\">1</span>)]  </span><br><span class=\"line\">    dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"literal\">True</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Include/Exclude array to keep track of partition  </span></span><br><span class=\"line\">    include = [[<span class=\"literal\">False</span>] * (half_total + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n + <span class=\"number\">1</span>)]  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Fill dp array  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, n + <span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(half_total + <span class=\"number\">1</span>):  </span><br><span class=\"line\">            <span class=\"keyword\">if</span> j &gt;= nums[i-<span class=\"number\">1</span>]:  </span><br><span class=\"line\">                dp[i][j] = dp[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">or</span> dp[i-<span class=\"number\">1</span>][j-nums[i-<span class=\"number\">1</span>]]  </span><br><span class=\"line\">                include[i][j] = include[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">if</span> dp[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">else</span> include[i-<span class=\"number\">1</span>][j-nums[i-<span class=\"number\">1</span>]]  </span><br><span class=\"line\">            <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">                dp[i][j] = dp[i-<span class=\"number\">1</span>][j]  </span><br><span class=\"line\">                include[i][j] = include[i-<span class=\"number\">1</span>][j]  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Find the maximum sum that can be achieved up to half_total  </span></span><br><span class=\"line\">    max_sum = <span class=\"number\">0</span>  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(half_total, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> dp[n][j]:  </span><br><span class=\"line\">            max_sum = j  </span><br><span class=\"line\">            <span class=\"keyword\">break</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Trace back to find the partition  </span></span><br><span class=\"line\">    partition1 = []  </span><br><span class=\"line\">    partition2 = nums[:]  </span><br><span class=\"line\">    current_sum = max_sum  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n, <span class=\"number\">0</span>, -<span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> include[i][current_sum]:  </span><br><span class=\"line\">            partition1.append(nums[i-<span class=\"number\">1</span>])  </span><br><span class=\"line\">            current_sum -= nums[i-<span class=\"number\">1</span>]  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">            partition2.remove(nums[i-<span class=\"number\">1</span>])  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Calculate results  </span></span><br><span class=\"line\">    n1, n2 = <span class=\"built_in\">len</span>(partition1), <span class=\"built_in\">len</span>(partition2)  </span><br><span class=\"line\">    S1, S2 = <span class=\"built_in\">sum</span>(partition1), <span class=\"built_in\">sum</span>(partition2)  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Optionally, further adjust to balance n1 and n2 if needed  </span></span><br><span class=\"line\">    <span class=\"comment\"># This is an NP-hard problem in general, but here we can do some greedy adjustments  </span></span><br><span class=\"line\">    <span class=\"comment\"># if possible to minimize |n1 - n2| while keeping |S1 - S2| small.  </span></span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># However, since we already balanced S1 and S2 optimally, we focus on the best we found.  </span></span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> partition1, partition2, n1, n2, S1, S2  </span><br><span class=\"line\">  </span><br></pre></td></tr></table></figure>\n</details>\n<hr />\n<h2 id=\"n皇后问题\"><a class=\"markdownIt-Anchor\" href=\"#n皇后问题\"></a> N皇后问题</h2>\n<p>按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。</p>\n<p>n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。</p>\n<p>给你一个整数 n ，返回所有不同的 n 皇后问题 的解决方案。</p>\n<p>每一种解法包含一个不同的 n 皇后问题 的棋子放置方案，该方案中 'Q' 和 '.' 分别代表了皇后和空位。</p>\n<h3 id=\"思路排列型回溯\"><a class=\"markdownIt-Anchor\" href=\"#思路排列型回溯\"></a> 思路：排列型回溯</h3>\n<details>\n<summary>N皇后问题</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">solveNQueens</span>(<span class=\"params\">self, n: <span class=\"built_in\">int</span></span>) -&gt; <span class=\"type\">List</span>[<span class=\"type\">List</span>[<span class=\"built_in\">str</span>]]:</span><br><span class=\"line\">        ans = []</span><br><span class=\"line\">        queens = [<span class=\"number\">0</span>] * n  <span class=\"comment\"># 皇后放在 (r,queens[r])</span></span><br><span class=\"line\">        col = [<span class=\"literal\">False</span>] * n</span><br><span class=\"line\">        diag1 = [<span class=\"literal\">False</span>] * (n * <span class=\"number\">2</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">        diag2 = [<span class=\"literal\">False</span>] * (n * <span class=\"number\">2</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">r: <span class=\"built_in\">int</span></span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> r == n:</span><br><span class=\"line\">                ans.append([<span class=\"string\">&#x27;.&#x27;</span> * c + <span class=\"string\">&#x27;Q&#x27;</span> + <span class=\"string\">&#x27;.&#x27;</span> * (n - <span class=\"number\">1</span> - c) <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> queens])</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            <span class=\"comment\"># 在 (r,c) 放皇后</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> c, ok <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(col):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> diag1[r + c] <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> diag2[r - c]:  <span class=\"comment\"># 判断能否放皇后</span></span><br><span class=\"line\">                    queens[r] = c  <span class=\"comment\"># 直接覆盖，无需恢复现场</span></span><br><span class=\"line\">                    col[c] = diag1[r + c] = diag2[r - c] = <span class=\"literal\">True</span>  <span class=\"comment\"># 皇后占用了 c 列和两条斜线</span></span><br><span class=\"line\">                    dfs(r + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    col[c] = diag1[r + c] = diag2[r - c] = <span class=\"literal\">False</span>  <span class=\"comment\"># 恢复现场</span></span><br><span class=\"line\">        dfs(<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"单词接龙\"><a class=\"markdownIt-Anchor\" href=\"#单词接龙\"></a> 单词接龙</h2>\n<p>字典 wordList 中从单词 beginWord 到 endWord 的 转换序列 是一个按下述规格形成的序列 beginWord -&gt; s1 -&gt; s2 -&gt; ... -&gt; sk：\n每一对相邻的单词只差一个字母。\n对于 1 &lt;= i &lt;= k 时，每个 si 都在 wordList 中。注意， beginWord 不需要在 wordList 中。\nsk == endWord\n给你两个单词 beginWord 和 endWord 和一个字典 wordList ，返回 从 beginWord 到 endWord 的 最短转换序列 中的 单词数目 。如果不存在这样的转换序列，返回 0 。</p>\n<h3 id=\"思路广度优先搜索\"><a class=\"markdownIt-Anchor\" href=\"#思路广度优先搜索\"></a> 思路：广度优先搜索</h3>\n<p>本题要求的是最短转换序列，首先想到的就是广度优先搜索。广度优先搜索自然而然就可以想到图，但题中并没有给出图，所有首先构造一个图。我们把每一个单词都抽象为一个点，如果两个单词可以只改变一个字母进行转换，那么说明他们之间有一条双向边。因此我们只需要把满足转换条件的点相连，就形成了一张图。\n基于该图，我们以beginWord为图的起点，以endWord为终点进行广度优先搜索，寻找beginWord到endWord的最短路径。</p>\n<p>由于根据给定的字典构造的图可能会很大，而加入每个结点的分支数量相同，搜索空间会随着层数的增长指数级的增加。则考虑使用两个同时进行的广度搜索，这样可以减少搜索空间。一边从beginWord开始，一边从endWord开始，当发现某一时刻两边都访问过同一顶点时就停止搜索。</p>\n<h3 id=\"算法\"><a class=\"markdownIt-Anchor\" href=\"#算法\"></a> 算法</h3>\n<p>首先为了方便表示，我们先给每一个单词标号，即给每一个单词分配一个id，创建一个由单词word到id对应的映射wordId,并将beginWord与wordList中所有的单词都加入这个映射中，之后检查endWord是否在该映射内，若不存在则输入无解。</p>\n<details>\n<summary>单词接龙</summary>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    unordered_map&lt;string, <span class=\"type\">int</span>&gt; wordId;</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; edge;</span><br><span class=\"line\">    <span class=\"type\">int</span> nodeNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">addWord</span><span class=\"params\">(string&amp; word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!wordId.<span class=\"built_in\">count</span>(word)) &#123;</span><br><span class=\"line\">            wordId[word] = nodeNum++;</span><br><span class=\"line\">            edge.<span class=\"built_in\">emplace_back</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(string&amp; word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">addWord</span>(word);</span><br><span class=\"line\">        <span class=\"type\">int</span> id1 = wordId[word];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; it : word) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> tmp = it;</span><br><span class=\"line\">            it = <span class=\"string\">&#x27;*&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">addWord</span>(word);</span><br><span class=\"line\">            <span class=\"type\">int</span> id2 = wordId[word];</span><br><span class=\"line\">            edge[id1].<span class=\"built_in\">push_back</span>(id2);</span><br><span class=\"line\">            edge[id2].<span class=\"built_in\">push_back</span>(id1);</span><br><span class=\"line\">            it = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">ladderLength</span><span class=\"params\">(string beginWord, string endWord, vector&lt;string&gt;&amp; wordList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string&amp; word : wordList) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">addEdge</span>(word);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">addEdge</span>(beginWord);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!wordId.<span class=\"built_in\">count</span>(endWord)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dis</span><span class=\"params\">(nodeNum, INT_MAX)</span></span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> beginId = wordId[beginWord], endId = wordId[endWord];</span><br><span class=\"line\">        dis[beginId] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        queue&lt;<span class=\"type\">int</span>&gt; que;</span><br><span class=\"line\">        que.<span class=\"built_in\">push</span>(beginId);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!que.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x = que.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">            que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == endId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> dis[endId] / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span>&amp; it : edge[x]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dis[it] == INT_MAX) &#123;</span><br><span class=\"line\">                    dis[it] = dis[x] + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    que.<span class=\"built_in\">push</span>(it);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"平面最近点对\"><a class=\"markdownIt-Anchor\" href=\"#平面最近点对\"></a> 平面最近点对</h2>\n<p><a href=\"https://oi-wiki.org/geometry/nearest-points/\">https://oi-wiki.org/geometry/nearest-points/</a></p>\n<h2 id=\"用最少数量的箭引爆气球\"><a class=\"markdownIt-Anchor\" href=\"#用最少数量的箭引爆气球\"></a> 用最少数量的箭引爆气球</h2>\n<p>有一些球形气球贴在一堵用 XY 平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中points[i] = [xstart, xend] 表示水平直径在 xstart 和 xend之间的气球。你不知道气球的确切 y 坐标。</p>\n<p>一支弓箭可以沿着 x 轴从不同点 完全垂直 地射出。在坐标 x 处射出一支箭，若有一个气球的直径的开始和结束坐标为 xstart，xend， 且满足  xstart ≤ x ≤ xend，则该气球会被 引爆 。可以射出的弓箭的数量 没有限制 。 弓箭一旦被射出之后，可以无限地前进。</p>\n<p>给你一个数组 points ，返回引爆所有气球所必须射出的 最小弓箭数 。</p>\n<h3 id=\"思路贪心算法\"><a class=\"markdownIt-Anchor\" href=\"#思路贪心算法\"></a> 思路：贪心算法</h3>\n<p>解释题意，就是把这些区间画在数轴上，在数轴上最少要放置多少个点使得每个区间都包含至少一个点。</p>\n<p>把区间按照右端点从小到大排序，这样第一个点就放在第一个区间的右端点处。去掉包含第一个点的区间后，第二个点就放在剩余区间的第一个区间的右端点处，以此类推。</p>\n<details>\n<summary>引爆气球</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">findMinArrowShots</span>(<span class=\"params\">self, points: <span class=\"type\">List</span>[<span class=\"type\">List</span>[<span class=\"built_in\">int</span>]]</span>) -&gt; <span class=\"built_in\">int</span>:</span><br><span class=\"line\">        points.sort(key=<span class=\"keyword\">lambda</span> p: p[<span class=\"number\">1</span>])  <span class=\"comment\"># 按照右端点从小到大排序</span></span><br><span class=\"line\">        ans = <span class=\"number\">0</span></span><br><span class=\"line\">        pre = -inf</span><br><span class=\"line\">        <span class=\"keyword\">for</span> start, end <span class=\"keyword\">in</span> points:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> start &gt; pre:  <span class=\"comment\"># 上一个点在区间左边</span></span><br><span class=\"line\">                ans += <span class=\"number\">1</span></span><br><span class=\"line\">                pre = end  <span class=\"comment\"># 在区间的最右边放一个点</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</details>\n<h2 id=\"柠檬水找零\"><a class=\"markdownIt-Anchor\" href=\"#柠檬水找零\"></a> 柠檬水找零</h2>\n<p>在柠檬水摊上，每一杯柠檬水的售价为 5 美元。顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。</p>\n<p>每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。</p>\n<p>注意，一开始你手头没有任何零钱。</p>\n<p>给你一个整数数组 bills ，其中 bills[i] 是第 i 位顾客付的账。如果你能给每位顾客正确找零，返回 true ，否则返回 false 。</p>\n<h3 id=\"思路分类讨论\"><a class=\"markdownIt-Anchor\" href=\"#思路分类讨论\"></a> 思路：分类讨论</h3>\n<details>\n<summary>柠檬水找零</summary>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">lemonadeChange</span>(<span class=\"params\">self, bills: <span class=\"type\">List</span>[<span class=\"built_in\">int</span>]</span>) -&gt; <span class=\"built_in\">bool</span>:</span><br><span class=\"line\">        five = ten = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> bills:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> b == <span class=\"number\">5</span>:  <span class=\"comment\"># 无需找零</span></span><br><span class=\"line\">                five += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> b == <span class=\"number\">10</span>:  <span class=\"comment\"># 返还 5</span></span><br><span class=\"line\">                five -= <span class=\"number\">1</span></span><br><span class=\"line\">                ten += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> ten:  <span class=\"comment\"># 此时 b=20，返还 10+5</span></span><br><span class=\"line\">                five -= <span class=\"number\">1</span></span><br><span class=\"line\">                ten -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:  <span class=\"comment\"># 此时 b=20，返还 5+5+5</span></span><br><span class=\"line\">                five -= <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> five &lt; <span class=\"number\">0</span>:  <span class=\"comment\"># 无法正确找零</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</detaisl>","tags":["算法学习"]}]
[{"title":"Git命令行学习与总结","url":"/2025/04/05/Git%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%80%BB%E7%BB%93/","content":"<p>因为网站托管使用已久，所以使用借助GitHub做代码版本控制不需要太多前期准备工作，配置好vscode、GitHub的repository以及和GitHub账号连接的Git即可。</p>\r\n<h1 id=\"推送步骤\">推送步骤</h1>\r\n<p>在ssh连接成功后，即可开始配置repository，具体步骤如下。</p>\r\n<p><strong>初始化本地Git仓库</strong></p>\r\n<ul>\r\n<li><p>进入项目目录</p>\r\n<p>在vscode终端中进入项目目录中：</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> &lt;项目目录路径&gt;</span><br></pre></td></tr></table></figure></li>\r\n<li><p>初始化Git仓库</p>\r\n<p>如果项目目录还没有被Git管理，运行以下命令初始化：</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure></li>\r\n<li><p>添加远程仓库</p>\r\n<p>在Github上创建一个新的仓库：</p>\r\n<p>1.登录到GitHub</p>\r\n<p>2.点击右上角的+，选择<strong>New repository</strong></p>\r\n<p>3.填写仓库名称和其他信息，点击<strong>Create repository</strong></p>\r\n<p>复制仓库的SSH URL，例如：</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git@github.<span class=\"keyword\">com</span>:username/repository.git</span><br></pre></td></tr></table></figure>\r\n<p>将远程仓库添加到本地仓库（终端输入）：</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">add</span> origin git@github.<span class=\"keyword\">com</span>:username/repository.git</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<p><strong>添加文件并提交到本地仓库</strong></p>\r\n<ul>\r\n<li><p>添加文件到暂存区</p>\r\n<p>可以选择将所有文件都添加到暂存区，或者将特定文件添加到暂存区：</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">add</span> . //添加所有文件</span><br><span class=\"line\">git <span class=\"built_in\">add</span> &lt;文件名称&gt; //添加特定文件</span><br></pre></td></tr></table></figure></li>\r\n<li><p>提交文件到本地仓库</p>\r\n<p>提交文件并添加提交信息</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit -<span class=\"keyword\">m</span> <span class=\"string\">&quot;初始提交&quot;</span></span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<p><strong>推送代码到GitHub远程仓库</strong></p>\r\n<ul>\r\n<li><p>推送到远程仓库</p>\r\n<p>将代码推送到远程仓库的主分支（main或master）</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push -<span class=\"keyword\">u</span> origin main</span><br><span class=\"line\">git push origin main --force //强制推送</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n<p><strong>验证推送结果</strong></p>\r\n<p>打开GitHub进入仓库页面，检查代码是否已经成功推送。</p>\r\n<p><strong>注意</strong>：在将文件添加到暂存区后，GitHub的仓库中是无法查看文件的。提交过程代码有三个存放位置，暂存区-&gt;本地仓库-&gt;远程仓库，只有推送至远程仓库成功后才能看到代码文件。</p>\r\n<h1 id=\"常用命令\">常用命令</h1>\r\n<ul>\r\n<li><p>如果想从暂存区移除文件但保留在工作区中，使用</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git restore --staged &lt;文件名&gt; //移除指定文件</span><br><span class=\"line\">git restore --staged . //移除所有文件</span><br></pre></td></tr></table></figure>\r\n<p>或</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset &lt;文件名&gt;</span><br><span class=\"line\">git reset </span><br></pre></td></tr></table></figure></li>\r\n<li><p>如果想从暂存区和工作区中同时删除文件，使用</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rm &lt;文件名&gt;</span><br></pre></td></tr></table></figure></li>\r\n<li><p>查看暂存区状态，使用</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure></li>\r\n<li><p>将GitHub代码克隆到本地</p>\r\n<figure class=\"highlight vim\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone &lt;ssh URL&gt;</span><br></pre></td></tr></table></figure></li>\r\n</ul>\r\n","categories":["CS learning"],"tags":["git"]},{"title":"Grokking Algorithms","url":"/2024/09/26/Grokking-Algorithms/","content":"<h2 id=\"快速排序\">快速排序</h2>\r\n<p>基本思想：将数组分解直至满足基线条件，使用递归调用排序</p>\r\n<details>\r\n<summary>\r\n快速排序\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">quicksort</span>(<span class=\"params\">array</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(array) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> array</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\tpivot = array[<span class=\"number\">0</span>]</span><br><span class=\"line\">\t\tless = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i &lt;= pivot] <span class=\"comment\">#由所有小于基准值的元素组成</span></span><br><span class=\"line\">\t\tgreater = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> array[<span class=\"number\">1</span>:] <span class=\"keyword\">if</span> i &gt; pivot]</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> quicksort(less) + [pivot] + quicksort(greater)</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"散列表哈希表\">散列表（哈希表）</h2>\r\n<p>散列函数可以“将输入映射到数字”。</p>\r\n<h3 id=\"应用案例\">应用案例</h3>\r\n<ul>\r\n<li>用于“大海捞针”式的寻找。例如在访问网站时，计算机需要将网页地址转换为IP地址，即将网址映射到IP地址。该过程被称为DNS解析，可以应用哈希表实现。</li>\r\n<li>防止重复。利用哈希表映射寻找表内内容是否出现了重复。</li>\r\n</ul>\r\n<details>\r\n<summary>\r\n哈希表(避免重复）\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">voted = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_voter</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> voted.get(name):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;kick them out!&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        voted[name] = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;let them vote!&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;tom&quot;</span>)</span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;mike&quot;</span>)</span><br><span class=\"line\">check_voter(<span class=\"string\">&quot;tom&quot;</span>)</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<ul>\r\n<li>将散列表用于缓存。例如cache存储，内存，外存和页表。</li>\r\n</ul>\r\n<details>\r\n<summary>\r\n哈希表（缓存）\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">cache = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_page</span>(<span class=\"params\">url</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> cache.get(url):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cache[url]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        data = get_data_from_server(url)</span><br><span class=\"line\">        cache[url] = data</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"冲突的解决和哈希表的性能\">冲突的解决和哈希表的性能</h3>\r\n<p>哈希表的平均性能为O(1)，单数冲突的产生会导致哈希表的性能在最糟糕的情况下都为O(n)，即比很多线性表都要慢，因此需要避免冲突。一般解决办法式有较低的填装因子和良好的散列函数。</p>\r\n<h4 id=\"填装因子\">填装因子</h4>\r\n<p>当填装因子大于0.7，就需要调整列表的长度。</p>\r\n<h4 id=\"良好的散列函数\">良好的散列函数</h4>\r\n<p>良好的散列函数让数组中的值呈均匀分布。</p>\r\n<h2 id=\"广度优先搜索\">广度优先搜索</h2>\r\n<h3 id=\"图\">图</h3>\r\n<p>图可以用于模拟不同的东西是如何相连的。</p>\r\n<h3 id=\"算法实现\">算法实现</h3>\r\n<p>首先创建一个队列，用于搜索每一个节点的相连节点。即由队列组成一个拓扑图，由此出发进行搜索。</p>\r\n<details>\r\n<summary>\r\n图\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">graph = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;you&quot;</span>] = [<span class=\"string\">&quot;alice&quot;</span>, <span class=\"string\">&quot;bob&quot;</span>, <span class=\"string\">&quot;claire&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;bob&quot;</span>] = [<span class=\"string\">&quot;anuj&quot;</span>, <span class=\"string\">&quot;peggy&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;alice&quot;</span>] = [<span class=\"string\">&quot;peggy&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;claire&quot;</span>] = [<span class=\"string\">&quot;thom&quot;</span>, <span class=\"string\">&quot;jonny&quot;</span>]</span><br><span class=\"line\">graph[<span class=\"string\">&quot;anuj&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;peggy&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;thom&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;jonny&quot;</span>] = &#123;&#125;<span class=\"comment\">#生成一个图</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> deque<span class=\"comment\">#建立队列用于搜索</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">search</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    search_queue = deque()</span><br><span class=\"line\">    search_queue += graph[name]<span class=\"comment\">#放入搜索队列</span></span><br><span class=\"line\">    searched = []<span class=\"comment\">#已搜索过的元素，避免循环搜索</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> search_queue:<span class=\"comment\">#如果搜索队列不为空</span></span><br><span class=\"line\">        person = search_queue.popleft()<span class=\"comment\">#从队列中弹出搜索项</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> person <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> searched:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> person_is_seller(person):</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(person + <span class=\"string\">&quot;is a mango seller!&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                search_queue += graph[person]</span><br><span class=\"line\">                searched.append(person)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">person_is_seller</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name[-<span class=\"number\">1</span>] == <span class=\"string\">&#x27;m&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">search(<span class=\"string\">&quot;you&quot;</span>)</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"狄克斯特拉算法\">狄克斯特拉算法</h2>\r\n<p>狄克斯特拉算法用于寻找加权图中的最短路径，但只适用于有向无环图和正权重。</p>\r\n<p>算法核心思想在于寻找最便宜的节点，检查他们的邻居，检查是否有前往他们的更短路径，如果有就更新其开销，重复这个过程直到遍历所有节点，最后计算最终路径。</p>\r\n<p>在计算过程中需要不断根据最短路径更新权重哈希表和父节点哈希表中的信息。</p>\r\n<details>\r\n<summary>\r\n狄克斯特拉算法实现\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#狄克斯特拉算法</span></span><br><span class=\"line\">graph = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>][<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\">graph[<span class=\"string\">&quot;satrt&quot;</span>][<span class=\"string\">&quot;b&quot;</span>] = <span class=\"number\">2</span><span class=\"comment\">#建立起点的两个邻居及其权重</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;a&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;a&quot;</span>][<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>] = &#123;&#125;</span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>][<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">3</span></span><br><span class=\"line\">graph[<span class=\"string\">&quot;b&quot;</span>][<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\">graph[<span class=\"string\">&quot;fin&quot;</span>] = &#123;&#125;<span class=\"comment\">#完成图中其他节点的建立</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建哈希表存储初始计算结点的开销</span></span><br><span class=\"line\">infinity = <span class=\"built_in\">float</span>(<span class=\"string\">&quot;inf&quot;</span>)</span><br><span class=\"line\">costs = &#123;&#125;</span><br><span class=\"line\">costs[<span class=\"string\">&quot;a&quot;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\">costs[<span class=\"string\">&quot;b&quot;</span>] = <span class=\"number\">2</span></span><br><span class=\"line\">costs[<span class=\"string\">&quot;fin&quot;</span>] = infinity</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建哈希表存储初始计算的父节点</span></span><br><span class=\"line\">parents = &#123;&#125;</span><br><span class=\"line\">parents[<span class=\"string\">&quot;a&quot;</span>] = <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">parents[<span class=\"string\">&quot;b&quot;</span>] = <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">parents[<span class=\"string\">&quot;fin&quot;</span>] = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#建立数组用于存放已经搜索过的节点</span></span><br><span class=\"line\">processed = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#算法</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_lowest_cost_node</span>(<span class=\"params\">costs</span>):<span class=\"comment\">#寻找最便宜的点</span></span><br><span class=\"line\">    lowest_cost = <span class=\"built_in\">float</span>(<span class=\"string\">&quot;inf&quot;</span>)</span><br><span class=\"line\">    lowest_cost_node = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> costs:</span><br><span class=\"line\">        cost  = costs[node]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cost &lt; lowest_cost <span class=\"keyword\">and</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> processed:</span><br><span class=\"line\">            lowest_cost = cost</span><br><span class=\"line\">            lowest_cost_node = node</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lowest_cost_node</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">node = find_lowest_cost_node(costs)</span><br><span class=\"line\"><span class=\"keyword\">while</span> node <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:<span class=\"comment\">#遍历所有节点</span></span><br><span class=\"line\">    cost = costs[node]</span><br><span class=\"line\">    neighbors = graph[node]<span class=\"comment\">#得到当前节点邻居的哈希表</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> neighbors.keys():</span><br><span class=\"line\">        new_cost = cost + neighbors[n]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> costs[n] &gt; new_cost:<span class=\"comment\">#如果当前节点前往该邻居更近</span></span><br><span class=\"line\">            costs[n] = new_cost<span class=\"comment\">#就更新节点的开销</span></span><br><span class=\"line\">            parents[n] = node<span class=\"comment\">#并将邻居的父节点设为当前的节点</span></span><br><span class=\"line\">    processed.append(node)</span><br><span class=\"line\">    node = find_lowest_cost_node(costs)</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"贪婪算法\">贪婪算法</h2>\r\n<p>每步都采取最优的做法，即每步都选择局部最优解，最终得到的就是全局最优解。</p>\r\n<h3 id=\"集合覆盖问题\">集合覆盖问题</h3>\r\n<p>假设有一个广播节目，要让全美50个州的听众都听得到，但因为每一个广播台播出都需要费用，故要选择在尽可能少的广播台播出。</p>\r\n<details>\r\n<summary>\r\n贪婪算法（集合覆盖问题）\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">states_needed = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;mt&quot;</span>, <span class=\"string\">&quot;wa&quot;</span>, <span class=\"string\">&quot;or&quot;</span>, <span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ut&quot;</span>, <span class=\"string\">&quot;ca&quot;</span>,<span class=\"string\">&quot;az&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">stations = &#123;&#125;</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kone&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ut&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;ktwo&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;wa&quot;</span>, <span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;mt&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kthree&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;or&quot;</span>, <span class=\"string\">&quot;nv&quot;</span>, <span class=\"string\">&quot;ca&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kfour&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;nv&quot;</span> , <span class=\"string\">&quot;ut&quot;</span>])</span><br><span class=\"line\">stations[<span class=\"string\">&quot;kfive&quot;</span>] = <span class=\"built_in\">set</span>([<span class=\"string\">&quot;ca&quot;</span>, <span class=\"string\">&quot;az&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">final_stations = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> states_needed:</span><br><span class=\"line\">    best_station = <span class=\"literal\">None</span></span><br><span class=\"line\">    states_covered = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> station, states_for_station <span class=\"keyword\">in</span> stations.items():</span><br><span class=\"line\">        covered = states_needed &amp; states_for_station<span class=\"comment\">#求需要和已覆盖的交集</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(covered) &gt; <span class=\"built_in\">len</span>(states_covered):</span><br><span class=\"line\">            best_station = station</span><br><span class=\"line\">            states_covered = covered</span><br><span class=\"line\"></span><br><span class=\"line\">    final_stations.add(best_station)</span><br><span class=\"line\">    states_needed -= states_covered</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(final_stations)</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"np完全问题\">NP完全问题</h3>\r\n<p>“以难解著称的问题”</p>\r\n<ul>\r\n<li>元素较少时运行速度很快，但随着元素的增加运行速度变得非常慢</li>\r\n<li>涉及所有组合的问题</li>\r\n<li>不能将问题分为小问题，必须考虑各种可能的情况</li>\r\n<li>如果问题涉及序列且难以解决</li>\r\n<li>如果问题涉及集合</li>\r\n<li>如果问题可以转化为集合覆盖或者旅行商问题</li>\r\n</ul>\r\n<p>则可能是NP完全问题。</p>\r\n<h2 id=\"动态规划\">动态规划</h2>\r\n<h3 id=\"如何设计出动态规划解决方案\">如何设计出动态规划解决方案？</h3>\r\n<ul>\r\n<li>每种动态规划解决方案都涉及网格</li>\r\n<li>单元格中的值通常就是你要优化的值</li>\r\n<li>每个单元格都是一个子问题，因此你应考虑如何将问题分成子问题。</li>\r\n</ul>\r\n<p>_没有放诸四海而皆准的动态规划算法。</p>\r\n<h2 id=\"k最近邻算法knn\">K最近邻算法（KNN）</h2>\r\n<p>可以用作制作推荐系统。如果需要量度两个用户的相似度，还可以使用余弦相似度。</p>\r\n<p>使用KNN时挑选合适的特征至关重要。</p>\r\n<ul>\r\n<li>和内容紧密相关的特征</li>\r\n<li>不偏不倚的特征</li>\r\n</ul>\r\n<p>KNN可以用于机器学习来创建推荐系统或识别系统。通过大量的数字图像提取特征来建立KNN算法的参考库，例如谷歌使用的OCR（光学字符识别），垃圾邮件过滤器（使用朴素贝叶斯分类器）等。</p>\r\n<h2 id=\"将深入的方向\">将深入的方向</h2>\r\n<ul>\r\n<li>B树，红黑树，堆，伸展树</li>\r\n<li>反向索引</li>\r\n<li>傅里叶变换</li>\r\n<li>Diffie-Hellman算法</li>\r\n<li>所有的图算法都可以用线性规划实现。</li>\r\n<li>Simplex算法。</li>\r\n</ul>\r\n","categories":["CS learning"],"tags":["algorithm"]},{"title":"Linux学习","url":"/2024/04/14/Linux%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"前言怎么就想着要学linux\">前言：怎么就想着要学Linux？</h1>\r\n","categories":["CS learning"],"tags":["application"]},{"title":"New things in the process of Reproducing python games","url":"/2025/04/19/New-things-in-the-process-of-Reproducing-python-games/","content":"<h2 id=\"turtle\">Turtle</h2>\r\n<p>The turtle module in Python is a standard library module used for\r\ncreating simple graphics and drawings. It provides a virtual \"turtle\"\r\nthat can be controlled to draw shapes, patterns, and animations on the\r\nscreen. It is often used for educational purposes to teach programming\r\nand basic graphics concepts.</p>\r\n<p>Key features of turtle:</p>\r\n<ul>\r\n<li>Drawing: You can draw lines,shapes, and patterns by moving the\r\nturtle around the screen.</li>\r\n<li>Animation: The turtle's movements can be animated, making it useful\r\nfor creating simple games or visualizations.</li>\r\n<li>Events Handling: It supports keyboard and mouse events,allowing for\r\ninteractive programs.</li>\r\n<li>Easy to use: The module is beginner-friendly and requires no prior\r\nknowledge of graphics programming.</li>\r\n</ul>\r\n<p>Common functions:</p>\r\n<ul>\r\n<li>forward(distance): Moves the turtle forward by the specified\r\ndistance.</li>\r\n<li>backward(distance): Moves the turtle backward.</li>\r\n<li>left(angle): Turns the turtle left by the specified angle.</li>\r\n<li>right(angle): Turns the turtle right.</li>\r\n<li>penup()/pendown(): Lifts or lowers the pen to stop or start\r\ndrawing.</li>\r\n<li>goto(x,y): Moves the turtle to a specific position</li>\r\n<li>circle(radius): Draws a circle with the given radius.</li>\r\n<li>color(color_name): Sets the turtle's pen color</li>\r\n<li>bgcolor(color_name): Sets the background color of the screen.</li>\r\n</ul>\r\n<p>Other functions:</p>\r\n<ul>\r\n<li><p>setup(): uses to configure the size and position of the turtle\r\ngraphics window.</p>\r\n<p>It has four parameters, which allow for flexibility in defining the\r\nwindow's dimensions and placement. Four parameters are: width(the first\r\nparameter specifies the width of the window in pixels), height(the\r\nsecond parameters specifies the height of the window in pixels.),start\r\nx(the third parameter specifies the X-coordinate of the top-left corner\r\nof the window on the screen), start y(the fourth parameters specifies\r\nthe Y-coordinate of the top-left corner of the window on the\r\nscreen)</p></li>\r\n<li><p>hideturtle()</p>\r\n<p>The hideturtle() function in your code is used to hide the turtle\r\ncursor (the arrow or shape that represents the turtle), where you don't\r\nwant the turtle cursor to be visible while drawing or updating the\r\ngame.</p>\r\n<p>It is a simple function that only hides the turtle cursor. It doesn't\r\nrequire any additional information or parameters because its purpose is\r\nsingular and straightforward: to make the turtle invisible. It acts on\r\nthe current turtle object.</p></li>\r\n<li><p>tracer()</p>\r\n<p>The tracer() is a function used to control the animation speed of the\r\nturtle graphics. By default, the turtle module updates the screen after\r\nevery drawing action, which can make complex drawings slow.</p>\r\n<p>The tracer() function allows you to disable or control the frequency\r\nof screen updates, making the drawing process faster or smoother.</p>\r\n<p>Syntax:</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">tracer(n=<span class=\"literal\">None</span>, delay=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure>\r\n<p>n:If set to 0, it disables automatic screen updates entirely. You\r\nwill need to call update() manually to refresh the screen. If set to a\r\npositive integer, it updates the screen every nth drawing action.</p>\r\n<p>delay: Set a delay(in milliseconds) between updates.</p></li>\r\n<li><p>listen()</p>\r\n<p>listen() is a function that sets the focus on the Turtle graphics\r\nwindow to capture keyboard events. It enables the program to respond to\r\nkey presses by associating specific keys with functions using\r\nonkey()</p></li>\r\n<li><p>done()</p>\r\n<p>In the turtle module, the done() function is used to indicate that\r\nthe Turtle graphics program has finished executing. It keeps the Turtle\r\ngraphics window open, allowing the user to view the final state of\r\ndrawing or game.</p>\r\n<p>Without done(), the Turtle graphics window may close immediately\r\nafter the program finishes running, especially when executed in certain\r\nenvironments.</p></li>\r\n<li><p>undo()</p>\r\n<p>undo() function is used to reverse the last action performed by the\r\nturtle. This can include actions like drawing a line, moving the turtle,\r\nor writing text.</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">writer.undo()</span><br><span class=\"line\">writer.write(state[<span class=\"string\">&#x27;score&#x27;</span>])</span><br></pre></td></tr></table></figure>\r\n<p>writer.undo() removes the last action performed by the writer turtle,\r\nwhich is likely the previously written score. This ensures that the old\r\nscore is erased before writing the update score with\r\nwriter.write(state['state']).</p></li>\r\n<li><p>clear()</p>\r\n<p>Used to erase all drawings made by the turtle on the screen. It\r\nsimply clears the visual content created by the turtle.</p></li>\r\n</ul>\r\n<h2 id=\"lambda\">Lambda</h2>\r\n<p>In python, a <strong>lambda</strong> is a way to create an anonymous\r\nfunction(a function without a name).It is often used for short simple\r\nfunctions that are not reused elsewhere. The syntax for a lambda\r\nfunction is:</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">lambda</span> arguments:expression</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>arguments: the input parameters for the function.</li>\r\n<li>expression: the single expression that the function evaluates and\r\nreturns</li>\r\n</ul>\r\n<p><strong>The purpose to use Lambda in pacman.py</strong></p>\r\n<p>Using lambda allows you to define these small, one-time-use functions\r\ninline without needing to define separate named functions for each key\r\npress. It keeps the code concise and readable.</p>\r\n<h2 id=\"dot.\">Dot(.)</h2>\r\n<p>In pacman.py, I've noticed lots of dots. Let's discuss the function\r\nof these dots and summarize dots' different functions in Python.</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change</span>(<span class=\"params\">x,y</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Change the direction of the pacman&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> valid(pacman + vector(x,y)):</span><br><span class=\"line\">        aim.x = x</span><br><span class=\"line\">        aim.y = y</span><br></pre></td></tr></table></figure>\r\n<p>The dot(.) in aim.x is used to access an attribute or method of an\r\nobject in Python. In this case, aim is an instance of the vector class,\r\nand x is one of its attributes. The dot allows you to access or modify\r\nthe value of x within the aim object.</p>\r\n<p>General use of the dot(.) in Python:</p>\r\n<ul>\r\n<li><strong>Accessing Attributes:</strong>\r\n<ul>\r\n<li>Example: aim.x accesses the x attribute of the aim object.</li>\r\n<li>Example: writer.color access the color method of the writer\r\nobject</li>\r\n</ul></li>\r\n<li><strong>Calling Methods:</strong>\r\n<ul>\r\n<li>Example: writer.goto(160,160) calls the goto method of the writer\r\nobject</li>\r\n</ul></li>\r\n<li><strong>Accessing Modules or Classes:</strong>\r\n<ul>\r\n<li>Example: random.choice accesses the choice function from the random\r\nmodule.</li>\r\n</ul></li>\r\n</ul>\r\n<p>All in all, the dot(.) always serves the same purpose: <strong>to\r\naccess an attribute or method of an object</strong>, the specific\r\nbehavior depends on the object being accassed.</p>\r\n","categories":["CS learning"],"tags":["python"]},{"title":"Neo4j知识图谱","url":"/2024/04/12/Neo4j%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E8%BF%9B%E5%B1%95/","content":"<h1 id=\"目标任务\">1、目标任务</h1>\r\n<p>完成有100个节点的知识图谱绘制</p>\r\n<h1 id=\"选题\">2、选题</h1>\r\n<p>考研数学知识点</p>\r\n<h1 id=\"进度\">3、进度</h1>\r\n<p>61个节点</p>\r\n<h1 id=\"tips\">4、tips</h1>\r\n<h2\r\nid=\"可以使用python进行批量节点关系绘制还未细究已更新\">4.1、可以使用python进行批量节点关系绘制（还未细究）（已更新）</h2>\r\n<p>可以细究为利用导入数据，编程等方法批量导入生成数据，减少建立节点的工作量和错误率。\r\n在仔细阅读教程后发现，使用python只是因为使用者对python足够熟悉，并且python有插件可以支持neo4j的知识图谱的搭建，批量导入并不是一定需要python。</p>\r\n<h2\r\nid=\"在绘制节点时要注意不要出现同名节点\">4.2、在绘制节点时要注意不要出现同名节点</h2>\r\n<p>目前发现在第三章和第四章有同名的节点，导致直接生成了一个横跨两个章节的关系，并且由于Neo4j的自增设置，无法在原节点上更改关系，于是出现了节点和关系的冗余。</p>\r\n<p>收尾时要记得删除多余关系。</p>\r\n<h2 id=\"手动输入的缺点\">4.3、手动输入的缺点</h2>\r\n<p>适合数量较少的情况，数量超过30个很容易搞混。</p>\r\n<h1 id=\"目标进度\">5、目标进度</h1>\r\n<p>周内基本完成绘制。</p>\r\n<hr />\r\n<p>更新于2024/4/13 # --完成知识图谱绘制 ## --问题</p>\r\n<p>在绘制时出现了同名节点，关系变得很乱，手动删除又十分麻烦（生气</p>\r\n<hr />\r\n<p>更新于2024/4/14</p>\r\n<h1 id=\"neo4j本身的发掘\">neo4j本身的发掘</h1>\r\n<p>在查找neo4j操作时，找到了官网上的操作指南。事实上，在绘制过程中用到的过程不及其功能的百分之一。固然人工或半人工的构建模式是它最大的短板，它本身的功能和用途也不应该因为这个缺点而被忽视。</p>\r\n<h1 id=\"知识图谱的发掘\">知识图谱的发掘</h1>\r\n<p>在查找最新的知识图谱的相关文献时，发现知识图谱因为它的直观的特点，在近一个月就有不同领域的对知识图谱的应用技术的开发，包括但不限于趋势预测，风险分析，安全决策，资源配置等，甚至看到了水电站发电量的优化处理。可见目前所看到的优化理论知识只是优化算法的冰山一角，lp的观点没有问题，但水文这座陈旧的大厦依然需要CS来注入足够新鲜的血液。</p>\r\n<hr />\r\n<p>OVER</p>\r\n","categories":["CS learning"],"tags":["application"]},{"title":"NumPy+Pandas+Matplotlib学习","url":"/2024/12/29/NumPy-Pandas-Matplotlib%E5%AD%A6%E4%B9%A0/","content":"<h1 id=\"numpy基础\">NumPy基础</h1>\r\n<h2 id=\"numpy几个重要定义\">NumPy几个重要定义</h2>\r\n<ul>\r\n<li>axis:维度</li>\r\n<li>rank:维度数</li>\r\n<li>shape:各维度的元素数</li>\r\n<li>size:数组内所有元素的数量</li>\r\n</ul>\r\n<h2 id=\"创建数组\">创建数组</h2>\r\n<p>1、创建一个自定义大小和内容的数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">np_array = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]])</span><br></pre></td></tr></table></figure></p>\r\n<p>2、创建一个全为0的1*5的数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">zero_array = np.zeros((<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>3、创建一个全为1的4*4的数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">one_array = np.ones((<span class=\"number\">4</span>,<span class=\"number\">4</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>4、创建全为一个数的3*3数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">full_array = np.full((<span class=\"number\">3</span>,<span class=\"number\">3</span>),<span class=\"number\">7</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>5、创建一个空的2*3数组，数组值来自内存任意数 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">empty_array = np.empty((<span class=\"number\">2</span>,<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>6、改变输出数组的形状 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>]])</span><br><span class=\"line\">y = np.reshape(x,(<span class=\"number\">3</span>,<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>7、将数组读取改为一维 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">z = y.rival()</span><br></pre></td></tr></table></figure></p>\r\n<p>注意，以上两种方法只是改变了数组的输出方式，并没有复制成为新的数组，如果改变y、z的内容，x内容也会相应改变。</p>\r\n<p>8、复制数组到新的数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array3 = array1.copy()</span><br></pre></td></tr></table></figure></p>\r\n<p>9、生成(0,1)随机数 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">random_array = np.random.random((<span class=\"number\">5</span>,<span class=\"number\">5</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>10、生成整数随机数 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand1 = np.random.randint(<span class=\"number\">100</span>,size=(<span class=\"number\">5</span>,<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure></p>\r\n<p>11、生成服从正态分布的随机数 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand3 = np.random.randn(<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>12、生成4维单位矩阵 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">eye_array = np.eye(<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>13、生成1-5的等差数列 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.arange(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>14、生成规定步长的等差数列 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.arange(<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">0.5</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>15、平均分(0,5)区间 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure></p>\r\n<p>16、自定义函数处理数组 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_function</span>(<span class=\"params\">z,y,x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x*y+z</span><br><span class=\"line\"></span><br><span class=\"line\">array = np.fromfunction(my_function,(<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">10</span>))</span><br></pre></td></tr></table></figure></p>\r\n<h2 id=\"索引\">索引</h2>\r\n<p>1、二维数组索引 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[<span class=\"number\">0</span>,<span class=\"number\">2</span>])</span><br><span class=\"line\">matrix1[<span class=\"number\">0</span>,<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[[<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>],[<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1[(<span class=\"number\">0</span>,<span class=\"number\">2</span>),<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br></pre></td></tr></table></figure></p>\r\n<p>2、高维数组索引 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix_3d = np.arange(<span class=\"number\">80</span>).reshape(<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">2</span>,...])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">0</span>,<span class=\"number\">2</span>,...])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">3</span>,...,<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix_3d[<span class=\"number\">3</span>,:,<span class=\"number\">2</span>])</span><br></pre></td></tr></table></figure></p>\r\n<p>3、布尔索引 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix3 = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>],[<span class=\"number\">5</span>,<span class=\"number\">6</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3)</span><br><span class=\"line\">bool_idx = (matrix3 &gt; <span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(bool_idx)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3[bool_idx])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix3%<span class=\"number\">2</span> == <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">matrix4 = np.arange(<span class=\"number\">36</span>).reshape(<span class=\"number\">3</span>,<span class=\"number\">12</span>)</span><br><span class=\"line\">rows_on = [<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>]</span><br><span class=\"line\">cols_on = [<span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>, <span class=\"literal\">True</span>, <span class=\"literal\">False</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix4[np.ix_(rows_on,cols_on)])</span><br></pre></td></tr></table></figure></p>\r\n<p>4、提取数组元素 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">two_dimensional_list = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> two_dimensional_list:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> two_dimensional_list:</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(row)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> column <span class=\"keyword\">in</span> two_dimensional_list.T:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(column)</span><br><span class=\"line\"></span><br><span class=\"line\">three_dimentiional_list = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]], [[<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>], [<span class=\"number\">13</span>, <span class=\"number\">14</span>, <span class=\"number\">15</span>], [<span class=\"number\">16</span>, <span class=\"number\">17</span>, <span class=\"number\">18</span>]]])</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> three_dimentiional_list.flat:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> three_dimentiional_list:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br></pre></td></tr></table></figure></p>\r\n<h2 id=\"数学函数统计线性代数\">数学函数、统计、线性代数</h2>\r\n<p>1、Arithmetic operations:+ - * / // % **</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]])</span><br><span class=\"line\">matrix2 = np.array([[<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.add(matrix1, matrix2)) <span class=\"comment\"># 求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.subtract(matrix1, matrix2)) <span class=\"comment\"># 求差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.multiply(matrix1, matrix2)) <span class=\"comment\"># 求积</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.floor_divide(matrix1, matrix2)) <span class=\"comment\"># 除</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.power(matrix1, matrix2)) <span class=\"comment\"># 乘方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mod(matrix1, matrix2)) <span class=\"comment\"># 取余</span></span><br></pre></td></tr></table></figure>\r\n<p>2、function</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand_matrix = np.array([[<span class=\"number\">20</span>,<span class=\"number\">15.4</span>,-<span class=\"number\">12.8</span>,-<span class=\"number\">1.1</span>,-<span class=\"number\">8.8</span>],[-<span class=\"number\">18.3</span>,-<span class=\"number\">19.6</span>,<span class=\"number\">20.2</span>,-<span class=\"number\">15.5</span>,<span class=\"number\">43.1</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.isnan(rand_matrix)) <span class=\"comment\"># 判断是否为nan</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sign(rand_matrix)) <span class=\"comment\"># 判断正负</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.nonzero(rand_matrix)) <span class=\"comment\"># 判断是否为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.ceil(rand_matrix)) <span class=\"comment\"># 向上取整</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.cumsum(rand_matrix)) <span class=\"comment\"># 累加</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.diff(rand_matrix)) <span class=\"comment\"># 累差</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sqrt(rand_matrix)) <span class=\"comment\"># 开方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.square(rand_matrix)) <span class=\"comment\"># 平方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sin(rand_matrix)) <span class=\"comment\"># 正弦</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sort(rand_matrix)) <span class=\"comment\"># 排序</span></span><br></pre></td></tr></table></figure>\r\n<p>3、统计</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix = np.arange(-<span class=\"number\">5</span>,<span class=\"number\">5</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix.mean()) <span class=\"comment\"># 求平均值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.median(matrix)) <span class=\"comment\"># 求中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.argmax(matrix)) <span class=\"comment\"># 求最大值的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.argmin(matrix)) <span class=\"comment\"># 求最小值的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix)) <span class=\"comment\"># 求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">abs</span>(matrix)) <span class=\"comment\"># 求绝对值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">max</span>(matrix)) <span class=\"comment\"># 求最大值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix,axis=<span class=\"number\">0</span>)) <span class=\"comment\"># 求每一列的和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(matrix,axis=<span class=\"number\">1</span>)) <span class=\"comment\"># 求每一行的和</span></span><br></pre></td></tr></table></figure>\r\n<p>4、线性代数</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">matrix1 = np.arange(<span class=\"number\">16</span>).reshape(<span class=\"number\">4</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">matrix2 = np.arange(<span class=\"number\">8</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1.T) <span class=\"comment\"># 转置</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(matrix1.dot(matrix2.T)) <span class=\"comment\"># 矩阵乘法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.linalg.inv(matrix1)) <span class=\"comment\"># 逆矩阵</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.linalg.det(matrix1)) <span class=\"comment\"># 行列式</span></span><br><span class=\"line\">eigenvalues, eigenvectors = np.linalg.eig(matrix1) <span class=\"comment\"># 特征值和特征向量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(eigenvalues)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(eigenvectors)</span><br></pre></td></tr></table></figure>\r\n<p>5、求解线性方程</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">coeffs = np.array([[<span class=\"number\">2</span>,<span class=\"number\">6</span>],[<span class=\"number\">5</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 系数矩阵</span></span><br><span class=\"line\">depvars = np.array([<span class=\"number\">6</span>,-<span class=\"number\">9</span>]) <span class=\"comment\"># 常数项</span></span><br><span class=\"line\">solution = np.linalg.solve(coeffs,depvars) <span class=\"comment\"># 解方程</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(solution)</span><br></pre></td></tr></table></figure>\r\n<h2 id=\"合并分割广播\">合并、分割、广播</h2>\r\n<p>1、交换维度 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">m1 = np.ones((<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.transpose(m1,(<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>))) <span class=\"comment\"># 交换维度</span></span><br><span class=\"line\">m2 = np.ones((<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.transpose(m2)) <span class=\"comment\"># 交换维度</span></span><br><span class=\"line\">m3 = m2.swapaxes(<span class=\"number\">1</span>,<span class=\"number\">2</span>) <span class=\"comment\"># 交换维度</span></span><br></pre></td></tr></table></figure></p>\r\n<p>2、合并 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">array1 = np.full((<span class=\"number\">1</span>,<span class=\"number\">5</span>),<span class=\"number\">1.0</span>)</span><br><span class=\"line\">array2 = np.full((<span class=\"number\">1</span>,<span class=\"number\">5</span>),<span class=\"number\">2.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">stake_array = np.vstack((array1,array2)) <span class=\"comment\"># 垂直堆叠数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.hstack((array1,array2)) <span class=\"comment\"># 水平堆叠数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.concatenate((array1,array2),axis=<span class=\"number\">0</span>) <span class=\"comment\"># 按行堆叠数组（同vstack）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.concatenate((array1,array2),axis=<span class=\"number\">1</span>) <span class=\"comment\"># 按列堆叠数组（同hstack）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br><span class=\"line\">stake_array = np.stack((array1,array2)) <span class=\"comment\">#沿新轴合并数组，保持两矩阵形状相同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(stake_array)</span><br></pre></td></tr></table></figure></p>\r\n<p>3、分割 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">big_matrix = np.arange(<span class=\"number\">36</span>).reshape(<span class=\"number\">9</span>,<span class=\"number\">4</span>)</span><br><span class=\"line\">m1,m2,m3 = np.vsplit(big_matrix,<span class=\"number\">3</span>) <span class=\"comment\"># 垂直分割(按行分割)</span></span><br><span class=\"line\">m4,m5 = np.hsplit(big_matrix,<span class=\"number\">2</span>) <span class=\"comment\"># 水平分割(按列分割)</span></span><br><span class=\"line\"></span><br><span class=\"line\">m1 = np.arange(<span class=\"number\">4</span>)</span><br><span class=\"line\">m2 = np.tile(m1,(<span class=\"number\">4</span>,<span class=\"number\">1</span>)) <span class=\"comment\">#第一个维度重复4次，第二个维度重复1次</span></span><br></pre></td></tr></table></figure></p>\r\n<p>4、广播\r\n广播的前提：两个数组必须可以转化成维度大小一样的数组才能进行计算 -\r\n规则1、如果两个数组维度不同，那么小维度数组的形状将在最左边补1 -\r\n规则2、如果两个数组的形状在任何一个维度上都不匹配，那么数组的形状会沿着维度为1的维度扩展，匹配另一个数组的形状\r\n-\r\n规则3、如果两个数组在任何一个维度上都不匹配且没有一个维度为1，则发生异常</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">m2 = np.arange(<span class=\"number\">6</span>).reshape(<span class=\"number\">2</span>,<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+[[<span class=\"number\">10</span>],[<span class=\"number\">20</span>]])  <span class=\"comment\"># 扩展为[[10,10,10],[20,20,20]]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+[<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>]) <span class=\"comment\"># 扩展为[[10,20,30],[10,20,30]]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(m2+<span class=\"number\">10</span>) <span class=\"comment\">#扩展为[[10,10,10],[10,10,10]]</span></span><br><span class=\"line\"></span><br><span class=\"line\">m3 = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]])</span><br><span class=\"line\">m4 = np.array([<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m3+m4) <span class=\"comment\"># 扩展为4行3列，然后相加</span></span><br></pre></td></tr></table></figure>\r\n<h1 id=\"pandas基础\">Pandas基础</h1>\r\n<h2 id=\"series和dataframe\">Series和DataFrame</h2>\r\n<p>1、Seires <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">random_items = np.random.randint(<span class=\"number\">25</span>,size=<span class=\"number\">10</span>)    <span class=\"comment\"># 生成10个0-25之间的随机数</span></span><br><span class=\"line\">series_data = pd.Series(random_items)   <span class=\"comment\"># 将随机数转换为Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(series_data[<span class=\"number\">0</span>])   <span class=\"comment\"># 输出第一个元素</span></span><br><span class=\"line\"></span><br><span class=\"line\">letter_index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;f&#x27;</span>,<span class=\"string\">&#x27;g&#x27;</span>,<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;i&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>]    <span class=\"comment\"># 生成索引</span></span><br><span class=\"line\">new_series = pd.Series(random_items,index=letter_index)  <span class=\"comment\"># 将随机数转换为Series对象，并指定索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(new_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">data_dict = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>,<span class=\"string\">&#x27;b&#x27;</span>:<span class=\"number\">2</span>,<span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>,<span class=\"string\">&#x27;d&#x27;</span>:<span class=\"number\">4</span>,<span class=\"string\">&#x27;e&#x27;</span>:<span class=\"number\">5</span>&#125;    <span class=\"comment\"># 生成字典</span></span><br><span class=\"line\">dict_series = pd.Series(data_dict)   <span class=\"comment\"># 将字典转换为Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\">dict_series = pd.Series(data_dict,name = <span class=\"string\">&#x27;series_name&#x27;</span>)   <span class=\"comment\"># 将字典转换为Series对象，并指定名称</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\">dict_series = dict_series.rename(<span class=\"string\">&#x27;new_name&#x27;</span>)   <span class=\"comment\"># 重命名Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series)   <span class=\"comment\"># 输出Series对象</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series.median())   <span class=\"comment\"># 输出Series对象的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_series&gt;dict_series.median())   <span class=\"comment\"># 输出Series对象中大于中位数的元素</span></span><br></pre></td></tr></table></figure></p>\r\n<p>2、DataFram <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">d = &#123;<span class=\"string\">&#x27;one&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">     ,<span class=\"string\">&#x27;two&#x27;</span>:[<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>]&#125;  <span class=\"comment\"># 创建一个字典</span></span><br><span class=\"line\">dict_df = pd.DataFrame(d)  <span class=\"comment\"># 将字典转换为数据框</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df[<span class=\"string\">&#x27;one&#x27;</span>])  <span class=\"comment\"># 输出one列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_df.shape)  <span class=\"comment\"># 输出数据框的行数和列数</span></span><br><span class=\"line\"></span><br><span class=\"line\">d_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;one&#x27;</span>:pd.Series([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,],name = <span class=\"string\">&#x27;col_one&#x27;</span>,index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>]),</span><br><span class=\"line\">    <span class=\"string\">&#x27;two&#x27;</span>:pd.Series([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],name = <span class=\"string\">&#x27;col_two&#x27;</span>,index = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;c&#x27;</span>,<span class=\"string\">&#x27;d&#x27;</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">df = pd.DataFrame(d_data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\">new_df = df.reset_index(drop = <span class=\"literal\">True</span>)    <span class=\"comment\"># drop = True 丢弃原来的索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(new_df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\">df.reset_index(drop = <span class=\"literal\">True</span>,inplace = <span class=\"literal\">True</span>)   <span class=\"comment\"># drop = True 丢弃原来的索引</span></span><br><span class=\"line\">df.reset_index(drop = <span class=\"literal\">False</span>,inplace = <span class=\"literal\">True</span>) <span class=\"comment\"># drop = False 保留原来的索引</span></span><br></pre></td></tr></table></figure> 3、大型表格索引 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.columns) <span class=\"comment\"># 查看列名</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head(<span class=\"number\">3</span>)) <span class=\"comment\"># 查看前3行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head())  <span class=\"comment\"># 查看前5行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.tail())  <span class=\"comment\"># 查看后5行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[<span class=\"string\">&#x27;Region&#x27;</span>]) <span class=\"comment\"># 查看Region列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Country&#x27;</span>]]) <span class=\"comment\"># 查看Region和Country列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[<span class=\"number\">100</span>]) <span class=\"comment\"># 查看行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[[<span class=\"number\">2</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 查看多行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.iloc[[<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">0</span>,<span class=\"number\">3</span>]]) <span class=\"comment\"># 查看多行多列</span></span><br><span class=\"line\">country_info[<span class=\"string\">&#x27;Country&#x27;</span>] = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.strip() <span class=\"comment\"># 去除头和尾的空格</span></span><br><span class=\"line\">country_info.set_index([<span class=\"string\">&#x27;Country&#x27;</span>],drop=<span class=\"literal\">True</span>,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 设置Country为索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[<span class=\"string\">&#x27;China&#x27;</span>]) <span class=\"comment\"># 查看China行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[[<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>]]) <span class=\"comment\"># 查看China和India行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[[<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>],[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 查看China和India行的Region和Population列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[<span class=\"string\">&#x27;China&#x27;</span>:<span class=\"string\">&#x27;India&#x27;</span>,<span class=\"string\">&#x27;Region&#x27;</span>:<span class=\"string\">&#x27;Deathrate&#x27;</span>]) <span class=\"comment\"># 查看China到India行</span></span><br></pre></td></tr></table></figure></p>\r\n<ul>\r\n<li>HOMEWORK</li>\r\n</ul>\r\n<p>使用read_csv获取country数据，读取前十行的数据，只选取Country、Birthrate和Service，将其中的数据变成DataFrame,并使用to_csv函数将结果存到本地的country.csv文件中。\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.head(<span class=\"number\">10</span>))    <span class=\"comment\">#查看前10行数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Birthrate&#x27;</span>,<span class=\"string\">&#x27;Service&#x27;</span>]])  <span class=\"comment\">#提取数据</span></span><br><span class=\"line\">df_country = pd.DataFrame(country_info[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Birthrate&#x27;</span>,<span class=\"string\">&#x27;Service&#x27;</span>]])  <span class=\"comment\">#提取数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(df_country)</span><br><span class=\"line\">df_country.to_csv(<span class=\"string\">&#x27;D:\\Downloads\\country.csv&#x27;</span>,index=<span class=\"literal\">False</span>) <span class=\"comment\">#保存数据但不保存索引</span></span><br></pre></td></tr></table></figure></p>\r\n<h2 id=\"filtering\">Filtering</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">country_info= pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\country.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] ==<span class=\"string\">&#x27;0&#x27;</span>)  <span class=\"comment\"># 选出净移民为0的国家</span></span><br><span class=\"line\">zero_migration_filter = (country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] ==<span class=\"string\">&#x27;0&#x27;</span>) <span class=\"comment\"># 选出净移民为0的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info[zero_migration_filter]) <span class=\"comment\"># 输出净移民为0的国家</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[zero_migration_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;Net migration&#x27;</span>]]) <span class=\"comment\"># 输出净移民为0的国家的地区、国家名和净移民数</span></span><br><span class=\"line\">low_migration_filter = (country_info[<span class=\"string\">&#x27;Net migration&#x27;</span>] &lt;<span class=\"string\">&#x27;100&#x27;</span>) <span class=\"comment\"># 选出净移民小于100的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[low_migration_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出净移民小于100的国家的地区和人口数</span></span><br><span class=\"line\">and_filter = (country_info[<span class=\"string\">&#x27;Deathrate&#x27;</span>]&gt;<span class=\"string\">&#x27;1000&#x27;</span>)&amp;(country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&lt;<span class=\"number\">10000</span>) <span class=\"comment\"># 选出死亡率大于1000且人口小于10000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[and_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出死亡率大于1000且人口小于10000的国家的地区和人口数</span></span><br><span class=\"line\">or_filter = (country_info[<span class=\"string\">&#x27;Deathrate&#x27;</span>]&gt;<span class=\"string\">&#x27;1000&#x27;</span>)|(country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&lt;<span class=\"number\">10000</span>) <span class=\"comment\"># 选出死亡率大于1000或人口小于10000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[or_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出死亡率大于1000或人口小于10000的国家的地区和人口数</span></span><br><span class=\"line\">population_filter = (country_info[<span class=\"string\">&#x27;Population&#x27;</span>]&gt;<span class=\"number\">100000</span>) <span class=\"comment\"># 选出人口大于100000的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[~population_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出人口不大于100000的国家的地区和人口数</span></span><br><span class=\"line\"></span><br><span class=\"line\">countries = [<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;Japan&#x27;</span>,<span class=\"string\">&#x27;United States&#x27;</span>,<span class=\"string\">&#x27;Russia&#x27;</span>,<span class=\"string\">&#x27;India&#x27;</span>] <span class=\"comment\"># 选出中国、日本、美国、俄罗斯和印度的数据</span></span><br><span class=\"line\">infilter = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].isin(countries) <span class=\"comment\"># 选出中国、日本、美国、俄罗斯和印度的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[infilter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出中国、日本、美国、俄罗斯和印度的地区和人口数</span></span><br><span class=\"line\">str_filter = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;A&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[~str_filter,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中不包含字母“A”的国家的地区和人口数</span></span><br><span class=\"line\">str_filter2 = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;A|Z&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”或“Z”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[str_filter2,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中包含字母“A”或“Z”的国家的地区和人口数</span></span><br><span class=\"line\">str_filter3 = country_info[<span class=\"string\">&#x27;Country&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&quot;[a-m]&quot;</span>) <span class=\"comment\"># 选出国家名中包含字母“A”到“M”的国家</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_info.loc[str_filter3,[<span class=\"string\">&#x27;Region&#x27;</span>,<span class=\"string\">&#x27;Population&#x27;</span>]]) <span class=\"comment\"># 输出国家名中包含字母“A”到“M”的国家的地区和人口数</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"排序和增删查改\">排序和增删查改</h2>\r\n<p>1、排序搜索 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.set_index(<span class=\"string\">&#x27;Respondent&#x27;</span>, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将Respondent列设置为索引列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_index()) <span class=\"comment\"># 按照索引列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=<span class=\"string\">&#x27;Age&#x27;</span>,ascending = <span class=\"literal\">False</span>)) <span class=\"comment\"># 按照Age列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>],ascending = [<span class=\"literal\">False</span>,<span class=\"literal\">True</span>])[[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>]]) <span class=\"comment\"># 按照Age列排序，如果Age相同，按照YearsCode列排序</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.sort_values(by=[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>],ascending = [<span class=\"number\">0</span>,<span class=\"number\">1</span>])[[<span class=\"string\">&#x27;Age&#x27;</span>,<span class=\"string\">&#x27;YearsCode&#x27;</span>]]) <span class=\"comment\"># 按照Age列排序，如果Age相同，按照YearsCode列排序，显示前10行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Age&#x27;</span>].sort_values())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].nlargest(<span class=\"number\">10</span>)) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].nsmallest(<span class=\"number\">10</span>)) <span class=\"comment\"># 找出ConvertedComp列中最小的10个值</span></span><br><span class=\"line\">richest_users = survey_df.nlargest(<span class=\"number\">10</span>,<span class=\"string\">&#x27;ConvertedComp&#x27;</span>) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值，并显示所有列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(richest_users[[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>,<span class=\"string\">&#x27;DevType&#x27;</span>,<span class=\"string\">&#x27;EdLevel&#x27;</span>]]) <span class=\"comment\"># 找出ConvertedComp列中最大的10个值，并显示ConvertedComp和DevType列</span></span><br></pre></td></tr></table></figure></p>\r\n<p>2、增删改查</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> col_name,col_data <span class=\"keyword\">in</span> survey_df.items(): <span class=\"comment\"># 遍历所有列</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col_name)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col_data)</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> row_index,row_data <span class=\"keyword\">in</span> survey_df.iterrows(): <span class=\"comment\"># 遍历所有行</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(row_index)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(row_data)</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">inversed_df = pd.DataFrame(&#123;idx:values <span class=\"keyword\">for</span> idx,values <span class=\"keyword\">in</span> survey_df.items()&#125;) <span class=\"comment\"># 转置</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(inversed_df.shape)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.rename(columns = &#123;<span class=\"string\">&#x27;Age&#x27;</span>:<span class=\"string\">&#x27;user age&#x27;</span>,<span class=\"string\">&#x27;Orgsize&#x27;</span>:<span class=\"string\">&#x27;organization size&#x27;</span>&#125;,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 重命名列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.columns = survey_df.columns.<span class=\"built_in\">str</span>.replace(<span class=\"string\">&#x27; &#x27;</span>,<span class=\"string\">&#x27;_&#x27;</span>) <span class=\"comment\"># 替换列名中的空格</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.columns = [col.lower() <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> survey_df.columns] <span class=\"comment\"># 将列名转换为小写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.columns)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.lower()) <span class=\"comment\"># 将列中的字符串转换为小写</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[<span class=\"number\">2</span>,<span class=\"string\">&#x27;trans&#x27;</span>] = <span class=\"string\">&#x27;Yes&#x27;</span> <span class=\"comment\"># 修改指定位置的值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[<span class=\"number\">2</span>,[<span class=\"string\">&#x27;trans&#x27;</span>,<span class=\"string\">&#x27;user_age&#x27;</span>,<span class=\"string\">&#x27;country&#x27;</span>]] = [<span class=\"string\">&#x27;Yes&#x27;</span>,<span class=\"number\">29</span>,<span class=\"string\">&#x27;China&#x27;</span>] <span class=\"comment\"># 修改指定位置的值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">18</span>,[<span class=\"string\">&#x27;age_group&#x27;</span>]] = <span class=\"string\">&#x27;young&#x27;</span> <span class=\"comment\"># 根据条件修改值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">18</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&gt;=<span class=\"number\">18</span>,[<span class=\"string\">&#x27;age_group&#x27;</span>]] = <span class=\"string\">&#x27;adult&#x27;</span> <span class=\"comment\"># 根据条件修改值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&gt;=<span class=\"number\">18</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;gen_col&#x27;</span>]=survey_df[<span class=\"string\">&#x27;gender&#x27;</span>]+survey_df[<span class=\"string\">&#x27;sexuality&#x27;</span>]+survey_df[<span class=\"string\">&#x27;trans&#x27;</span>] <span class=\"comment\"># 新增列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;gen_col&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;job_factors&#x27;</span>]=survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;job_factors&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[[<span class=\"string\">&#x27;job-fac1&#x27;</span>,<span class=\"string\">&#x27;job-fac2&#x27;</span>,<span class=\"string\">&#x27;job-fac3&#x27;</span>]] = survey_df[<span class=\"string\">&#x27;jobfactors&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>,expand=<span class=\"literal\">True</span>) <span class=\"comment\"># 将列中的字符串按指定字符分割</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[[<span class=\"string\">&#x27;job-fac1&#x27;</span>,<span class=\"string\">&#x27;job-fac2&#x27;</span>,<span class=\"string\">&#x27;job-fac3&#x27;</span>]]) <span class=\"comment\"># 将列中的字符串按指定字符分割</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df._append(&#123;<span class=\"string\">&#x27;user_age&#x27;</span>:<span class=\"number\">30</span>,<span class=\"string\">&#x27;country&#x27;</span>:<span class=\"string\">&#x27;China&#x27;</span>&#125;,ignore_index=<span class=\"literal\">True</span>) <span class=\"comment\"># 添加行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df)</span><br><span class=\"line\"></span><br><span class=\"line\">new_survey=&#123;<span class=\"string\">&#x27;user_age&#x27;</span>:<span class=\"number\">25</span>,<span class=\"string\">&#x27;country&#x27;</span>:<span class=\"string\">&#x27;China&#x27;</span>,<span class=\"string\">&#x27;age1stcode&#x27;</span>:<span class=\"number\">24</span>&#125;</span><br><span class=\"line\">new_survey_df = pd.DataFrame(new_survey,index=[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df._append(new_survey_df,ignore_index=<span class=\"literal\">True</span>,sort=<span class=\"literal\">False</span>)) <span class=\"comment\"># 添加行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(columns=[<span class=\"string\">&#x27;soaccount&#x27;</span>],inplace=<span class=\"literal\">True</span>))<span class=\"comment\"># 删除列</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(index=<span class=\"number\">4</span>))<span class=\"comment\"># 删除行</span></span><br><span class=\"line\"></span><br><span class=\"line\">age_filter = survey_df[<span class=\"string\">&#x27;user_age&#x27;</span>]&lt;<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.drop(index=survey_df[age_filter].index))<span class=\"comment\"># 删除指定条件行</span></span><br></pre></td></tr></table></figure>\r\n<p>3、apply,map,applymap,replace</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\">dtypes = survey_df.dtypes <span class=\"comment\"># 获取数据类型</span></span><br><span class=\"line\">str_cols=[col_name <span class=\"keyword\">for</span> col_name <span class=\"keyword\">in</span> dtypes.index <span class=\"keyword\">if</span> dtypes[col_name]==<span class=\"string\">&#x27;object&#x27;</span>] <span class=\"comment\"># 获取字符串类型的列名</span></span><br><span class=\"line\">survey_df[str_cols]=survey_df[str_cols].astype(<span class=\"built_in\">str</span>) <span class=\"comment\"># 将字符串类型的列转换为字符串类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(<span class=\"built_in\">len</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">upper_case</span>(<span class=\"params\">col_value</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> col_value.upper()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(upper_case)) <span class=\"comment\"># 将hobbyist列的值转换为大写</span></span><br><span class=\"line\"></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>] = survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x: x.upper()) <span class=\"comment\"># 将hobbyist列的值转换为大写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.apply(<span class=\"built_in\">len</span>,axis=<span class=\"string\">&#x27;columns&#x27;</span>)) <span class=\"comment\"># 计算每行的长度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.apply(<span class=\"keyword\">lambda</span> x:x.<span class=\"built_in\">min</span>())) <span class=\"comment\"># 计算每列的最小值</span></span><br><span class=\"line\">map_dict = &#123;<span class=\"string\">&#x27;YES&#x27;</span>:<span class=\"literal\">True</span>,<span class=\"string\">&#x27;NO&#x27;</span>:<span class=\"literal\">False</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].<span class=\"built_in\">map</span>(map_dict)) <span class=\"comment\"># 将hobbyist列的值转换为布尔值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[str_cols].applymap(<span class=\"built_in\">len</span>)) <span class=\"comment\"># 计算字符串列的长度</span></span><br><span class=\"line\"></span><br><span class=\"line\">map_dict=&#123;<span class=\"string\">&#x27;YES&#x27;</span>:<span class=\"literal\">True</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].replace(map_dict)) <span class=\"comment\"># 将hobbyist列的值转换为布尔值</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"聚合分组数据清理\">聚合、分组、数据清理</h2>\r\n<p>1、聚合、分组</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].median()) <span class=\"comment\"># 显示数据的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].describe()) <span class=\"comment\"># 显示数据的统计信息</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;Hobbyist&#x27;</span>].value_counts(normalize=<span class=\"literal\">True</span>)) <span class=\"comment\"># normalize=True表示显示百分比</span></span><br><span class=\"line\">country_groups=survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]) <span class=\"comment\"># 按国家分组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups.get_group(<span class=\"string\">&#x27;India&#x27;</span>)) <span class=\"comment\"># 获取印度的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).count()) <span class=\"comment\"># 统计各个国家的数据量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).get_group(<span class=\"string\">&#x27;China&#x27;</span>)[<span class=\"string\">&#x27;OpSys&#x27;</span>].value_counts()) <span class=\"comment\"># 获取中国的数据，并统计操作系统的数量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;OpSys&#x27;</span>].value_counts().loc[<span class=\"string\">&#x27;China&#x27;</span>]) <span class=\"comment\"># 获取中国的数据，并统计操作系统的数量</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].median().loc[<span class=\"string\">&#x27;Germany&#x27;</span>]) <span class=\"comment\"># 获取德国的数据，并统计薪资的中位数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups[<span class=\"string\">&#x27;ConvertedComp&#x27;</span>].agg([<span class=\"string\">&#x27;median&#x27;</span>,<span class=\"string\">&#x27;mean&#x27;</span>])) <span class=\"comment\"># 统计薪资的中位数和平均数</span></span><br><span class=\"line\">country_filter = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>] == <span class=\"string\">&#x27;United States&#x27;</span> <span class=\"comment\"># 筛选出美国的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df.loc[country_filter][<span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>].<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;Python&#x27;</span>).<span class=\"built_in\">sum</span>()) <span class=\"comment\"># 统计美国使用Python的人数</span></span><br><span class=\"line\">country_groups = survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>]).<span class=\"built_in\">sum</span>() <span class=\"comment\"># 按国家分组，并求和</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(country_groups) <span class=\"comment\"># 显示各个国家的数据和</span></span><br><span class=\"line\"></span><br><span class=\"line\">country_groups = survey_df.groupby(<span class=\"string\">&#x27;Country&#x27;</span>)</span><br><span class=\"line\">country_users_python = country_groups[<span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x:x.<span class=\"built_in\">str</span>.contains(<span class=\"string\">&#x27;Python&#x27;</span>).<span class=\"built_in\">sum</span>())</span><br><span class=\"line\">country_respondents = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>].value_counts()</span><br><span class=\"line\">concated_df = pd.concat([country_respondents, country_users_python], axis=<span class=\"string\">&#x27;columns&#x27;</span>, sort=<span class=\"literal\">False</span>) <span class=\"comment\"># 合并两个Series</span></span><br><span class=\"line\">concated_df.rename(columns=&#123;<span class=\"string\">&#x27;Country&#x27;</span>:<span class=\"string\">&#x27;NumIfUsers&#x27;</span>, <span class=\"string\">&#x27;LanguageWorkedWith&#x27;</span>:<span class=\"string\">&#x27;NumOfPythonUsers&#x27;</span>&#125;, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 重命名列名</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(concated_df)</span><br></pre></td></tr></table></figure>\r\n<p>2、数据清理 <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">survey_df = pd.read_csv(<span class=\"string\">&quot;D:\\Downloads\\small_survey_results.csv&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna()) <span class=\"comment\"># 删除缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna(axis=<span class=\"string\">&#x27;index&#x27;</span>,how=<span class=\"string\">&#x27;all&#x27;</span>)) <span class=\"comment\"># 删除全为缺失值的行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.dropna(axis=<span class=\"string\">&#x27;index&#x27;</span>,how=<span class=\"string\">&#x27;all&#x27;</span>,subset=[<span class=\"string\">&#x27;CompFreq&#x27;</span>,<span class=\"string\">&#x27;CompTotal&#x27;</span>])) <span class=\"comment\"># 删除CompFreq和CompTotal列全为缺失值的行</span></span><br><span class=\"line\">small_survey_df.replace(<span class=\"string\">&#x27;No&#x27;</span>,np.nan,inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将No替换为缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.isna()) <span class=\"comment\"># 查看缺失值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(small_survey_df.fillna(<span class=\"string\">&#x27;Missing&#x27;</span>)) <span class=\"comment\"># 填充缺失值为missing</span></span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].replace(<span class=\"string\">&#x27;Less than 1 year&#x27;</span>,<span class=\"number\">0</span>,inplace=<span class=\"literal\">True</span>)<span class=\"comment\"># 将Less than 1 year替换为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df)</span><br><span class=\"line\">survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>] = survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].astype(<span class=\"built_in\">float</span>) <span class=\"comment\"># 将YearsCode转换为浮点型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(survey_df[<span class=\"string\">&#x27;YearsCode&#x27;</span>].mean()) <span class=\"comment\"># 计算YearsCode的均值</span></span><br></pre></td></tr></table></figure></p>\r\n<p>3、实际应用</p>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">framework_df = survey_df[<span class=\"string\">&#x27;WebframeWorkedWith&#x27;</span>].<span class=\"built_in\">str</span>.split(<span class=\"string\">&#x27;;&#x27;</span>, expand=<span class=\"literal\">True</span>) <span class=\"comment\"># 拆分数据</span></span><br><span class=\"line\">framework_df.fillna(<span class=\"string\">&#x27;None&#x27;</span>, inplace=<span class=\"literal\">True</span>) <span class=\"comment\"># 将空值填充为None</span></span><br><span class=\"line\">country_groups = survey_df.groupby([<span class=\"string\">&#x27;Country&#x27;</span>] )<span class=\"comment\"># 按国家分组</span></span><br><span class=\"line\">district_frameworks = np.unique(framework_df.values) <span class=\"comment\"># 获取所有的框架</span></span><br><span class=\"line\"></span><br><span class=\"line\">framework_sum_array = []    <span class=\"comment\"># 创建一个空数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> framework <span class=\"keyword\">in</span> district_frameworks:</span><br><span class=\"line\">    new_df = country_groups[<span class=\"string\">&#x27;WebframeWorkedWith&#x27;</span>].apply(<span class=\"keyword\">lambda</span> x: x.<span class=\"built_in\">str</span>.contains(framework).<span class=\"built_in\">sum</span>()) <span class=\"comment\"># 计算每个国家的框架数量</span></span><br><span class=\"line\">    new_df.name = framework</span><br><span class=\"line\">    framework_sum_array.append(new_df)</span><br><span class=\"line\"></span><br><span class=\"line\">user_count = survey_df[<span class=\"string\">&#x27;Country&#x27;</span>].value_counts() <span class=\"comment\"># 计算每个国家的用户数量</span></span><br><span class=\"line\">concated_df = pd.concat([user_count]+framework_sum_array, axis=<span class=\"string\">&#x27;columns&#x27;</span>) <span class=\"comment\"># 拼接数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(concated_df)</span><br><span class=\"line\"></span><br><span class=\"line\">most_popular_df = concated_df.drop(columns = [<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;None&#x27;</span>]).idxmax(axis=<span class=\"number\">1</span>) <span class=\"comment\"># 获取每个国家最流行的框架</span></span><br><span class=\"line\">most_popular_df.name = <span class=\"string\">&#x27;most_popular_framework&#x27;</span></span><br><span class=\"line\">final_df = concated_df.join(most_popular_df)[[<span class=\"string\">&#x27;Country&#x27;</span>,<span class=\"string\">&#x27;most_popular_framwork&#x27;</span>]] <span class=\"comment\"># 拼接数据</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"横向合并和纵向合并\">横向合并和纵向合并</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">movies = pd.DataFrame(&#123;<span class=\"string\">&#x27;movie_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>],</span><br><span class=\"line\">                       <span class=\"string\">&#x27;title&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t3&#x27;</span>,<span class=\"string\">&#x27;t5&#x27;</span>,<span class=\"string\">&#x27;t7&#x27;</span>],</span><br><span class=\"line\">                       <span class=\"string\">&#x27;description&#x27;</span>:[<span class=\"string\">&#x27;d1&#x27;</span>,<span class=\"string\">&#x27;d2&#x27;</span>,<span class=\"string\">&#x27;d3&#x27;</span>,<span class=\"string\">&#x27;d5&#x27;</span>,<span class=\"string\">&#x27;d7&#x27;</span>]&#125;)</span><br><span class=\"line\">ratings = pd.DataFrame(&#123;<span class=\"string\">&#x27;user_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>,<span class=\"number\">11</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;movie_id&#x27;</span>:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;title&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t3&#x27;</span>,<span class=\"string\">&#x27;t5&#x27;</span>,<span class=\"string\">&#x27;t6&#x27;</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;rating&#x27;</span>:[<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>],</span><br><span class=\"line\">                        <span class=\"string\">&#x27;time&#x27;</span>:[<span class=\"string\">&#x27;t1&#x27;</span>,<span class=\"string\">&#x27;t2&#x27;</span>,<span class=\"string\">&#x27;t4&#x27;</span>,<span class=\"string\">&#x27;t4&#x27;</span>,<span class=\"string\">&#x27;t1&#x27;</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings)) <span class=\"comment\"># 默认是inner join</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>,<span class=\"string\">&#x27;title&#x27;</span>])) <span class=\"comment\"># 指定连接键</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,left_on=<span class=\"string\">&#x27;movie_id&#x27;</span>,right_on=<span class=\"string\">&#x27;user_id&#x27;</span>)) <span class=\"comment\"># 指定左右连接键</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,left_index=<span class=\"literal\">True</span>,right_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 指定左右索引</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>],suffixes=[<span class=\"string\">&#x27;_left&#x27;</span>,<span class=\"string\">&#x27;_right&#x27;</span>]))<span class=\"comment\"># 指定后缀</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.merge(movies,ratings,on=[<span class=\"string\">&#x27;movie_id&#x27;</span>,<span class=\"string\">&#x27;title&#x27;</span>],how=<span class=\"string\">&#x27;outer&#x27;</span>,indicator=<span class=\"string\">&#x27;indicator&#x27;</span>)) <span class=\"comment\"># 指定连接方式</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(movies.join(ratings,on=<span class=\"string\">&#x27;movie_id&#x27;</span>,lsuffix=<span class=\"string\">&#x27;_left&#x27;</span>,rsuffix=<span class=\"string\">&#x27;_right&#x27;</span>)) <span class=\"comment\"># 用join方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings])) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings],ignore_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([movies,ratings],join=<span class=\"string\">&#x27;inner&#x27;</span>,axis=<span class=\"number\">1</span>)) <span class=\"comment\"># 用concat方法连接</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(movies._append([ratings,movies],ignore_index=<span class=\"literal\">True</span>)) <span class=\"comment\"># 用append方法连接</span></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"pandas数据可视化\">Pandas数据可视化</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">usa_city_population = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;population&#x27;</span>: [<span class=\"number\">8175133</span>,<span class=\"number\">3792621</span>,<span class=\"number\">2695598</span>,<span class=\"number\">2100263</span>,<span class=\"number\">19354922</span>],&#125;,index=[<span class=\"string\">&#x27;New York&#x27;</span>,<span class=\"string\">&#x27;Los Angeles&#x27;</span>,<span class=\"string\">&#x27;Chicago&#x27;</span>,<span class=\"string\">&#x27;Houston&#x27;</span>,<span class=\"string\">&#x27;Phoenix&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = usa_city_population.plot.pie(y=<span class=\"string\">&#x27;population&#x27;</span>)    <span class=\"comment\"># 画饼图</span></span><br><span class=\"line\">china_city_population = pd.DataFrame(&#123;<span class=\"string\">&#x27;population&#x27;</span>: [<span class=\"number\">15773658</span>,<span class=\"number\">2180357</span>, <span class=\"number\">1208360</span>, <span class=\"number\">1035837</span>, <span class=\"number\">10039107</span>]&#125;,index=[<span class=\"string\">&#x27;广州&#x27;</span>,<span class=\"string\">&#x27;上海&#x27;</span>,<span class=\"string\">&#x27;北京&#x27;</span>,<span class=\"string\">&#x27;天津&#x27;</span>,<span class=\"string\">&#x27;重庆&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = china_city_population.plot.pie(y=<span class=\"string\">&#x27;population&#x27;</span>,figsize = (<span class=\"number\">5</span>,<span class=\"number\">5</span>))    <span class=\"comment\"># 画饼图</span></span><br><span class=\"line\"></span><br><span class=\"line\">top_city_population = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;uas&#x27;</span>:usa_city_population[<span class=\"string\">&#x27;population&#x27;</span>].values,</span><br><span class=\"line\">    <span class=\"string\">&#x27;china&#x27;</span>:china_city_population[<span class=\"string\">&#x27;population&#x27;</span>].values&#125;,index=[<span class=\"string\">&#x27;top1&#x27;</span>,<span class=\"string\">&#x27;top2&#x27;</span>,<span class=\"string\">&#x27;top3&#x27;</span>,<span class=\"string\">&#x27;top4&#x27;</span>,<span class=\"string\">&#x27;top5&#x27;</span>]) <span class=\"comment\"># 创建数据</span></span><br><span class=\"line\">axs = top_city_population.plot.bar(rot=<span class=\"number\">0</span>)    <span class=\"comment\"># 画柱状图</span></span><br><span class=\"line\">top_city_population.reset_index().plot.bar(x=<span class=\"string\">&#x27;index&#x27;</span>,y=[<span class=\"string\">&#x27;china&#x27;</span>],rot=<span class=\"number\">0</span>)    <span class=\"comment\"># 画柱状图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data=pd.Series(np.random.randn(<span class=\"number\">1000</span>),index=np.arange(<span class=\"number\">1000</span>))</span><br><span class=\"line\">axs = data.cumsum().plot()  <span class=\"comment\"># 画折线图</span></span><br><span class=\"line\">data=pd.DataFrame(np.random.randn(<span class=\"number\">1000</span>,<span class=\"number\">4</span>),index=np.arange(<span class=\"number\">1000</span>),columns=[<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">data=data.cumsum()</span><br><span class=\"line\">data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;B&#x27;</span>,color=<span class=\"string\">&#x27;Green&#x27;</span>,label = <span class=\"string\">&#x27;Class1&#x27;</span>)    <span class=\"comment\"># 画散点图</span></span><br><span class=\"line\">ax1 = data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;B&#x27;</span>,color=<span class=\"string\">&#x27;Green&#x27;</span>,label = <span class=\"string\">&#x27;Class1&#x27;</span>)  <span class=\"comment\"># 画散点图</span></span><br><span class=\"line\">data.plot.scatter(x=<span class=\"string\">&#x27;A&#x27;</span>,y=<span class=\"string\">&#x27;C&#x27;</span>,color=<span class=\"string\">&#x27;Red&#x27;</span>,label = <span class=\"string\">&#x27;Class2&#x27;</span>,ax=ax1)    <span class=\"comment\"># 合并散点图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data.plot.box()    <span class=\"comment\"># 画箱线图</span></span><br><span class=\"line\"></span><br><span class=\"line\">data = np.<span class=\"built_in\">abs</span>(data)</span><br><span class=\"line\">axs = data.plot.area(figsize=(<span class=\"number\">12</span>,<span class=\"number\">4</span>),subplots=<span class=\"literal\">True</span>)    <span class=\"comment\"># 画面积图</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h1 id=\"matplotlib基础\">Matplotlib基础</h1>\r\n<h2 id=\"figure\">figure</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x1 = np.linspace(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">y1 = <span class=\"number\">2</span>*x1</span><br><span class=\"line\">y2 = x1**<span class=\"number\">2</span>-<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">5</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"%22D:\\hexo\\source\\images\\Figure_1.png%22\" alt=\"plot\" />\r\n<figcaption aria-hidden=\"true\">plot</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.plot(x1,y2,color=<span class=\"string\">&quot;green&quot;</span>,linewidth=<span class=\"number\">2</span>,linestyle=<span class=\"string\">&#x27;--&#x27;</span>,label=<span class=\"string\">&#x27;y=x^2-10&#x27;</span>) <span class=\"comment\"># 绘制y=x^2-10曲线</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"%22D:/hexo/source/images/Figure_2.png%22\" alt=\"plot\" />\r\n<figcaption aria-hidden=\"true\">plot</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 画两条曲线</span></span><br><span class=\"line\">fix,axe = plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1,label=<span class=\"string\">&#x27;y=2x&#x27;</span>)</span><br><span class=\"line\">axe.plot(x1,y2,label=<span class=\"string\">&#x27;y=x^2-10&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"%22D:/hexo/source/images/Figure_3.png%22\" alt=\"subplot\" />\r\n<figcaption aria-hidden=\"true\">subplot</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 子图</span></span><br><span class=\"line\">fig=plt.figure()</span><br><span class=\"line\">plot=fig.add_subplot(<span class=\"number\">121</span>) <span class=\"comment\"># 1行2列第1个</span></span><br><span class=\"line\">plot.plot(x1,y1)</span><br><span class=\"line\">plot=fig.add_subplot(<span class=\"number\">122</span>) <span class=\"comment\"># 1行2列第2个</span></span><br><span class=\"line\">plot.plot(x1,y2)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_4.png\" alt=\"subplot\" />\r\n<figcaption aria-hidden=\"true\">subplot</figcaption>\r\n</figure>\r\n<h2 id=\"坐标轴和边框\">坐标轴和边框</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">x1 = np.linspace(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\">y1 = <span class=\"number\">2</span>*x1</span><br><span class=\"line\">y2 = x1**<span class=\"number\">2</span>-<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;Title&quot;</span>,color=<span class=\"string\">&#x27;red&#x27;</span>,fontsize=<span class=\"number\">20</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_5.png\" alt=\"标题\" />\r\n<figcaption aria-hidden=\"true\">标题</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x轴&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;y轴&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_6.png\" alt=\"坐标轴标题\" />\r\n<figcaption aria-hidden=\"true\">坐标轴标题</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.xlim((-<span class=\"number\">2</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">plt.ylim((-<span class=\"number\">5</span>,<span class=\"number\">10</span>))</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.set_xlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">axe.set_ylim(-<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_7.png\" alt=\"限制坐标轴范围\" />\r\n<figcaption aria-hidden=\"true\">限制坐标轴范围</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置刻度线和边框</span></span><br><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.set_xlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">axe.set_ylim(-<span class=\"number\">5</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">axe.set_xticks(np.linspace(-<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)) <span class=\"comment\"># 设置x轴刻度</span></span><br><span class=\"line\">axe.tick_params(direction=<span class=\"string\">&#x27;in&#x27;</span>,length=<span class=\"number\">5</span>,width=<span class=\"number\">2</span>,color=<span class=\"string\">&#x27;b&#x27;</span>) <span class=\"comment\"># 设置刻度线的方向、长度、宽度和颜色</span></span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_8.png\" alt=\"设置刻度线和边框\" />\r\n<figcaption aria-hidden=\"true\">设置刻度线和边框</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig,axe=plt.subplots()</span><br><span class=\"line\">axe.plot(x1,y1)</span><br><span class=\"line\">axe.plot(x1,y2)</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;left&#x27;</span>].set_position((<span class=\"string\">&#x27;axes&#x27;</span>,<span class=\"number\">0.5</span>))</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;bottom&#x27;</span>].set_position((<span class=\"string\">&#x27;axes&#x27;</span>,<span class=\"number\">0.5</span>)) <span class=\"comment\"># 设置坐标轴位置</span></span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;right&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)</span><br><span class=\"line\">axe.spines[<span class=\"string\">&#x27;top&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>) <span class=\"comment\"># 隐藏坐标轴</span></span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_9.png\" alt=\"设置边框\" />\r\n<figcaption aria-hidden=\"true\">设置边框</figcaption>\r\n</figure>\r\n<h2 id=\"图例标注\">图例、标注</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.plot(x1,y1,label=<span class=\"string\">&#x27;y=2x&#x27;</span>)</span><br><span class=\"line\">plt.plot(x1,y2,label=<span class=\"string\">&#x27;y=x^2&#x27;</span>)</span><br><span class=\"line\">plt.legend(loc=<span class=\"number\">0</span>,title=<span class=\"string\">&quot;legend title&quot;</span>,shadow=<span class=\"literal\">True</span>,ncol=<span class=\"number\">2</span>,facecolor=<span class=\"string\">&#x27;gray&#x27;</span>) <span class=\"comment\"># loc=0自动选择最佳位置,设置标题，阴影，两列显示，背景为灰色</span></span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_10.png\" alt=\"设置图例\" />\r\n<figcaption aria-hidden=\"true\">设置图例</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#text无指向性标注</span></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.text(-<span class=\"number\">1</span>,<span class=\"number\">5</span>,<span class=\"string\">&quot;two functions&quot;</span>,family = <span class=\"string\">&quot;Times New Roman&quot;</span>,fontsize = <span class=\"number\">12</span>,style = <span class=\"string\">&quot;italic&quot;</span>,color = <span class=\"string\">&quot;r&quot;</span>,weight = <span class=\"string\">&quot;black&quot;</span>,bbox = <span class=\"built_in\">dict</span>(boxstyle=<span class=\"string\">&quot;round&quot;</span>,facecolor = <span class=\"string\">&quot;none&quot;</span>,ec = <span class=\"string\">&quot;b&quot;</span>)) </span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_10.png\" alt=\"无指向性标注\" />\r\n<figcaption aria-hidden=\"true\">无指向性标注</figcaption>\r\n</figure>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#annotate指向性标注</span></span><br><span class=\"line\">plt.plot(x1,y1)</span><br><span class=\"line\">plt.plot(x1,y2)</span><br><span class=\"line\">plt.annotate(<span class=\"string\">&quot;y=2x&quot;</span>,xy=(<span class=\"number\">1</span>,<span class=\"number\">2</span>),xytext=(<span class=\"number\">2</span>,<span class=\"number\">0</span>),arrowprops=<span class=\"built_in\">dict</span>(arrowstyle=<span class=\"string\">&quot;-&gt;&quot;</span>,linestyle=<span class=\"string\">&quot;--&quot;</span>,connectionstyle=<span class=\"string\">&quot;arc3,rad=.5&quot;</span>),bbox=<span class=\"built_in\">dict</span>(boxstyle=<span class=\"string\">&quot;round,pad=0.5&quot;</span>,fc=<span class=\"string\">&quot;none&quot;</span>,ec=<span class=\"string\">&quot;gray&quot;</span>))    <span class=\"comment\">#xytext是注释的位置，xy是指向的位置</span></span><br></pre></td></tr></table></figure>\r\n<figure>\r\n<img src=\"D:\\hexo\\source\\images\\Figure_11.png\" alt=\"指向性标注\" />\r\n<figcaption aria-hidden=\"true\">指向性标注</figcaption>\r\n</figure>\r\n<h2\r\nid=\"多图合并折线图散点图柱状图直方图面积图堆叠面积图箱型图饼图热力图3d图\">多图合并、折线图、散点图、柱状图、直方图、面积图、堆叠面积图、箱型图、饼图、热力图、3D图</h2>\r\n<h3 id=\"多图合并\">多图合并</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>) <span class=\"comment\"># 将窗口分为2行3列，当前位置为2</span></span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,2&quot;</span>)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,4&quot;</span>)</span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,3,5&quot;</span>)</span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#另一种方法</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">2</span>)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>][<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改高度</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">2</span>, figsize = (<span class=\"number\">10</span>, <span class=\"number\">4</span>)) <span class=\"comment\"># inches (width, height)</span></span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改高度</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows = <span class=\"number\">2</span>, ncols = <span class=\"number\">1</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>].plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制多图</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows=<span class=\"number\">2</span>, ncols=<span class=\"number\">2</span>, figsize=(<span class=\"number\">10</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">axe[<span class=\"number\">0</span>][<span class=\"number\">0</span>].set_title(<span class=\"string\">&quot;1st subplot&quot;</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">1</span>].set_title(<span class=\"string\">&quot;4th subplot&quot;</span>)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>][<span class=\"number\">0</span>].plot([<span class=\"number\">0</span>,<span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改变宽度</span></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,2,1&quot;</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,2,3&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">plt.plot([<span class=\"number\">0</span>, <span class=\"number\">10</span>], [<span class=\"number\">0</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\">plt.title(<span class=\"string\">&quot;2,1,2&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout() <span class=\"comment\"># 紧凑图像</span></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用GridSpec</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.gridspec <span class=\"keyword\">import</span> GridSpec</span><br><span class=\"line\">fig = plt.figure(dpi=<span class=\"number\">100</span>) <span class=\"comment\"># the resolution in dots per inch</span></span><br><span class=\"line\">gs = GridSpec(<span class=\"number\">2</span>, <span class=\"number\">2</span>, width_ratios=[<span class=\"number\">1</span>, <span class=\"number\">2</span>], height_ratios=[<span class=\"number\">3</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">ax1 = fig.add_subplot(gs[<span class=\"number\">0</span>]) <span class=\"comment\">#gs[0,:]表示占据整列,gs[:,0]表示占据整行</span></span><br><span class=\"line\">ax1.text(<span class=\"number\">0.5</span>, <span class=\"number\">0.5</span>, <span class=\"string\">&quot;1st plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax1.plot([<span class=\"number\">0</span>,<span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax2 = fig.add_subplot(gs[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax2.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;2nd plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax3 = fig.add_subplot(gs[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax3.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;3rd plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">ax4 = fig.add_subplot(gs[<span class=\"number\">3</span>])</span><br><span class=\"line\">ax4.text(<span class=\"number\">0.5</span>,<span class=\"number\">0.5</span>,<span class=\"string\">&quot;4th plot&quot;</span>,verticalalignment=<span class=\"string\">&#x27;center&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 图中图</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">3</span>, <span class=\"number\">3</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">y = np.sin(x)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, ax1 = plt.subplots()</span><br><span class=\"line\">ax1.plot(x, y, <span class=\"string\">&#x27;orange&#x27;</span>)</span><br><span class=\"line\">ax1.set_xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">ax1.set_ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">ax1.set_title(<span class=\"string\">&#x27;Big 1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">left, bottom, width, height = <span class=\"number\">0.25</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.2</span></span><br><span class=\"line\">ax2 = fig.add_axes([left, bottom, width, height])</span><br><span class=\"line\">ax2.plot(x, y2, <span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">ax2.set_xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">ax2.set_ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">ax2.set_title(<span class=\"string\">&#x27;small 1&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.axes([<span class=\"number\">0.65</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.25</span>])</span><br><span class=\"line\">plt.plot(x, x ** <span class=\"number\">2</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;y&#x27;</span>)</span><br><span class=\"line\">plt.title(<span class=\"string\">&#x27;small 2&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"折线图\">折线图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#折线图</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">1</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;r&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">&quot;l1&quot;</span>) <span class=\"comment\"># solid line style, red</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">2</span>, linestyle=<span class=\"string\">&#x27;--&#x27;</span>, color=<span class=\"string\">&#x27;y&#x27;</span>, marker=<span class=\"string\">&#x27;s&#x27;</span>, label=<span class=\"string\">&quot;l2&quot;</span>) <span class=\"comment\"># dashed line style, yellow, square</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">3</span>, linestyle=<span class=\"string\">&#x27;-.&#x27;</span>, color=<span class=\"string\">&#x27;m&#x27;</span>, marker=<span class=\"string\">&#x27;|&#x27;</span>, label=<span class=\"string\">&quot;l3&quot;</span>) <span class=\"comment\"># dash-dot line style, magenta, |</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">4</span>, linestyle=<span class=\"string\">&#x27;:&#x27;</span>, color=<span class=\"string\">&#x27;g&#x27;</span>, marker=<span class=\"string\">&#x27;v&#x27;</span>, label=<span class=\"string\">&quot;l4&quot;</span>) <span class=\"comment\"># dotted line style, green</span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;b&#x27;</span>, marker=<span class=\"string\">&#x27;*&#x27;</span>, label=<span class=\"string\">&quot;l5&quot;</span>) <span class=\"comment\"># solid, blue,star </span></span><br><span class=\"line\">axe.plot(x, x + <span class=\"number\">6</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, color=<span class=\"string\">&#x27;c&#x27;</span>, marker=<span class=\"string\">&#x27;o&#x27;</span>, label=<span class=\"string\">&quot;l6&quot;</span>) <span class=\"comment\"># solid, cyan, circle </span></span><br><span class=\"line\">axe.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axe.plot(x, np.sin(x), <span class=\"string\">&#x27;--b&#x27;</span> ,x + <span class=\"number\">1</span>, np.sin(x), <span class=\"string\">&#x27;.r&#x27;</span>) <span class=\"comment\"># dashed line blue, point marker red</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"散点图\">散点图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#散点图</span></span><br><span class=\"line\"><span class=\"comment\"># scatter allows us to control the properties of each individual data point, including size, color, edge color, and more.</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize= (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">rng = np.random.RandomState(<span class=\"number\">66</span>)</span><br><span class=\"line\">x = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">y = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">colors = rng.randn(<span class=\"number\">50</span>)</span><br><span class=\"line\">sizes = rng.randn(<span class=\"number\">50</span>) * <span class=\"number\">500</span></span><br><span class=\"line\">axe.grid()</span><br><span class=\"line\">axe.scatter(x, y, c=colors, s=sizes, alpha=<span class=\"number\">0.5</span>) <span class=\"comment\"># alpha透明度</span></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"柱状图\">柱状图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 柱状对比</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\"></span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.bar(index, values1, width=<span class=\"number\">0.4</span>)</span><br><span class=\"line\">axe.bar(index + <span class=\"number\">0.4</span>, values2, width=<span class=\"number\">0.4</span>)</span><br><span class=\"line\">axe.set_xticks(index+<span class=\"number\">0.15</span>)</span><br><span class=\"line\">axe.set_xticklabels(label)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#柱状总和</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.bar(index, values1)</span><br><span class=\"line\">axe.bar(index, values2, bottom=values1)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#横向柱状总和barh</span></span><br><span class=\"line\">fig, axe = plt.subplots()</span><br><span class=\"line\">label = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\">index = np.arange(<span class=\"built_in\">len</span>(label))</span><br><span class=\"line\">values1 = [<span class=\"number\">100</span>, <span class=\"number\">150</span>, <span class=\"number\">300</span>, <span class=\"number\">220</span>, <span class=\"number\">660</span>, <span class=\"number\">320</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">200</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">800</span>, <span class=\"number\">400</span>]</span><br><span class=\"line\">axe.barh(index, values1)</span><br><span class=\"line\">axe.barh(index, values2, left=values1)</span><br><span class=\"line\">axe.set_yticks(index)</span><br><span class=\"line\">axe.set_yticklabels(label)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"直方图\">直方图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示多个直方图</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">data1 = np.random.normal(-<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">data2 = np.random.normal(-<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">data3 = np.random.normal(-<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">5000</span>)</span><br><span class=\"line\">axe.hist(data1, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data1&quot;</span>)</span><br><span class=\"line\">axe.hist(data2, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data2&quot;</span>)</span><br><span class=\"line\">axe.hist(data3, bins=<span class=\"number\">50</span>, density=<span class=\"literal\">True</span>, alpha=<span class=\"number\">0.35</span>, label=<span class=\"string\">&quot;data3&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">axe.legend()</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#做出外边界曲线</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">sigma = <span class=\"number\">1</span></span><br><span class=\"line\">mu = <span class=\"number\">0</span></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">data = np.random.normal(mu, sigma, <span class=\"number\">5000</span>)</span><br><span class=\"line\">n, bins, _ = axe.hist(data, bins=<span class=\"number\">50</span>, alpha=<span class=\"number\">0.35</span>, density=<span class=\"literal\">True</span>) </span><br><span class=\"line\"><span class=\"comment\"># n: the values of the histogram bins, bins: the edges of the bins</span></span><br><span class=\"line\"></span><br><span class=\"line\">y = ((<span class=\"number\">1</span> / (np.sqrt(<span class=\"number\">2</span> * np.pi) * sigma)) *</span><br><span class=\"line\">     np.exp(-<span class=\"number\">0.5</span> * (<span class=\"number\">1</span> / sigma * (bins - mu))**<span class=\"number\">2</span>))</span><br><span class=\"line\">axe.plot(bins, y, <span class=\"string\">&#x27;--r&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"面积图\">面积图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#面积图，并填充不同颜色</span></span><br><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.arange(<span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">0.01</span>)</span><br><span class=\"line\">y = np.sin(x * np.pi)</span><br><span class=\"line\">axe.fill_between(x, y, where=(y &gt; <span class=\"number\">0</span>), facecolor = <span class=\"string\">&#x27;b&#x27;</span>, alpha = <span class=\"number\">0.7</span>)</span><br><span class=\"line\">axe.fill_between(x, y, where=(y &lt; <span class=\"number\">0</span>), facecolor = <span class=\"string\">&#x27;g&#x27;</span>, alpha = <span class=\"number\">0.7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#堆叠面积图stackplot</span></span><br><span class=\"line\">fig, axe = plt.subplots(nrows=<span class=\"number\">2</span>, figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">y = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">11</span>]</span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">y1 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>) <span class=\"comment\"># low = 1, high = 5, size = 6</span></span><br><span class=\"line\">y2 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y3 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y4 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">30</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y5 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y6 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">20</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">y7 = y + np.random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">labels = [<span class=\"string\">&quot;Jan&quot;</span>, <span class=\"string\">&quot;Feb&quot;</span>, <span class=\"string\">&quot;Mar&quot;</span>, <span class=\"string\">&quot;Apr&quot;</span>, <span class=\"string\">&quot;May&quot;</span>, <span class=\"string\">&quot;Jun&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">axe[<span class=\"number\">0</span>].stackplot(x, y1, y2, y3, y4, y5, y6, y7, baseline=<span class=\"string\">&quot;sym&quot;</span>) <span class=\"comment\"># 基本线将会水平对称与0 (the baseline stack is going to be symmetric around the horizontal 0 line)</span></span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_xticks(x)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_xticklabels(labels)</span><br><span class=\"line\">axe[<span class=\"number\">0</span>].set_title(<span class=\"string\">&quot;Symmetric&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">axe[<span class=\"number\">1</span>].stackplot(x, y1, y2, y3, y4, y5, y6, y7, baseline=<span class=\"string\">&quot;wiggle&quot;</span>) <span class=\"comment\"># 重设基本线，以至于最小化平方斜率的总和 (minimizes the sum of the squared slopes.)</span></span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_xticks(x) </span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_xticklabels(labels)</span><br><span class=\"line\">axe[<span class=\"number\">1</span>].set_title(<span class=\"string\">&quot;Wiggle&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.tight_layout()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"箱型图\">箱型图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">np.random.seed(<span class=\"number\">66</span>)</span><br><span class=\"line\">labels = [<span class=\"string\">&quot;Label1&quot;</span>, <span class=\"string\">&quot;Label2&quot;</span>, <span class=\"string\">&quot;Label3&quot;</span>, <span class=\"string\">&quot;Label4&quot;</span>]</span><br><span class=\"line\">values = []</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">100</span>, <span class=\"number\">20</span>, <span class=\"number\">200</span>)) <span class=\"comment\"># mean = 100, std = 20 for 200 values</span></span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">150</span>, <span class=\"number\">50</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\">values.append(np.random.normal(<span class=\"number\">150</span>, <span class=\"number\">70</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">axe.boxplot(values, labels=labels)</span><br><span class=\"line\">axe.boxplot(values, labels=labels, vert=<span class=\"literal\">False</span>)</span><br><span class=\"line\">axe.boxplot(values, labels=labels,patch_artist=<span class=\"literal\">True</span>,</span><br><span class=\"line\">            boxprops=<span class=\"built_in\">dict</span>(facecolor=<span class=\"string\">&#x27;teal&#x27;</span>, color=<span class=\"string\">&#x27;r&#x27;</span>))</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"饼图\">饼图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">labels = [<span class=\"string\">&quot;P1&quot;</span>, <span class=\"string\">&quot;P2&quot;</span>, <span class=\"string\">&quot;P3&quot;</span>, <span class=\"string\">&quot;P4&quot;</span>, <span class=\"string\">&quot;P5&quot;</span>, <span class=\"string\">&quot;P6&quot;</span>]</span><br><span class=\"line\">labels2 = [<span class=\"string\">&quot;S1&quot;</span>, <span class=\"string\">&quot;S2&quot;</span>, <span class=\"string\">&quot;S3&quot;</span>]</span><br><span class=\"line\">values = [<span class=\"number\">200</span>, <span class=\"number\">300</span>, <span class=\"number\">88</span>, <span class=\"number\">66</span>, <span class=\"number\">110</span>, <span class=\"number\">168</span>]</span><br><span class=\"line\">values2 = [<span class=\"number\">500</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>]</span><br><span class=\"line\">explode = [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0.3</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>]</span><br><span class=\"line\">explode2 = [<span class=\"number\">0</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># outer circle</span></span><br><span class=\"line\"><span class=\"comment\"># pctdistance is used to control the distance between the center of the circle and percentage value.</span></span><br><span class=\"line\"><span class=\"comment\"># labeldistance is used to control the distance between the center of the circle and the label.</span></span><br><span class=\"line\">axe.pie(values, radius=<span class=\"number\">1.5</span>, wedgeprops=<span class=\"built_in\">dict</span>(width=<span class=\"number\">0.5</span>), autopct=<span class=\"string\">&#x27;%.2f%%&#x27;</span>, </span><br><span class=\"line\">        pctdistance=<span class=\"number\">0.8</span>, labels=labels, labeldistance=<span class=\"number\">1.05</span>, explode=explode)</span><br><span class=\"line\"><span class=\"comment\"># inner circle</span></span><br><span class=\"line\">axe.pie(values2, radius=<span class=\"number\">1</span>, wedgeprops=<span class=\"built_in\">dict</span>(width=<span class=\"number\">0.5</span>), autopct=<span class=\"string\">&#x27;%.2f%%&#x27;</span>, </span><br><span class=\"line\">        pctdistance=<span class=\"number\">0.8</span>, labels=labels2, labeldistance=<span class=\"number\">0.3</span>, explode=explode2)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"热力图\">热力图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig, axe = plt.subplots(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">axe.set_xticks(np.arange(<span class=\"built_in\">len</span>(xlabels)))</span><br><span class=\"line\">axe.set_yticks(np.arange(<span class=\"built_in\">len</span>(ylabels)))</span><br><span class=\"line\">axe.set_xticklabels(xlabels)</span><br><span class=\"line\">axe.set_yticklabels(ylabels)</span><br><span class=\"line\">im = axe.imshow(values)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(xlabels)):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(ylabels)):</span><br><span class=\"line\">        text = axe.text(i, j, values[i, j],</span><br><span class=\"line\">                       horizontalalignment=<span class=\"string\">&quot;center&quot;</span>, verticalalignment=<span class=\"string\">&quot;center&quot;</span>, color=<span class=\"string\">&quot;w&quot;</span>)<span class=\"comment\">#显示文本</span></span><br><span class=\"line\">axe.figure.colorbar(im, ax=axe)<span class=\"comment\">#颜色条</span></span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"d图\">3D图</h3>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">fig = plt.figure(figsize = (<span class=\"number\">8</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">axes = plt.axes(projection = <span class=\"string\">&quot;3d&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">X = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">Y = np.linspace(-<span class=\"number\">5</span>, <span class=\"number\">5</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\">X, Y = np.meshgrid(X, Y)</span><br><span class=\"line\">Z = np.cos(np.sqrt(X**<span class=\"number\">2</span> + Y**<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">surf = axes.plot_surface(X, Y, Z, cmap=plt.get_cmap(<span class=\"string\">&quot;plasma&quot;</span>))</span><br><span class=\"line\">plt.colorbar(surf)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\r\n","categories":["CS learning"],"tags":["python"]},{"title":"Photos on 20250427","url":"/2025/04/28/Photos-on-20250427/","content":"<p>It took a long time to pay for a SONY , go out with Mlle. Wang and\r\nretouch the pictures from the very beginning. I put them in this article\r\nand I hope that the photos are not TOO awful to thumb through.</p>\r\n<figure>\r\n<img src=\"DSC00004.jpg\" alt=\"Benben\" />\r\n<figcaption aria-hidden=\"true\">Benben</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00011.jpg\" alt=\"reading\" />\r\n<figcaption aria-hidden=\"true\">reading</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00014.jpg\" alt=\"old building\" />\r\n<figcaption aria-hidden=\"true\">old building</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00016.jpg\" alt=\"plants on the balcony\" />\r\n<figcaption aria-hidden=\"true\">plants on the balcony</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00015.jpg\" alt=\"couples or colleagues\" />\r\n<figcaption aria-hidden=\"true\">couples or colleagues</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00031.jpg\" alt=\"zone out\" />\r\n<figcaption aria-hidden=\"true\">zone out</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00058.jpg\" alt=\"windows\" />\r\n<figcaption aria-hidden=\"true\">windows</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00062.jpg\" alt=\"Hongyi road\" />\r\n<figcaption aria-hidden=\"true\">Hongyi road</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00063.jpg\" alt=\"couples and dog(I really envy them😤)\" />\r\n<figcaption aria-hidden=\"true\">couples and dog(I really envy\r\nthem😤)</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00073.jpg\" alt=\"bird and lake\" />\r\n<figcaption aria-hidden=\"true\">bird and lake</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00078.jpg\" alt=\"watch out!\" />\r\n<figcaption aria-hidden=\"true\">watch out!</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00081.jpg\" alt=\"Mlle. Wang!\" />\r\n<figcaption aria-hidden=\"true\">Mlle. Wang!</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00084.jpg\" alt=\"interesting thing\" />\r\n<figcaption aria-hidden=\"true\">interesting thing</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00088.jpg\" alt=\"chutian……\" />\r\n<figcaption aria-hidden=\"true\">chutian……</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00094.jpg\" alt=\"chutiantai\" />\r\n<figcaption aria-hidden=\"true\">chutiantai</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00107.jpg\" alt=\"Mlle. Wang and cat\" />\r\n<figcaption aria-hidden=\"true\">Mlle. Wang and cat</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00125.jpg\" alt=\"chutiantai\" />\r\n<figcaption aria-hidden=\"true\">chutiantai</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00137.jpg\" alt=\"chime\" />\r\n<figcaption aria-hidden=\"true\">chime</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00161.jpg\" alt=\"trees\" />\r\n<figcaption aria-hidden=\"true\">trees</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00167.jpg\" alt=\"roads\" />\r\n<figcaption aria-hidden=\"true\">roads</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00168.jpg\" alt=\"roadmap\" />\r\n<figcaption aria-hidden=\"true\">roadmap</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00173.jpg\" alt=\"photo with Mlle. Wang！\" />\r\n<figcaption aria-hidden=\"true\">photo with Mlle. Wang！</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00179.jpg\" alt=\"graffiti\" />\r\n<figcaption aria-hidden=\"true\">graffiti</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00185.jpg\" alt=\"Taoist temple\" />\r\n<figcaption aria-hidden=\"true\">Taoist temple</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00186.jpg\" alt=\"rock\" />\r\n<figcaption aria-hidden=\"true\">rock</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00190.jpg\" alt=\"Anemometer\" />\r\n<figcaption aria-hidden=\"true\">Anemometer</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00194.jpg\" alt=\"rail road\" />\r\n<figcaption aria-hidden=\"true\">rail road</figcaption>\r\n</figure>\r\n","categories":["Photos"],"tags":["2860 f4-5.6"]},{"title":"word排版学习","url":"/2024/07/04/word%E6%8E%92%E7%89%88%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"如何给每个公式后面添加编号\">如何给每个公式后面添加编号？</h2>\r\n<p>首先在公式框内输入#()，将光标移入括号内，随后点入插入-文本部件-域，</p>\r\n<figure>\r\n<img src=\"/images/yu.png\" alt=\"域\" />\r\n<figcaption aria-hidden=\"true\">域</figcaption>\r\n</figure>\r\n<p>进入设置域的属性，</p>\r\n<figure>\r\n<img src=\"/images/yushuxing.png\" alt=\"域属性\" />\r\n<figcaption aria-hidden=\"true\">域属性</figcaption>\r\n</figure>\r\n<p>确定后可以看见括号内已经出现了数字，这时候把光标移出括号，按下回车，就实现了公式编号。在后续的公式中重复上述步骤即可自动编号。</p>\r\n<p>❗注意： 1. 括号一定要使用英文版 2.\r\n在写入编号的时候检查一下公式的括号是否完整，公式本身是否正确，如果不正确是不能编号的\r\n3. 光标一定要移到编号括号以外，公式格式以内再回车</p>\r\n<h2\r\nid=\"word转pdf图片错位长宽大小改变怎么办\">word转pdf图片错位、长宽大小改变怎么办？</h2>\r\n<p>在word内转pdf时选择 打印-打印为Adobe Acrobat pdf-保存至桌面\r\n即可解决。</p>\r\n","categories":["Research"],"tags":["office"]},{"title":"网站为何？","url":"/2024/03/31/%E5%86%99%E4%B8%80%E5%86%99%E6%96%87%E7%AB%A0/","content":"<h1 id=\"思路来自..\">思路来自..</h1>\r\n<p>去年年末第一次做了课设。对于一个设计，时间短，任务重；但对于一个作业，一个完整的解决问题的思路而言，时间还是太长。经常写着写着就忘了在这之前想到的好点子。这时我想起了补工程地质的时候查到的美国地质学家自己的石头网站，有关科普的，有关旅程的，有关成长的，一切都可以展现在小小的网页上。这是建网站的第一个契机。</p>\r\n<p>最近又要开始做课设，更兼需要了解如何写论文，如何使用Linux，这是三项十分重大的任务，是没有笔记万万完成不了的。我曾经尝试使用OneNote做跟踪式的思路记录，但是发现输入公式和表格是在太费时间，而且移植性很差，copy到word里简直就是灾难。那天突然想起来markdown，想起来可以自己建一个网站。某些契机下决定使用hexo建立自己的第一个网站，这算是网站的第一篇文章，就算一个开篇题词了。</p>\r\n<p># 想在网站上写点什么？\r\n很重要的部分是课设的编程进度和编程思路，同时需要记录latex语言的学习进展。其他的诸如对计算机科学领域兴趣点的发掘，专业结合的idea，日后论文的选题及进度都需要挂在网站上作为一个记录。</p>\r\n<p>当然，还有一个很重要的作用，就是练习使用markdown，争取能更方便更美观的和整个网络领域交流。</p>\r\n<p><em>也就是个大型笔记本，努努力，还能交互的那种</em></p>\r\n<h1 id=\"祝课设论文及cs学习一切顺利\">祝课设、论文及CS学习一切顺利。</h1>\r\n"},{"title":"数据结构与算法分析学习笔记","url":"/2024/10/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h1 id=\"第一章-程序设计综述\">第一章 程序设计：综述</h1>\r\n<h2 id=\"递归简论\">1.3 递归简论</h2>\r\n<p>编写递归程序时，要牢记递归的四条基本法则：</p>\r\n<ul>\r\n<li>基准情形</li>\r\n<li>要有进展</li>\r\n<li>设计法则</li>\r\n<li>合成效益法则</li>\r\n</ul>\r\n<h2 id=\"c细节\">1.5 C++细节</h2>\r\n<h3 id=\"指针\">1.5.1 指针</h3>\r\n<p>指针变量是一种存放另一对象所占用的地址的变量。例如如下例程：</p>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tIntCell* m;</span><br><span class=\"line\">\tm = <span class=\"keyword\">new</span> <span class=\"built_in\">IntCell</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tm-&gt;<span class=\"built_in\">write</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;Cell contents: &quot;</span> &lt;&lt; m-&gt;<span class=\"built_in\">read</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> m;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>声明</li>\r\n</ul>\r\n<p>其中，星号*表明m是一个指针变量，允许他指向一个IntCell对象。m的值是他所指向的对象的地址。</p>\r\n<ul>\r\n<li>对象的动态创建</li>\r\n</ul>\r\n<p>操作符new返回一个指向新创建对象的指针。</p>\r\n<ul>\r\n<li>垃圾收集与delete</li>\r\n</ul>\r\n<p>当一个通过new操作符被分配地址的对象不再被引用时，必须（通过一个指针）对该对象应用delete操作，否则该对象使用的内存就会丢失。一个重要的规则是，在能够使用自动变量的时候不要使用new操作符。</p>\r\n<ul>\r\n<li>指针的赋值和比较</li>\r\n</ul>\r\n<p>在C++中，指针变量的赋值和比较是基于指针的值，也即基于指针所存储的内存地址进行的。于是，如果他们指向相同的对象，两个指针变量相等，如果他们指向不同的对象，即使他们指向的两个对象本身是相等的，其值也是不相等的。</p>\r\n<ul>\r\n<li>通过指针访问对象的成员</li>\r\n</ul>\r\n<p>如果一个指针变量指向一个类类型的对象，那么所指对象的（可见）成员能够通过-&gt;操作符被访问。</p>\r\n<h3 id=\"左值右值和引用\">1.5.2 左值、右值和引用</h3>\r\n<p>如果程序中有一个变量名，那么他就是一个左值。</p>\r\n<p>在C++11中，<em>左值引用</em> 的声明是通过在某个类型后防止一个符号\r\n<em>&amp;</em> 来进行的。<em>右值引用</em> 是通过在某个类型后面放置一个\r\n<em>&amp;&amp;</em> 来进行的。</p>\r\n<h4 id=\"左值引用的用途\">左值引用的用途</h4>\r\n<p>1、给结构复杂的名称起别名</p>\r\n<p>2、范围for循环</p>\r\n<p>3、避免复制</p>\r\n","categories":["CS learning"],"tags":["algorithm"]},{"title":"水文预报课设","url":"/2024/06/28/%E6%B0%B4%E6%96%87%E9%A2%84%E6%8A%A5%E8%AF%BE%E8%AE%BE/","content":"<h2 id=\"任务\">任务</h2>\r\n<p>本学期第二个课设为水文预报，根据流域选取标准，选择旬河流域作为产汇流计算流域。</p>\r\n<h3 id=\"设计内容\">设计内容</h3>\r\n<ul>\r\n<li>洪水场次资料的整理</li>\r\n<li>产流方案设计</li>\r\n<li>汇流方案</li>\r\n<li>精度评价</li>\r\n</ul>\r\n<p>最终需要给出预报过程图，包括降雨、实测流量、模拟流量。</p>\r\n<h3 id=\"设计所需数据\">设计所需数据</h3>\r\n<p>由打包文件.DAT给出，其中退水曲线蓄泄系数取 K<a href=\"#fn1\"\r\nclass=\"footnote-ref\" id=\"fnref1\" role=\"doc-noteref\"><sup>1</sup></a>=48h\r\n，流域集水面积6448km²。</p>\r\n<h4 id=\"洪水场次资料的整理\">洪水场次资料的整理</h4>\r\n<ul>\r\n<li>暴雨洪水场次的划分：利用预留的1987——1990划分场次洪水资料，根据已给出的洪水场次计算各场洪水的实测洪峰、实测峰现时间和实测洪水总量。</li>\r\n</ul>\r\n<p>具体时间如下表： |洪号|流量起止时间| | ----- | --------- | |870513\r\n|05.10-05.20| |870614 |06.11-06.20| |870804 |08.02-08.12| |870903\r\n|09.01-09.09| |880407 |04.01-04.20| |880505 |05.05-05.19| |880705\r\n|07.02-07.16| |880819 |08.17-08.24| |890429 |04.26-05.09| |890711\r\n|07.05-07.22| |890820 |08.14-08.25| |890928 |09.23-10.04| |900501\r\n|04.28-05.13| |900701 |06.29-07.11| |900816 |08.12-08.28|</p>\r\n<ul>\r\n<li>为了研究暴雨与洪水之间的关系，必须对流量过程线加以分割（次洪划分），又由于不同水源运动规律不同，要把洪水径流分割为地上径流和地下径流（径流成分划分）。</li>\r\n</ul>\r\n<h5\r\nid=\"计算各场洪水的洪水总量和次洪径流深\">计算各场洪水的洪水总量和次洪径流深</h5>\r\n<p>由退水指数方程</p>\r\n<p><span class=\"math display\">\\[ Q_t = Q_0e^{\\frac{t}{K}} \\]</span></p>\r\n<p>计算各次洪水的退水曲线。</p>\r\n<p>以870513为例，利用蓄泄关系法对洪水径流深进行计算，计算公式如下：</p>\r\n<p><span class=\"math display\">\\[ R_0 = 3.6\\Delta\r\nt(\\sum_{i=2}^{n-1}Q_i+\\frac{Q_1+Q_n}{2})/A+R_{e末}-R_{e初} \\]</span></p>\r\n<p>其中，<span class=\"math inline\">\\(\\Delta t\\)</span>为24h，<span\r\nclass=\"math inline\">\\(R_{e末}-R_{e初}=3.6K(Q_末-Q_初)/A\\)</span>。</p>\r\n<p>IMP：不透水面积比例</p>\r\n<h3 id=\"计算顺序调整建立产流计算模型\">计算顺序调整:建立产流计算模型</h3>\r\n<p>重新研读任务书后，现将设计顺序改为先建立产流模型，明确计算过程，再梳理需要优化率定的参数。</p>\r\n<ul>\r\n<li>首先根据三层蒸发模型计算出该时段的EU、EL、ED，并计算总蒸散发量E。三层蒸发模型具体计算情况分为以下四种：</li>\r\n</ul>\r\n<ol type=\"1\">\r\n<li>当<span class=\"math inline\">\\(WU+P \\ge E_P\\)</span>时</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[ E_U = E_P , E_L = 0 , E_D = 0\r\n\\]</span></p>\r\n<ol start=\"2\" type=\"1\">\r\n<li>当 <span class=\"math inline\">\\(WU+P &lt; E_P , WL \\ge C \\cdot\r\nWLM\\)</span>时</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[ E_U = WU+P , E_L = (E_P-E_U)WL/WLM ,\r\nE_D = 0\\]</span></p>\r\n<ol start=\"3\" type=\"1\">\r\n<li>当<span class=\"math inline\">\\(WU+P&lt;E_P , C(E_P-E_U) \\ge C \\cdot\r\nWLM\\)</span>时</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[E_U = WU+P , E_L = C(E_P-E_U) , E_D =\r\n0\\]</span></p>\r\n<ol start=\"4\" type=\"1\">\r\n<li>当<span class=\"math inline\">\\(WU+P&lt;E_P , WL &lt;\r\nC(E_P-E_U)\\)</span>时</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[E_U = WU+P , E_L = WL , E_D = C(E_P -\r\nE_U) - E_L\\]</span></p>\r\n<p>式中，<span\r\nclass=\"math inline\">\\(E_P\\)</span>为流域蒸发能力，WL为下层土壤含水量，WLM为下层土壤含水容量，C为蒸发扩散系数，WU为上层土壤含水量，P为降雨量。</p>\r\n<ul>\r\n<li>算得蒸散发量之后可以得到净雨量PE，通过PE推求产流量。</li>\r\n</ul>\r\n<p>首先需要计算初始土湿分布以计算流域产流比例，确定后续的产流量。</p>\r\n<p><span class=\"math display\">\\[ a =\r\nWMM[1-(1-W/WM)^{\\frac{1}{1+b}}]\\]</span></p>\r\n<p>在初始土湿为W的条件下，可以建立降雨径流的关系，分为以下两种情况：</p>\r\n<ol type=\"1\">\r\n<li>$a + PE WMM $</li>\r\n</ol>\r\n<p><span class=\"math display\">\\[R = PE + W - WM + WM(1 -\r\n\\frac{PE+a}{WMM})^{1+b}\\]</span></p>\r\n<ol start=\"2\" type=\"1\">\r\n<li><span class=\"math inline\">\\(a + PE &gt; WMM\\)</span></li>\r\n</ol>\r\n<p><span class=\"math display\">\\[R = PE - (WM - W)\\]</span></p>\r\n<ul>\r\n<li>根据研究，流域坡地上的降雨产流量因产流过程的条件和运动路径不同，受流域的调蓄作用不同，各径流成分在流量过程线上的反映是不一样的。在实际工作中，因为需要按各种径流成分分别进行计算或模拟，因而要对产流量进行水源划分。</li>\r\n</ul>\r\n<p>本次课程设计需要将其划分为地面径流、壤中流和地下径流以备后续计算。</p>\r\n<p>经过分析概化河槽一侧的土壤剖面,可以得出径流特性可用水箱概念模型来描述和分水源。与蓄满产流类似，由于下垫面的不均匀性，自由水蓄量也存在空间分布不均匀性。因此，应考虑产流面积和自由水蓄量空间分布不均匀的影响。<a\r\nhref=\"#fn2\" class=\"footnote-ref\" id=\"fnref2\"\r\nrole=\"doc-noteref\"><sup>2</sup></a></p>\r\n<p>根据上述理论，可以列出流域平均自由水蓄积容量的关系：</p>\r\n<p><span class=\"math display\">\\[S_m = \\frac{S_{mm}}{1+EX}\\]</span></p>\r\n<p>设时段初始自由蓄水量为<span\r\nclass=\"math inline\">\\(S_1\\)</span>,其相应纵坐标为AU，则考虑上时段和本时段产流面积有不同的转换有：</p>\r\n<p><span class=\"math display\">\\[AU = S_{mm}[1-(1-\\frac{S_1 \\cdot\r\nFR_1/FR}{S_m})^{\\frac{1}{1+EX}}]\\]</span></p>\r\n<p>有了上列计算式，即可划分水源。设扣除雨期蒸发后的降雨量为PE，可分为以下两种情况：\r\n1. <span class=\"math inline\">\\(PE+AU&lt;S_{mm}\\)</span></p>\r\n<p><span class=\"math display\">\\[RS = FR[PE+\\frac{S_1 \\cdot FR_1}{FR} -\r\nS_m + S_m(1-\\frac{PE+AU}{S_{mm}})^{1+EX} ]\\]</span></p>\r\n<ol start=\"2\" type=\"1\">\r\n<li><span class=\"math inline\">\\(PE+AU \\ge S_{mm}\\)</span></li>\r\n</ol>\r\n<p><span class=\"math display\">\\[RS = FR(PE+\\frac{S_1 \\cdot FR_1}{FR} -\r\nS_m)\\]</span></p>\r\n<p>本时段的自由蓄水量为</p>\r\n<p><span class=\"math display\">\\[S = \\frac{S_1 \\cdot FR_1}{FR} +\r\n\\frac{R-RS}{FR}\\]</span></p>\r\n<p>相应的壤中流和地下径流为</p>\r\n<p><span class=\"math display\">\\[ RSS = KSS \\cdot S \\cdot FR\\]</span>\r\n<span class=\"math display\">\\[ RG = KG \\cdot S \\cdot FR \\]</span></p>\r\n<p>本时段末即下一时段初的自由水蓄量变为</p>\r\n<p><span class=\"math display\">\\[S_1 = S(1-KSS-KG)\\]</span></p>\r\n<p>对十五场降水蒸发情况进行迭代计算，得到最终的水源划分结果。\r\n产流计算模型具体代码如下：</p>\r\n<details>\r\n<summary>\r\n产流计算模型\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%产流模型</span></span><br><span class=\"line\"><span class=\"comment\">%P时段降雨</span></span><br><span class=\"line\"><span class=\"comment\">%ET时段潜在蒸散发</span></span><br><span class=\"line\"><span class=\"comment\">%%产流参数</span></span><br><span class=\"line\">WM = <span class=\"number\">126</span>;</span><br><span class=\"line\">WUM = <span class=\"number\">63</span>;</span><br><span class=\"line\">WLM = <span class=\"number\">13</span>;</span><br><span class=\"line\">WDM = <span class=\"number\">50</span>;</span><br><span class=\"line\">KC = <span class=\"number\">0.71</span>;<span class=\"comment\">%流域蒸散发折算系数</span></span><br><span class=\"line\">C = <span class=\"number\">0.17</span>;</span><br><span class=\"line\">B = <span class=\"number\">2</span>;</span><br><span class=\"line\">IMP = <span class=\"number\">0.001</span>;</span><br><span class=\"line\">FE = <span class=\"number\">0.8</span>;<span class=\"comment\">%初始土壤水容量折算系数</span></span><br><span class=\"line\">WMM = WM*(<span class=\"number\">1</span>+B);</span><br><span class=\"line\"></span><br><span class=\"line\">W(<span class=\"number\">1</span>,:) = WU(<span class=\"number\">1</span>,:)+WL(<span class=\"number\">1</span>,:)+WD(<span class=\"number\">1</span>,:);</span><br><span class=\"line\">SM = <span class=\"number\">36</span>;</span><br><span class=\"line\">EX = <span class=\"number\">0.46</span>;</span><br><span class=\"line\">KG = <span class=\"number\">0.046</span>;</span><br><span class=\"line\">KKG = <span class=\"number\">0.995</span>;</span><br><span class=\"line\">KSS = <span class=\"number\">0.83</span>;</span><br><span class=\"line\">KKSS = <span class=\"number\">0.06</span>;</span><br><span class=\"line\">SMM = SM*(<span class=\"number\">1</span>+EX);</span><br><span class=\"line\">S1(<span class=\"number\">1</span>,:) = FE*SM;</span><br><span class=\"line\"></span><br><span class=\"line\">k = <span class=\"number\">1</span>;</span><br><span class=\"line\">WU = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WL = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WD = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">R = <span class=\"built_in\">zeros</span>(<span class=\"number\">20</span>,k);</span><br><span class=\"line\">WU(<span class=\"number\">1</span>,:) = FE*WUM;</span><br><span class=\"line\">WL(<span class=\"number\">1</span>,:) = FE*WLM;</span><br><span class=\"line\">WD(<span class=\"number\">1</span>,:) = FE*WDM;</span><br><span class=\"line\">n = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">20</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> E0(<span class=\"built_in\">i</span>,k) &gt; <span class=\"number\">0</span></span><br><span class=\"line\">        n = n+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%三层蒸发模型</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    Ep(<span class=\"built_in\">i</span>,k) = KC*E0(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"comment\">%第一层</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &gt;= Ep(<span class=\"built_in\">i</span>,k)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = Ep(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">%第二层</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt;Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &gt;= C*WLM)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = (Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k))*WL(<span class=\"built_in\">i</span>,k)/WLM;</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt; Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &gt; C*(Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k))) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &lt; C*WLM)</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = C*(Ep(<span class=\"built_in\">i</span>,k) - Eu(<span class=\"built_in\">i</span>,k));</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">%第三层</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> (WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k) &lt; Ep(<span class=\"built_in\">i</span>,k)) &amp;&amp; (WL(<span class=\"built_in\">i</span>,k) &lt; C*(Ep(<span class=\"built_in\">i</span>,k)-Eu(<span class=\"built_in\">i</span>,k)))</span><br><span class=\"line\">        Eu(<span class=\"built_in\">i</span>,k) = WU(<span class=\"built_in\">i</span>,k) + P(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        El(<span class=\"built_in\">i</span>,k) = WL(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        Ed(<span class=\"built_in\">i</span>,k) = C*(Ep(<span class=\"built_in\">i</span>,k) - Eu(<span class=\"built_in\">i</span>,k)) - El(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    E(<span class=\"built_in\">i</span>,k) = Eu(<span class=\"built_in\">i</span>,k)+El(<span class=\"built_in\">i</span>,k)+Ed(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    PE(<span class=\"built_in\">i</span>,k) = P(<span class=\"built_in\">i</span>,k) - E(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    </span><br><span class=\"line\">    a(<span class=\"built_in\">i</span>,k) = WMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+B)));</span><br><span class=\"line\">    <span class=\"comment\">%计算i时刻RS，RSS，RG,R</span></span><br><span class=\"line\">    <span class=\"comment\">%S为本时段的自由蓄水量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> PE(<span class=\"built_in\">i</span>,k) &gt; <span class=\"number\">0</span><span class=\"comment\">%产流</span></span><br><span class=\"line\">        <span class=\"comment\">%透水面积产流计算</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> a(<span class=\"built_in\">i</span>,k)+PE(<span class=\"built_in\">i</span>,k)&lt;=WMM</span><br><span class=\"line\">            R(<span class=\"built_in\">i</span>,k) = PE(<span class=\"built_in\">i</span>,k)+W(<span class=\"built_in\">i</span>,k)-WM+WM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+a(<span class=\"built_in\">i</span>,k))/WMM)^(B+<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            R(<span class=\"built_in\">i</span>,k) = PE(<span class=\"built_in\">i</span>,k)-(WM-W(<span class=\"built_in\">i</span>,k));</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">%不透水面积产流计算</span></span><br><span class=\"line\">        RIM(<span class=\"built_in\">i</span>,k) = P(<span class=\"built_in\">i</span>,k) * IMP;</span><br><span class=\"line\">        FR(<span class=\"built_in\">i</span>,k) = R(<span class=\"built_in\">i</span>,k)/PE(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">i</span> == <span class=\"number\">1</span></span><br><span class=\"line\">            FR1 = <span class=\"number\">1</span>-(<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WMM)^B;</span><br><span class=\"line\">            AU(<span class=\"built_in\">i</span>,k) = SMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-S1(<span class=\"built_in\">i</span>,k)*FR1*FR(<span class=\"built_in\">i</span>,k)/SM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+EX)));<span class=\"comment\">%S1(1,k)为时段初始自由水蓄量</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">             AU(<span class=\"built_in\">i</span>,k) = SMM*(<span class=\"number\">1</span>-(<span class=\"number\">1</span>-S1(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span>,k)/SM)^(<span class=\"number\">1</span>/(<span class=\"number\">1</span>+EX)));<span class=\"comment\">%S1(1,k)为时段初始自由水蓄量</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k)&lt;SMM</span><br><span class=\"line\">            RS(<span class=\"built_in\">i</span>,k) = FR(<span class=\"built_in\">i</span>,k)*(PE(<span class=\"built_in\">i</span>,k)+S1(<span class=\"built_in\">i</span>,k)-SM+SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>)) + RIM(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RSS(<span class=\"built_in\">i</span>,k) = (SM - SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>))*KSS*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RG(<span class=\"built_in\">i</span>,k) = (SM - SM*(<span class=\"number\">1</span>-(PE(<span class=\"built_in\">i</span>,k)+AU(<span class=\"built_in\">i</span>,k))/SMM)^(EX+<span class=\"number\">1</span>))*KG*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            RS(<span class=\"built_in\">i</span>,k) = FR(<span class=\"built_in\">i</span>,k)*(PE(<span class=\"built_in\">i</span>,k)+S1(<span class=\"built_in\">i</span>,k)*FR(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,k)/FR(<span class=\"built_in\">i</span>,k)-SM) + RIM(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RSS(<span class=\"built_in\">i</span>,k) = (PE-SM+S1(<span class=\"built_in\">i</span>,k))*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            RG(<span class=\"built_in\">i</span>,k) = SM*KG*FR(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            S1(<span class=\"built_in\">i</span>,k) = (<span class=\"number\">1</span>-KSS-KG)*SM;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span><span class=\"comment\">%不产流</span></span><br><span class=\"line\">        R(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;</span><br><span class=\"line\">        FR(<span class=\"built_in\">i</span>,k) = R(<span class=\"built_in\">i</span>,k)/PE(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        FRt(<span class=\"built_in\">i</span>,k) = <span class=\"number\">1</span> - (<span class=\"number\">1</span>-W(<span class=\"built_in\">i</span>,k)/WM)^(B/(<span class=\"number\">1</span>+B));</span><br><span class=\"line\">        RS(<span class=\"built_in\">i</span>,k) = <span class=\"number\">0</span>;<span class=\"comment\">%地面径流</span></span><br><span class=\"line\">        RSS(<span class=\"built_in\">i</span>,k) = S1(<span class=\"built_in\">i</span>,k)*KSS*FR(<span class=\"built_in\">i</span>,k);<span class=\"comment\">%壤中流</span></span><br><span class=\"line\">        RG = S1(<span class=\"built_in\">i</span>,k)*KG*FRt(<span class=\"built_in\">i</span>,k);<span class=\"comment\">%地下径流</span></span><br><span class=\"line\">        S1(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = (<span class=\"number\">1</span>-KSS-KG)*S1(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">%计算土壤含水量的变化</span></span><br><span class=\"line\">    WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=PE(<span class=\"built_in\">i</span>,k)+WU(<span class=\"built_in\">i</span>,k)-R(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;=WUM</span><br><span class=\"line\">        WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)-WUM+WL(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;=WLM</span><br><span class=\"line\">            WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WL(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)-WLM+WD(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\">            WL(<span class=\"built_in\">i</span>,k)=WLM;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)&gt;WDM</span><br><span class=\"line\">                WD(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WDM;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        WU(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=WUM;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    W(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k)=W(<span class=\"built_in\">i</span>,k)+PE(<span class=\"built_in\">i</span>,k)-R(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%水量平衡检验</span></span><br><span class=\"line\">x1 = sum(E(:,k));</span><br><span class=\"line\">x2 = sum(P(:,k));</span><br><span class=\"line\">x3 = sum(PE(:,k));</span><br><span class=\"line\">x = x3-(x2-x1);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> x &lt; <span class=\"number\">0.001</span></span><br><span class=\"line\">    Y = [<span class=\"string\">&#x27;误差为&#x27;</span>,num2str(x),<span class=\"string\">&#x27;,符合水量平衡&#x27;</span>];</span><br><span class=\"line\">    <span class=\"built_in\">disp</span>(Y);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;错误！不符合水量平衡 。&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"进行汇流计算\">进行汇流计算</h3>\r\n<p>由于不同水源流速等因素对汇流的影响不同，故需要使用不同的汇流方法计算结果。通常，由地面净雨直接推得的地面径流使用单位线进行计算，地下径流汇流使用线性水库方法计算。</p>\r\n<p>直接应用优选的汇流参数和已给出的单位线对场次暴雨洪水进行单位线计算。壤中流和地下径流用线性水库模型进行求解。计算汇流具体代码如下：</p>\r\n<details>\r\n<summary>\r\n汇流计算\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%单位线汇流计算</span></span><br><span class=\"line\">A = <span class=\"number\">6448</span>;</span><br><span class=\"line\">U = A/(<span class=\"number\">3.6</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">k = k;</span><br><span class=\"line\">q = <span class=\"built_in\">length</span>(RS(:,k));</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:q</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        danweixian(<span class=\"built_in\">i</span>+<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">2</span>) = danweixian(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) * RS(<span class=\"built_in\">j</span>,k)/<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    danweixian(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>) = sum(danweixian(<span class=\"built_in\">i</span>,<span class=\"number\">3</span>:<span class=\"built_in\">j</span>+<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">m = <span class=\"built_in\">length</span>(danweixian(:,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>));</span><br><span class=\"line\">Qend = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\">Qg = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\">Qss = <span class=\"built_in\">zeros</span>(m,k);</span><br><span class=\"line\"><span class=\"comment\">%%线性水库汇流</span></span><br><span class=\"line\">Qg(<span class=\"number\">1</span>,k) = RG(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    <span class=\"comment\">%Qg(1,k) = RO(1,k);</span></span><br><span class=\"line\">    Qg(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = RG(<span class=\"built_in\">i</span>,k)*(<span class=\"number\">1</span>-KKG)*U+Qg(<span class=\"built_in\">i</span>,k)*KKG;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Qss(<span class=\"number\">1</span>,k) = RSS(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">    Qss(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,k) = RSS(<span class=\"built_in\">i</span>,k)*(<span class=\"number\">1</span>-KSS)*U+Qss(<span class=\"built_in\">i</span>,k)*KSS;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> p = <span class=\"number\">1</span>:m</span><br><span class=\"line\">    Qend(p,k) = danweixian(p,<span class=\"built_in\">j</span>+<span class=\"number\">3</span>)+Qg(p,k)+Qss(p,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3\r\nid=\"按时段进行计算得出每时段预报结果图\">按时段进行计算，得出每时段预报结果图</h3>\r\n<p>已经完成各个时段预报结果的初步计算，现在存在的问题有，时段8和时段13洪峰量很底且峰现时间出现了错位，需要进一步研究出现该问题的原因。</p>\r\n<p>现将检验所用代码插入如下：</p>\r\n<details>\r\n<summary>\r\n预报结果检验\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%退水曲线检验</span></span><br><span class=\"line\">A = <span class=\"number\">6448</span>;</span><br><span class=\"line\">K = <span class=\"number\">48</span>;</span><br><span class=\"line\">t = <span class=\"number\">1</span>;</span><br><span class=\"line\">k = <span class=\"number\">8</span>;</span><br><span class=\"line\">m = <span class=\"number\">8</span>;</span><br><span class=\"line\">Qtjy(<span class=\"number\">1</span>,k) = Qend(m,k);</span><br><span class=\"line\">R = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> Qend(<span class=\"number\">1</span>,k) &gt; Qend(<span class=\"number\">2</span>,k) || Qend(<span class=\"number\">1</span>,k) == <span class=\"number\">0</span></span><br><span class=\"line\">        d = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">        d = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> Qtjy(t,k) &gt; Qend(d,k)</span><br><span class=\"line\">    t = t+<span class=\"number\">1</span>;</span><br><span class=\"line\">    Qtjy(t,k) = Qtjy(t<span class=\"number\">-1</span>,k) * <span class=\"built_in\">exp</span>(<span class=\"number\">-1</span>/K);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qtjy(:,k));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:m</span><br><span class=\"line\">    Qtsjy(<span class=\"built_in\">i</span>,k) = Qend(<span class=\"built_in\">i</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = m:m+t<span class=\"number\">-1</span></span><br><span class=\"line\">    Qtsjy(<span class=\"built_in\">i</span>,k) = Qtjy(<span class=\"built_in\">i</span>-m+<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%R(1,k) = sum(Qend(2:m,k))+sum(Qtsjy(m+1:m+t-1,k));</span></span><br><span class=\"line\">R0jy(<span class=\"number\">1</span>,k) = <span class=\"number\">3.6</span>*<span class=\"number\">24</span>*sum(Qtsjy(<span class=\"number\">1</span>:m+t<span class=\"number\">-1</span>,k))/A;</span><br><span class=\"line\"><span class=\"comment\">%R0jy(1,k) = 3.6*24*sum(Qend(1:m,k))/A;</span></span><br><span class=\"line\"><span class=\"comment\">%R0jy(1,k) = 3.6*24*(R(1,k)+(Qend(1,k)+Qtsjy(l,k))/2)/A + K*3.6*(Qend(m,k)-Qend(d,k))/A;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%RO(1,k) = R0jy(1,k) - 3.6*24*(Qts(1,k)+Qts(t-1,k))*(m+t-1-2)/(2*A);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%作图</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(Qend(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> m+t]);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on;</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(m:m<span class=\"number\">-1</span>+t,Qtjy(<span class=\"number\">1</span>:t,k));</span><br><span class=\"line\">title(<span class=\"string\">&quot;场次一退水曲线&quot;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;Q/(m³/s)&quot;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;t&quot;</span>);</span><br><span class=\"line\">line([d d],[<span class=\"number\">0</span> Qtsjy(d,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\">line([m-d+t m<span class=\"number\">-2</span>+t],[<span class=\"number\">0</span> Qtsjy(m-d+t,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\">line([<span class=\"number\">2</span> m-d+t],[Qtsjy(d,k) Qtsjy(m-d+t,k)],<span class=\"string\">&#x27;LineStyle&#x27;</span>,<span class=\"string\">&#x27;--&#x27;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>在最终绘制对比图代码如下：</p>\r\n<details>\r\n<summary>\r\n作图\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%画图</span></span><br><span class=\"line\"><span class=\"comment\">%%绘制实测流量过程、预测流量过程和流域平均降雨量过程示意图</span></span><br><span class=\"line\">k = <span class=\"number\">8</span>;</span><br><span class=\"line\">m = <span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"comment\">%RS(m,k) = 0;</span></span><br><span class=\"line\">yyaxis left;<span class=\"comment\">%激活左边的轴</span></span><br><span class=\"line\">bar(<span class=\"number\">1</span>:m,RS(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\">set(gca,<span class=\"string\">&#x27;YDir&#x27;</span>,<span class=\"string\">&#x27;reverse&#x27;</span>); <span class=\"comment\">%反转y轴</span></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;日期&quot;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;left 降雨量(mm)&quot;</span>);</span><br><span class=\"line\">ylim([<span class=\"number\">0</span> <span class=\"number\">50</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">yyaxis right;<span class=\"comment\">%激活右边的轴</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:m,Q(<span class=\"number\">1</span>:m,k));</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:m,Qtsjy(<span class=\"number\">1</span>:m,k));<span class=\"comment\">%Qtsjy</span></span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;right 流量(m³/s)&quot;</span>);</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,m]);</span><br><span class=\"line\">ylim([<span class=\"number\">0</span> <span class=\"number\">3000</span>]);</span><br><span class=\"line\">xticks(<span class=\"number\">1</span>:<span class=\"number\">1</span>:m);</span><br><span class=\"line\">title(<span class=\"string\">&quot;场次二预报结果&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">xticklabels([&quot;5-10&quot;,&quot;5-11&quot;,&quot;5-12&quot;,&quot;5-13&quot;,&quot;5-14&quot;,&quot;5-15&quot;,&quot;5-16&quot;,&quot;5-17&quot;,&quot;5-18&quot;,&quot;5-19&quot;,&quot;5-20&quot;]);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<p>在分析结果后，发现整个预报的参数还有可以率定的余地。在不改变所有计算初值的情况下，现在需要研究各个参数对预报结果的影响，以期改善预报结果。</p>\r\n<p>尝试人工试错优选后，发现参数的改变会出现不好的预报变好了但是好的预报又变差了，所以现在考虑编程，使用Rockenbrock函数法进行参数优选。</p>\r\n<p>[Rockenbrock函数]http://t.csdnimg.cn/3ETMb</p>\r\n<hr />\r\n<p>7.4正式完成课设。</p>\r\n<h3 id=\"总结\">总结</h3>\r\n<p>本次课设的重点和难点并不在于如何编程和设置数据结构，因为一切使用的公式书中都有给出。重点在于如何通过改变参数使结果能达到一个较好的预期，真正的任务量在于调参，算是一种全新的设计体验。</p>\r\n<hr />\r\n<section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"\r\nrole=\"doc-endnotes\">\r\n<hr />\r\n<ol>\r\n<li id=\"fn1\"><p>K为一确定常数，由<span\r\nclass=\"math inline\">\\(W_t=KQ_t\\)</span>确定。该式表明，当泄流流量恒定为<span\r\nclass=\"math inline\">\\(Q_t\\)</span>，K是泄完蓄水量<span\r\nclass=\"math inline\">\\(W_t\\)</span>所需的时间。由于蓄量分布在流域上，距出口断面的距离远近不同。汇集时间大小不等，其平均汇集时间应等于K。从这个意义上讲，K又可以解释为流域水流平均汇集时间。<a\r\nhref=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\r\n<li id=\"fn2\"><p>《水文预报（第五版）》，主编：包为民，2017<a\r\nhref=\"#fnref2\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\r\n</ol>\r\n</section>\r\n","categories":["Curriculum design"],"tags":["application"]},{"title":"水电站课设(二)","url":"/2024/06/24/%E6%B0%B4%E7%94%B5%E7%AB%99%E8%AF%BE%E8%AE%BE-%E4%BA%8C/","content":"<p>2024.6.23 好久不见。 <span id=\"more\"></span>\r\n第六学期的考试正式结束，意味着小学期的课设正式开始。水电站课程设计的任务在十天前已经下发，现在来做一个总结。\r\n## 使用数据</p>\r\n<p>计算期初水位：173.45 优化调度最小下泄流量：4690 比较年份：1949</p>\r\n<h2 id=\"新任务\">新任务</h2>\r\n<p>提取各时段的运行规则。根据水库优化调度模型求解结果，提取各时段的调度规则。</p>\r\n<h2 id=\"问题分析\">问题分析</h2>\r\n<p>-- 使用的数据是水库优化调度模型所得到的求解结果 --\r\n目前需要首先重新修正优化调度模型，修正结果，增加数据结果，形成数据总表</p>\r\n<h3 id=\"代码改进\">代码改进</h3>\r\n<p>在阅读文献的时候没有发现有设置汛期水位完全不变的情况，故现在对结课设计进行改变，取消汛期水位限制。另外需要将所有约束条件放入if内，修正递推函数。</p>\r\n<p>目前决定重新编制优化调度代码，首先列出约束条件、初始值、递推函数，预计明天完善完成。代码如下：</p>\r\n<details>\r\n<summary>\r\n代码一\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码（第二版）</span></span><br><span class=\"line\"><span class=\"comment\">%确定初始值及数据结构</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>) = <span class=\"number\">377.45</span>;<span class=\"comment\">%计算初始库容</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>) = <span class=\"number\">175</span>;<span class=\"comment\">%计算初始水位</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\"><span class=\"comment\">%设决策变量为下泄流量Qfd(t,1),可能出现弃水Qqs(t,1)</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">H(t) = head(Qxx,hsy);<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t) = Yuxcl(H(t));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t) = Xiaxnl(hsy);<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = input(<span class=\"string\">&quot;最小生态流量为&quot;</span>);<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"><span class=\"comment\">%水量平衡约束</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>) = V(t)+(Qrk(t)-Qfd(t)-Qqs(t))*T(t);</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%库水位约束</span></span><br><span class=\"line\">Z(t) &gt;= <span class=\"number\">145</span>;</span><br><span class=\"line\">Z(t) &lt;= <span class=\"number\">185</span>;</span><br><span class=\"line\"><span class=\"comment\">%初末库水位约束</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数</span></span><br><span class=\"line\">P(t) = k*Qfd(t)*H(t);</span><br><span class=\"line\"><span class=\"keyword\">if</span> P(t) &gt; Pb</span><br><span class=\"line\">    P(t) = P(t);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    P(t) = P(t) + b*(P(t)-Pb);<span class=\"comment\">%b为惩罚系数</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%递推函数</span></span><br><span class=\"line\">SumP(t) = <span class=\"built_in\">max</span>(P(t)+SumP(t+<span class=\"number\">1</span>));</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"今日任务\">今日任务</h2>\r\n<p>处理状态和决策离散化与时段平均出力的计算方法和具体代码。</p>\r\n<h3 id=\"进度\">进度</h3>\r\n<p>基本完成代码编制，但是数据意义还需要思考，另需要正确获取最优解的数值。</p>\r\n<h3 id=\"新知识点\">新知识点</h3>\r\n<p>max函数意为返回数组的最大值。</p>\r\n<h2 id=\"明日任务\">明日任务</h2>\r\n<p>完成动态规划代码修改</p>\r\n<hr />\r\n<h2 id=\"进度-1\">进度</h2>\r\n<p>昨晚进行到需要在已得到数据中提取需要的最优解的一组数据，但收工后思考之后发现，如果按照真正计算出来的所有结果来选择最优解，就失去了所谓动态规划面向时段的优势和意义，即无视了动态规划的性质——最优解的每个局部解也都是最优的。</p>\r\n<p>故现在开始思考，为什么课本上和课堂上老师都在强调逆推过程而不是更加符合时间顺序的顺推过程？目前我认为，逆推时后一时段的水位和面临时段的来流可以看作八个约束条件之一，每一个时段的计算都是已知结果通过下泄流量来确定上一时段的库容和水位，依此找到确定结果的放水过程的最优解。</p>\r\n<h3 id=\"结论任务\">结论&amp;任务</h3>\r\n<p>上述思想可行且所得到的结果效果很好，和结果设计版本相比有较大的完善。在结课作业中尚有一项未能完成，即惩罚因子的大小和保证率的关系。接下来寻找一下二者的函数关系。</p>\r\n<h4 id=\"结论\">结论</h4>\r\n<p>没有找到关系☹️</p>\r\n<p>现附所有动态规划代码如下：</p>\r\n<details>\r\n<summary>\r\n代码二\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码（第二版）</span></span><br><span class=\"line\"><span class=\"comment\">%确定初始值及数据结构</span></span><br><span class=\"line\">n = <span class=\"number\">36</span>;<span class=\"comment\">%计算时段数</span></span><br><span class=\"line\">Vmin = <span class=\"number\">171.5</span>;</span><br><span class=\"line\">Vmax = <span class=\"number\">505</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">V(<span class=\"number\">36</span>,:) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">V(<span class=\"number\">1</span>,:) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,:) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,:) = <span class=\"number\">175</span>;<span class=\"comment\">%计算初始水位</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">P = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">SumP = <span class=\"number\">0</span>;</span><br><span class=\"line\">T = <span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%各时段时间间隔</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%设决策变量为下泄流量Qfd(t,1),可能出现弃水Qqs(t,1)</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%单时段离散化与平均出力的计算方法</span></span><br><span class=\"line\"><span class=\"comment\">%将一时段的状态V(t)离散为M个数值</span></span><br><span class=\"line\"><span class=\"comment\">%又水库水位限制为(145,185)</span></span><br><span class=\"line\"><span class=\"comment\">%故首先选择将水库库容离散为40个数值（即一米一个库容）</span></span><br><span class=\"line\"><span class=\"comment\">%又首先需要确定Qfd的离散值</span></span><br><span class=\"line\"><span class=\"comment\">%故制作Qfd初始值表格</span></span><br><span class=\"line\"><span class=\"comment\">%表格范围设置为（生态流量，时段最大下泄流量）</span></span><br><span class=\"line\"><span class=\"comment\">%此次计算设Qfd为决策变量</span></span><br><span class=\"line\">b = <span class=\"built_in\">linspace</span>(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"comment\">%b = 0.8;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\">flag = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">35</span></span><br><span class=\"line\"></span><br><span class=\"line\">t = n-<span class=\"built_in\">j</span>;</span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> t == <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">i</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Qxx(t,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t,<span class=\"number\">1</span>) - (V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - V(t,<span class=\"number\">1</span>))/T);</span><br><span class=\"line\">     <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">     Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">     <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">     [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t,<span class=\"built_in\">i</span>)] = head(Qxx(t,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">     <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">     P(t+<span class=\"number\">1</span>,:) = kcl(t,<span class=\"built_in\">i</span>)*Qxx(t,<span class=\"built_in\">i</span>)*H(t,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">     Pmax(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">     h(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">     <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">1000</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">    xxnl(t) = Xiaxnl(Z(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前上游水位,计算当前时段水库最大下泄能力</span></span><br><span class=\"line\">    Qfd = <span class=\"built_in\">linspace</span>(Qst,xxnl(t),<span class=\"number\">1000</span>);<span class=\"comment\">%Qfd初始数组，共1000个数据点</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            V(t,<span class=\"built_in\">i</span>) = V(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) - (Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"built_in\">i</span>))*T;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> V(t,<span class=\"built_in\">i</span>) &lt; Vmin</span><br><span class=\"line\">                V(t,<span class=\"built_in\">i</span>) = Vmin;</span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - (V(t+<span class=\"number\">1</span>) - V(t))/T);</span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">            Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">            <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">            [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)] = head(Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &lt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;<span class=\"comment\">%继续i循环</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">            P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">            <span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">            yxcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Yuxcl(H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;<span class=\"comment\">%跳出i循环</span></span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> V(t,<span class=\"built_in\">i</span>) &gt; Vmax</span><br><span class=\"line\">                Qqs(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = (V(t,<span class=\"built_in\">i</span>)-Vmax)/T;</span><br><span class=\"line\">                V(t,<span class=\"built_in\">i</span>) = Vmax;</span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = <span class=\"built_in\">abs</span>(Qrk(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - (V(t,<span class=\"built_in\">i</span>) - V(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>))/T);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Qfd(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">           </span><br><span class=\"line\">            <span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">            Z(t,<span class=\"built_in\">i</span>) = Kurqx(V(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\">            <span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">            [H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)] = head(Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>),Z(t,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">            <span class=\"comment\">%时段平均出力</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &lt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\">            P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = kcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*Qxx(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)*H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\">            <span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">            yxcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Yuxcl(H(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">%%指标函数</span></span><br><span class=\"line\">            <span class=\"comment\">%</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> P(t,<span class=\"built_in\">i</span>) &gt; yxcl(t)</span><br><span class=\"line\">                P(t,<span class=\"built_in\">i</span>) = yxcl(t);</span><br><span class=\"line\">                <span class=\"comment\">%flag(t) = 1;</span></span><br><span class=\"line\">            <span class=\"comment\">%&#125;</span></span><br><span class=\"line\">            <span class=\"keyword\">elseif</span> P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) &gt; Pb &amp;&amp; P(t,<span class=\"built_in\">i</span>) &lt; yxcl(t)</span><br><span class=\"line\">                P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">                <span class=\"comment\">%flag(t) = 1;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) + b(<span class=\"number\">1</span>,k)*(P(t+<span class=\"number\">1</span>,<span class=\"built_in\">i</span>)-Pb);<span class=\"comment\">%b为惩罚系数</span></span><br><span class=\"line\">            <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> f = <span class=\"number\">1</span>:<span class=\"number\">999</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> P(t+<span class=\"number\">1</span>,f) &gt; P(t+<span class=\"number\">1</span>,f+<span class=\"number\">1</span>)</span><br><span class=\"line\">        Ppro(t+<span class=\"number\">1</span>,f) = P(t+<span class=\"number\">1</span>,f);   </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">[Pmax(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>),l] = <span class=\"built_in\">max</span>(Ppro(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">200</span>));</span><br><span class=\"line\">V(t,:) = V(t,l);</span><br><span class=\"line\">Z(t,:) = Z(t,l);</span><br><span class=\"line\">Q(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qxx(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\">qs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qqs(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\">h(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = H(t+<span class=\"number\">1</span>,l);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> m = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Pmax(m,<span class=\"number\">1</span>) &gt; Pb</span><br><span class=\"line\">    flag = flag+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">per(k,<span class=\"number\">1</span>) = flag/<span class=\"number\">36</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>做出图像如下：</p>\r\n<p><img src=\"/images/youhuadiaodu.png\" alt=\"优化调度图像\" /> <img\r\nsrc=\"/images/yhliuliang.png\" alt=\"优化调度出库入库流量图像\" /></p>\r\n<h2 id=\"明日任务-1\">明日任务</h2>\r\n<p>读文献，基本得出函数关系式，基本确定编程思路，得出所有可以用于训练模型的数据。</p>\r\n<hr />\r\n<h2 id=\"读文献有感\">读文献有感</h2>\r\n<ul>\r\n<li><p>具体阅读了有关NSGA-Ⅱ(Non-dominated Sorting Genetic\r\nAlgorithm)的优化思路和实现方法，如果在课设报告提交前尚有时间，可以考虑把优化调度的方法从动态规划改变为NSGA。\r\n[1] A Fast Non-dominated Sorting Genetic Algorithm For Multi-objective\r\nOptimization:NSGA-Ⅱ</p></li>\r\n<li><p>粒子群优化算法（PSO）由鸟群寻找食物得到灵感，通过计算寻找“最好的”粒子，即“离食物最近的”粒子，因此可用于在已有优化调度数据的前提下拟合提取调度函数。</p></li>\r\n</ul>\r\n<p>有一关键评价函数，优化适应度函数。用于评价每一个粒子的“好坏”，从而决定优化方向。</p>\r\n<h2 id=\"调度函数表达式\">调度函数表达式</h2>\r\n<p><span class=\"math display\">\\[ Q_{t} = \\alpha_{t} \\cdot I_{t} +\r\n\\beta_{t} \\cdot _V{t} \\]</span></p>\r\n<p>其中，<span class=\"math inline\">\\(Q_{t}\\)</span>\r\n为t时段下泄流量，<span class=\"math inline\">\\(I_{t}\\)</span>\r\n为t时段入流，<span class=\"math inline\">\\(V_{t}\\)</span>\r\n为t时段初库容.</p>\r\n<h3 id=\"matlab语法学习\">matlab语法学习</h3>\r\n<p>1.函数句柄：在matlab中，函数可以像变量一样进行传递和操作。函数句柄就是指向函数的指针，可以调用函数或者将函数作为参数传递给其他函数。</p>\r\n<p>2.@符号：在matlab中，<span class=\"citation\"\r\ndata-cites=\"符号用于创建函数句柄\">@符号用于创建函数句柄</span>。</p>\r\n<h3 id=\"pso算法具体实现代码\">PSO算法具体实现代码</h3>\r\n<p>http://t.csdnimg.cn/Xpizk</p>\r\n<details>\r\n<summary>\r\nPSO算法\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%pop——种群数量</span></span><br><span class=\"line\"><span class=\"comment\">%dim——问题维度</span></span><br><span class=\"line\"><span class=\"comment\">%ub——变量上界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%lb——变量下界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%fobj——适应度函数（指针）</span></span><br><span class=\"line\"><span class=\"comment\">%MaxIter——最大迭代次数</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Pos——x的最佳值</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Score——最优适应度</span></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">clc;</span><br><span class=\"line\">clear all;</span><br><span class=\"line\">close all;</span><br><span class=\"line\">pop=<span class=\"number\">50</span>;</span><br><span class=\"line\">dim=<span class=\"number\">2</span>;</span><br><span class=\"line\">ub=[<span class=\"number\">10</span>,<span class=\"number\">10</span>];</span><br><span class=\"line\">lb=[<span class=\"number\">-10</span>,<span class=\"number\">-10</span>];</span><br><span class=\"line\">vmax=[<span class=\"number\">2</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">vmin=[<span class=\"number\">-2</span>,<span class=\"number\">-2</span>];</span><br><span class=\"line\">maxIter=<span class=\"number\">100</span>;</span><br><span class=\"line\">fobj=@(X)fun(X);</span><br><span class=\"line\">[Best_Pos,Best_fitness,IterCurve]=pso(pop,dim,ub,lb,fobj,vmax,vmin,maxIter);</span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(IterCurve,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;linewidth&#x27;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">grid on;</span><br><span class=\"line\"><span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;求解得到的x1，x2是:&#x27;</span>,num2str(Best_Pos(<span class=\"number\">1</span>)),<span class=\"string\">&#x27; &#x27;</span>,num2str(Best_Pos(<span class=\"number\">2</span>))]);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>([<span class=\"string\">&#x27;最优解对应的函数:&#x27;</span>,num2str(Best_fitness)]);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%确定计算初始值 </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">initialization</span><span class=\"params\">(pop,ub,lb,dim)</span>%得到在范围内的初始数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=(ub(<span class=\"built_in\">j</span>)-lb(<span class=\"built_in\">j</span>))*<span class=\"built_in\">rand</span>()+lb(<span class=\"built_in\">j</span>);<span class=\"comment\">%在限定的  </span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fitness</span>=<span class=\"title\">fun</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    fitness=sum(x.^<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">BoundaryCheck</span><span class=\"params\">(X,ub,lb,dim)</span>%检查原始数据</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&gt;ub(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=ub(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&lt;lb(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=lb(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%PSO计算</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[Best_Pos,Best_fitness,IterCurve]</span>=<span class=\"title\">pso</span><span class=\"params\">(pop,dim,ub,lb,fobj,vmax,vmin,maxIter)</span></span></span><br><span class=\"line\">c1=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">c2=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">V=initialization(pop,vmax,vmin,dim);</span><br><span class=\"line\">X=initialization(pop,ub,lb,dim);</span><br><span class=\"line\">fitness=<span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,pop);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">    fitness(<span class=\"built_in\">i</span>)=fobj(X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">pBest=X;</span><br><span class=\"line\">pBestFitness=fitness;</span><br><span class=\"line\">[~,index]=<span class=\"built_in\">min</span>(fitness);</span><br><span class=\"line\">gBestFitness=fitness(index);</span><br><span class=\"line\">gBest=X(index,:);</span><br><span class=\"line\">Xnew=X;</span><br><span class=\"line\">fitnessNew=fitness;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t=<span class=\"number\">1</span>:maxIter</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        r1=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        r2=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=V(<span class=\"built_in\">i</span>,:)+c1.*r1.*(pBest(<span class=\"built_in\">i</span>,:)-X(<span class=\"built_in\">i</span>,:))+c2.*r2.*(gBest-X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=BoundaryCheck(V(<span class=\"built_in\">i</span>,:),vmax,vmin,dim);</span><br><span class=\"line\">        Xnew(<span class=\"built_in\">i</span>,:)=X(<span class=\"built_in\">i</span>,:)+V(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        fitnessNew(<span class=\"built_in\">i</span>)=fobj(Xnew(<span class=\"number\">1</span>,:));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;pBestFitness(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            pBest(<span class=\"built_in\">i</span>,:)=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">            pBestFitness(<span class=\"built_in\">i</span>)=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;gBestFitness</span><br><span class=\"line\">            gBestFitness=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            gBest=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    X=Xnew;</span><br><span class=\"line\">    fitness=fitnessNew;</span><br><span class=\"line\">    Best_Pos=gBest;</span><br><span class=\"line\">    Best_fitness=gBestFitness;</span><br><span class=\"line\">    IterCurve(t)=gBestFitness;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"需要解决的问题\">需要解决的问题</h3>\r\n<p>根据上述代码及文献，已经基本搞清楚PSO算法的编写过程和思路。现在需要解决的关键问题是如何设置变量内容、变量的数据结构和变量的上下界，即如何利用优化调度已经得到的数据通过PSO得到想要的参数拟合结果。</p>\r\n<p>根据所找文献，他将参数按照月份进行了划分，将非汛期的每一月都进行了参数拟合计算。所以提出以下思路：</p>\r\n<ul>\r\n<li><p>将每一月的入库流量和下泄流量作为输入参数，从1941-1990共50年，即初始种群数为50，先假设迭代次数为200。</p></li>\r\n<li><p>按照文献已经得到的参数，假设需要得到的三个参数为“粒子的最优坐标”，即三维PSO问题。</p></li>\r\n</ul>\r\n<h2 id=\"明日任务-2\">明日任务</h2>\r\n<p>完成变量数据结构设计，初步完成PSO代码。</p>\r\n<hr />\r\n<h3 id=\"matlab语法学习-1\">matlab语法学习</h3>\r\n<ul>\r\n<li>num2str函数：将数字转换为字符数组</li>\r\n</ul>\r\n<h2 id=\"训练数据准备\">训练数据准备</h2>\r\n<p>按照列出的关系表达式，需要的初始数据有：当前时段的初始库容、时段入流，以及由优化调度得到的下泄流量。</p>\r\n<p>依据文献所给思路，编制50年各旬下泄流量、初始库容、时段入流的数据表，即36个50×3列数据表。</p>\r\n<h2 id=\"训练数据使用\">训练数据使用</h2>\r\n<p>每一旬得到的三组数据用于拟合数据参数，相当于二元一次线性非齐次方程组求“最接近的解。对于PSO，初始搜索点的位置及速度一般是在允许的范围内随机产生的，而对于函数提取，初始点的数据即为优化调度已得到的数据。</p>\r\n<p>类比可以推测，可以将时段入流和初始库容作为”初始搜索点“，即初始位置，将下泄流量作为速度。</p>\r\n<p>接上述观点，既然PSO不需要初始值，是不是优化调度获得的数据其实并不能直接用于参数估计，而是作为变量范围作为参考，迭代次数增加其实是在更加逼近范围内的最优值，而最优值也是由优化调度过程给出的。所以PSO是作为反映优化调度规律，便于调度计算而使用的算法。</p>\r\n<h2 id=\"结果\">结果</h2>\r\n<p>现得到36组参数数据，还需要带入具体流量数据进行测试。</p>\r\n<hr />\r\n<h2 id=\"成果得出\">成果得出</h2>\r\n<p>最后得到由调度函数调度的水位变化曲线和下泄流量曲线。</p>\r\n<p>修改的PSO算法代码如下：</p>\r\n<details>\r\n<summary>\r\nPSO算法（修改版）\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%pop——种群数量</span></span><br><span class=\"line\"><span class=\"comment\">%dim——问题维度</span></span><br><span class=\"line\"><span class=\"comment\">%ub——变量上界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%lb——变量下界，[1,dim]矩阵</span></span><br><span class=\"line\"><span class=\"comment\">%fobj——适应度函数（指针）</span></span><br><span class=\"line\"><span class=\"comment\">%MaxIter——最大迭代次数</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Pos——x的最佳值</span></span><br><span class=\"line\"><span class=\"comment\">%Best_Score——最优适应度</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\">a = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">b = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>);</span><br><span class=\"line\">c = Data(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-2</span>);</span><br><span class=\"line\">pop=<span class=\"number\">50</span>;</span><br><span class=\"line\">dim=<span class=\"number\">2</span>;</span><br><span class=\"line\">vmax=[<span class=\"built_in\">max</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>)),<span class=\"built_in\">max</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>))];</span><br><span class=\"line\">vmin=[<span class=\"built_in\">min</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>)),<span class=\"built_in\">min</span>(Data(:,<span class=\"number\">3</span>*<span class=\"built_in\">i</span>))];</span><br><span class=\"line\">ub=[<span class=\"number\">2</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\">lb=[<span class=\"number\">0</span>,<span class=\"number\">0</span>];</span><br><span class=\"line\">maxIter=<span class=\"number\">2000</span>;</span><br><span class=\"line\">fobj=@(X,a,b,c)fun(X,a,b,c);</span><br><span class=\"line\">[Best_Pos,Best_fitness,IterCurve]=pso(pop,dim,ub,lb,fobj,vmax,vmin,maxIter,a,b,c);</span><br><span class=\"line\">canshu(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>*<span class=\"built_in\">i</span><span class=\"number\">-1</span>) = Best_Pos(<span class=\"number\">1</span>);</span><br><span class=\"line\">canshu(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>*<span class=\"built_in\">i</span>) = Best_Pos(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">figure</span></span><br><span class=\"line\"><span class=\"comment\">plot(IterCurve,&#x27;r&#x27;,&#x27;linewidth&#x27;,2);</span></span><br><span class=\"line\"><span class=\"comment\">grid on;</span></span><br><span class=\"line\"><span class=\"comment\">disp([&#x27;求解得到的x1，x2是:&#x27;,num2str(Best_Pos(1)),&#x27; &#x27;,num2str(Best_Pos(2))]);</span></span><br><span class=\"line\"><span class=\"comment\">disp([&#x27;最优解对应的函数:&#x27;,num2str(Best_fitness)]);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">72</span>    </span><br><span class=\"line\">    ave(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">mean</span>(canshu(:,<span class=\"built_in\">i</span>));</span><br><span class=\"line\">    <span class=\"comment\">%ave(2*i,2) = mean(canshu(:,2*i));</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">%初始化粒子坐标和粒子速度</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">initialization</span><span class=\"params\">(pop,ub,lb,dim)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=(ub(<span class=\"built_in\">j</span>)-lb(<span class=\"built_in\">j</span>))*<span class=\"built_in\">rand</span>()+lb(<span class=\"built_in\">j</span>);<span class=\"comment\">%在限定的  </span></span><br><span class=\"line\">        <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fitness</span>=<span class=\"title\">fun</span><span class=\"params\">(x,a,b,c)</span></span></span><br><span class=\"line\">    fitness=sum(<span class=\"built_in\">abs</span>(c-x.*[a;b*<span class=\"number\">100000000</span>/(<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">10</span>)]*[<span class=\"number\">1</span>;<span class=\"number\">1</span>]));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%检查初始数据点坐标位置是否在允许范围内</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[X]</span>=<span class=\"title\">BoundaryCheck</span><span class=\"params\">(X,ub,lb,dim)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:dim</span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&gt;ub(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=ub(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> X(<span class=\"built_in\">i</span>)&lt;lb(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            X(<span class=\"built_in\">i</span>)=lb(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[Best_Pos,Best_fitness,IterCurve]</span>=<span class=\"title\">pso</span><span class=\"params\">(pop,dim,ub,lb,fobj,vmax,vmin,maxIter,a,b,c)</span></span></span><br><span class=\"line\">c1=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">c2=<span class=\"number\">2.0</span>;</span><br><span class=\"line\">V=initialization(pop,vmax,vmin,dim);</span><br><span class=\"line\">X=initialization(pop,ub,lb,dim);</span><br><span class=\"line\">fitness=<span class=\"built_in\">zeros</span>(<span class=\"number\">1</span>,pop);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">    fitness(<span class=\"built_in\">i</span>)=fobj(X(<span class=\"built_in\">i</span>,:),a,b,c);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">pBest=X;</span><br><span class=\"line\">pBestFitness=fitness;</span><br><span class=\"line\">[~,index]=<span class=\"built_in\">min</span>(fitness);</span><br><span class=\"line\">gBestFitness=fitness(index);</span><br><span class=\"line\">gBest=X(index,:);</span><br><span class=\"line\">Xnew=X;</span><br><span class=\"line\">fitnessNew=fitness;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t=<span class=\"number\">1</span>:maxIter</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:pop</span><br><span class=\"line\">        r1=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        r2=<span class=\"built_in\">rand</span>(<span class=\"number\">1</span>,dim);</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=V(<span class=\"built_in\">i</span>,:)+c1.*r1.*(pBest(<span class=\"built_in\">i</span>,:)-X(<span class=\"built_in\">i</span>,:))+c2.*r2.*(gBest-X(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        V(<span class=\"built_in\">i</span>,:)=BoundaryCheck(V(<span class=\"built_in\">i</span>,:),vmax,vmin,dim);</span><br><span class=\"line\">        Xnew(<span class=\"built_in\">i</span>,:)=X(<span class=\"built_in\">i</span>,:)+V(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        fitnessNew(<span class=\"built_in\">i</span>)=fobj(Xnew(<span class=\"number\">1</span>,:),a,b,c);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;pBestFitness(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">            pBest(<span class=\"built_in\">i</span>,:)=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">            pBestFitness(<span class=\"built_in\">i</span>)=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> fitnessNew(<span class=\"built_in\">i</span>)&lt;gBestFitness</span><br><span class=\"line\">            gBestFitness=fitnessNew(<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            gBest=Xnew(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    X=Xnew;</span><br><span class=\"line\">    fitness=fitnessNew;</span><br><span class=\"line\">    Best_Pos=gBest;</span><br><span class=\"line\">    Best_fitness=gBestFitness;</span><br><span class=\"line\">    IterCurve(t)=gBestFitness;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>根据所提取的调度函数进行时段计算的代码如下：</p>\r\n<details>\r\n<summary>\r\n调度函数\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%利用调度函数调度(1949)</span></span><br><span class=\"line\">flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">T = <span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">10</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">Vmax = <span class=\"number\">505</span>;</span><br><span class=\"line\">Zmax = <span class=\"number\">185</span>;</span><br><span class=\"line\">Vhs = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Vhs(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">377.45</span>;</span><br><span class=\"line\">Zhs = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Zhs(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">173.45</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\">Qhs(t,<span class=\"number\">1</span>) = ave(<span class=\"number\">2</span>*t<span class=\"number\">-1</span>,<span class=\"number\">1</span>)*Qrk(t,<span class=\"number\">1</span>)+ave(<span class=\"number\">2</span>*t,<span class=\"number\">1</span>)*Vhs(t,<span class=\"number\">1</span>)/T;</span><br><span class=\"line\">Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Vhs(t,<span class=\"number\">1</span>) + (Qrk(t,<span class=\"number\">1</span>)-Qhs(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"keyword\">if</span> Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt; Vmax</span><br><span class=\"line\">    Qhsqs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = (Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Vmax)/T;</span><br><span class=\"line\">    Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Vmax;</span><br><span class=\"line\">    Zhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Zmax;</span><br><span class=\"line\">    Qhs(t,<span class=\"number\">1</span>) = Qrk(t,<span class=\"number\">1</span>)-(Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Vhs(t,<span class=\"number\">1</span>))/T;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Zhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Kurqx(Vhs(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[Hhs(t,<span class=\"number\">1</span>),kclhs(t,<span class=\"number\">1</span>)] = head(Qhs(t,<span class=\"number\">1</span>),Zhs(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\">Phs(t,<span class=\"number\">1</span>) = kclhs(t,<span class=\"number\">1</span>)*Qhs(t,<span class=\"number\">1</span>)*<span class=\"built_in\">abs</span>(Hhs(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Phs(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &gt; <span class=\"number\">499</span></span><br><span class=\"line\">        flag = flag + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">per = flag/<span class=\"number\">36</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">37</span>,Zhs(:,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">0</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">190</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,Qhs(:,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;下泄流量/m³&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1949年来流调度函数水位变化曲线&quot;</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<figure>\r\n<img src=\"/images/diaoduhanshushuiweibianhuatu.png\"\r\nalt=\"调度函数图像\" />\r\n<figcaption aria-hidden=\"true\">调度函数图像</figcaption>\r\n</figure>\r\n<h2 id=\"结果比较\">结果比较</h2>\r\n<p>根据得出的数据对常规调度、优化调度、调度函数调度进行比较。</p>\r\n<p>选择比较的参数：平均水位、发电水头、下泄流量、弃水量、保证率和总发电量。</p>\r\n<p>经比较可以发现，三种方法的平均水位，平均下泄流量和发电水头差别不大，调度函数调度弃水较多，而常规调度后期水位很高，但前期为了符合调度图调度发电量较低，其中优化调度的结果较为实用。</p>\r\n<p>具体比较数据见下表。</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 13%\" />\r\n<col style=\"width: 13%\" />\r\n<col style=\"width: 10%\" />\r\n<col style=\"width: 13%\" />\r\n<col style=\"width: 13%\" />\r\n<col style=\"width: 20%\" />\r\n<col style=\"width: 13%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th></th>\r\n<th>平均出力</th>\r\n<th>保证率</th>\r\n<th>平均水头</th>\r\n<th>平均水位</th>\r\n<th>平均下泄流量</th>\r\n<th>弃水量</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>常规调度</td>\r\n<td>431.59</td>\r\n<td>55%</td>\r\n<td>91.69</td>\r\n<td>165.62</td>\r\n<td>17364.8</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>优化调度</td>\r\n<td>779.81</td>\r\n<td>95%</td>\r\n<td>55</td>\r\n<td>166</td>\r\n<td>17557.44</td>\r\n<td>0</td>\r\n</tr>\r\n<tr>\r\n<td>调度图</td>\r\n<td>445.4</td>\r\n<td>65%</td>\r\n<td>57</td>\r\n<td>168.77</td>\r\n<td>17441.272</td>\r\n<td>33039.45</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","categories":["Curriculum design"],"tags":["application"]},{"title":"算法学习记录","url":"/2024/09/24/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","content":"<h2 id=\"两数之和\">两数之和</h2>\r\n<p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出\r\n和为目标值 target 的那 两个 整数，并返回它们的数组下标。</p>\r\n<p>你可以假设每种输入只会对应一个答案，并且你不能使用两次相同的元素。</p>\r\n<p>你可以按任意顺序返回答案。</p>\r\n<h3 id=\"思路一暴力求解\">思路一、暴力求解</h3>\r\n<p>输入所给数组，将其遍历求和，判断其值是否等于目标值，若等于则输出两个数的数组下标。</p>\r\n<details>\r\n<summary>\r\n求解代码如下\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">twoSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> n = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; ++j)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(nums[i] + nums[j] == target)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> &#123;i , j&#125;;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> &#123;&#125;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"回文数\">回文数</h2>\r\n<p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false\r\n。</p>\r\n<p>回文数 是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>\r\n<p>例如，121 是回文，而 123 不是。</p>\r\n<h3 id=\"思路反转一半数字\">思路：反转一半数字</h3>\r\n<p>既然数字为回文数，则可以将其反转一半来判断。</p>\r\n<p>首先考虑一些临界情况。一定不是回文数的有负数及个位数，故首先排除。</p>\r\n<p>再来考虑如何反转后半部分的数字。为得到后半数字，可以进行%10计算，在循环内重组后半数字的顺序。例如对于1221这个数字，先通过/10移除最后一个数字得到122，再求出1221%10得到1。122%10则可以得到倒数第二位数字。如果我们把倒数第一位数字*10再加上倒数第二位数字，则得到了反转后的数字，以此类推。</p>\r\n<p>关键在于如何知道我们已经反转了一半的数字。由于我们不断地将原始数字/10，然后给反转的数字*10，故当原始数字小于等于反转后的数字时，我们就已经处理了一半的数字了。</p>\r\n<details>\r\n<summary>\r\n回文数\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPalindrome</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x &lt; <span class=\"number\">0</span> || (x/<span class=\"number\">10</span> == <span class=\"number\">0</span> &amp;&amp; x != <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> revertedNumber = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (x &gt; revertedNumber)&#123;</span><br><span class=\"line\">\t\t\trevertedNumber = revertedNumber * <span class=\"number\">10</span> + x%<span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t\tx /= <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> x == revertedNumber || x == revertedNumber/<span class=\"number\">10</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//若x有奇数个数字，则中间一位并不影响回文数的性质，去掉中间一位即可</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"多数元素\">多数元素</h2>\r\n<p>给定一个大小为 n 的数组 nums\r\n，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋\r\n的元素。</p>\r\n<p>你可以假设数组是非空的，并且给定的数组总是存在多数元素。</p>\r\n<h3 id=\"思路摩尔投票法\">思路：摩尔投票法</h3>\r\n<p>核心理念为票数正负抵消。</p>\r\n<p>在本题中，假设数组长度为n，数组的众数为x。</p>\r\n<ul>\r\n<li>推论一：若记众数的票数为+1，非众数的票数为-1，则所有数字的和一定&gt;0。</li>\r\n<li>推论二：若数组前a个数票数和为0，则剩余（n-a）个数字的众数仍为x。</li>\r\n</ul>\r\n<p>根据以上推论，当发生票数和=0的时候，剩余数组的众数一定不变，因为：</p>\r\n<ul>\r\n<li><p>若 <span class=\"math inline\">\\(n_1\\)</span> =\r\nx，则已经遍历过的数组中有一半是众数。</p></li>\r\n<li><p>若 <span class=\"math inline\">\\(n_1\\)</span> !=\r\nx，则所有抵消过的数字中众数的个数最小是0个，最大是一半。</p></li>\r\n</ul>\r\n<p>即按照以上推论，每次出现票数和为零都可以缩小搜索范围，直到遍历完成，最后一个假定的数字即为众数。</p>\r\n<details>\r\n<summary>\r\n多数元素\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">majorityElement</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x = <span class=\"number\">0</span>, votes = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (votes == <span class=\"number\">0</span>) x = num;<span class=\"comment\">//当票数和为零的时候假设当前数字为众数</span></span><br><span class=\"line\">            votes += num == x ? <span class=\"number\">1</span> : <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"区间和的个数\">区间和的个数</h2>\r\n<p>给你一个整数数组 nums 以及两个整数 lower 和 upper\r\n。求数组中，值位于范围 [lower, upper] （包含 lower 和 upper）之内的\r\n区间和的个数 。</p>\r\n<p>区间和 S(i, j) 表示在 nums 中，位置从 i 到 j 的元素之和，包含 i 和 j\r\n(i ≤ j)。</p>\r\n<h3 id=\"思路归并排序\">思路：归并排序</h3>\r\n<p>设前缀和数组为<em>Prenum</em> ，则等价于对所有下标\r\n<em>(i,j)</em>，满足 <span\r\nclass=\"math display\">\\[Prenum[j]-Prenum[i]\\in(lower,upper)\\]</span></p>\r\n<p>我们先考虑两个<strong>升序排列</strong>的数组<span\r\nclass=\"math inline\">\\(n_1\\)</span>,<span\r\nclass=\"math inline\">\\(n_2\\)</span>,试找出所有下标对\r\n<em>(i,j)</em>,满足</p>\r\n<p><span\r\nclass=\"math display\">\\[n_1[j]-n_2[i]\\in(lower,upper)\\]</span></p>\r\n<p>在已知两个数组为升序排列的情况下，是相对简单的。我们维护两个指针<em>l</em>,<em>r</em>。起初，他们都指向<span\r\nclass=\"math inline\">\\(n_2\\)</span>的起点。</p>\r\n<p>随后，我们首先考察<span\r\nclass=\"math inline\">\\(n_1\\)</span>的第一个元素。首先，不断将指针<em>l</em>向右移动，直到<span\r\nclass=\"math inline\">\\(n_2[l]-n_1[0]\\ge\r\nlower\\)</span>为止，则此时<em>l</em>右侧的所有元素都满足<span\r\nclass=\"math inline\">\\(n_2[i]-n_1[0]\\ge\r\nlower\\)</span>；然后，向右移动<em>r</em>，直到<span\r\nclass=\"math inline\">\\(n_2[r]-n_1[0]\\ge\r\nupper\\)</span>为止，此时<em>r</em>左侧的所有元素都满足<span\r\nclass=\"math inline\">\\(n_2[r]-n_1[0]\\leq\r\nupper\\)</span>。故<em>l</em>,<em>r</em>区间内的所有元素都满足</p>\r\n<p><span\r\nclass=\"math display\">\\[n_1[j]-n_2[i]\\in(lower,upper)\\]</span></p>\r\n<p>至此，由于数组是升序排列的，所以<em>l</em>,<em>r</em>都只需要向右移动，依此来遍历<span\r\nclass=\"math inline\">\\(n_1\\)</span>中的所有元素，每次都统计下标\r\n<em>(l,r)</em> 的大小，我们就得到了区间和的数量。</p>\r\n<p>因此最后需要考虑的就是得到两个升序数组，则使用归并排序对原数组处理得到两个升序数组用于计算。</p>\r\n<details>\r\n<summary>\r\n区间和的个数\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countRangeSumRecursive</span><span class=\"params\">(vector&lt;<span class=\"type\">long</span>&gt;&amp; sum, <span class=\"type\">int</span> lower, <span class=\"type\">int</span> upper, <span class=\"type\">int</span> left, <span class=\"type\">int</span> right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (left == right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> mid = (left + right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> n1 = <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, left, mid);</span><br><span class=\"line\">            <span class=\"type\">int</span> n2 = <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, mid + <span class=\"number\">1</span>, right);</span><br><span class=\"line\">            <span class=\"type\">int</span> ret = n1 + n2;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 首先统计下标对的数量</span></span><br><span class=\"line\">            <span class=\"type\">int</span> i = left;</span><br><span class=\"line\">            <span class=\"type\">int</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> r = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (i &lt;= mid) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (l &lt;= right &amp;&amp; sum[l] - sum[i] &lt; lower) l++;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (r &lt;= right &amp;&amp; sum[r] - sum[i] &lt;= upper) r++;</span><br><span class=\"line\">                ret += (r - l);</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 随后合并两个排序数组</span></span><br><span class=\"line\">            <span class=\"function\">vector&lt;<span class=\"type\">long</span>&gt; <span class=\"title\">sorted</span><span class=\"params\">(right - left + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> p1 = left, p2 = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (p1 &lt;= mid || p2 &lt;= right) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (p1 &gt; mid) &#123;</span><br><span class=\"line\">                    sorted[p++] = sum[p2++];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p2 &gt; right) &#123;</span><br><span class=\"line\">                    sorted[p++] = sum[p1++];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (sum[p1] &lt; sum[p2]) &#123;</span><br><span class=\"line\">                        sorted[p++] = sum[p1++];</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        sorted[p++] = sum[p2++];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; sorted.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">                sum[left + i] = sorted[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countRangeSum</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> lower, <span class=\"type\">int</span> upper)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">long</span>&gt; sum&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span>&amp; v: nums) &#123;</span><br><span class=\"line\">            s += v;</span><br><span class=\"line\">            sum.<span class=\"built_in\">push_back</span>(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">countRangeSumRecursive</span>(sum, lower, upper, <span class=\"number\">0</span>, sum.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"最大装水\">最大装水</h2>\r\n<p>给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i\r\n条线的两个端点是 (i, 0) 和 (i, height[i]) 。</p>\r\n<p>找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>\r\n<p>返回容器可以储存的最大水量。</p>\r\n<p>说明：你不能倾斜容器。</p>\r\n<h3 id=\"思路双指针\">思路：双指针</h3>\r\n<p>水箱的面积大小由左右两侧最短板的长度决定，故可以得到以下计算公式：</p>\r\n<p><span class=\"math display\">\\[S = min(height[i],height[j]) \\times (j\r\n-i)\\]</span></p>\r\n<p>设置两个指针分别指向水箱的两个端点，当指针对撞的时候结束计算。</p>\r\n<p>每一次移动指针向内收窄，都会导致底板长度-1，这时面积的变化会有两种可能：</p>\r\n<p>1、将指向较长板的指针向内收窄：由于底的长度一定会减小，而板的最小值的长度一定会减小或者不变，故得到的面积<span\r\nclass=\"math inline\">\\(S\\leq S_{min}\\)</span></p>\r\n<p>2、将指向较短板的指针向内收窄：由于板的最小值只可能变大（下一个最短板的长度大于当前最短板）或不变（即当前最短板的长度等于下一组最短板的长度）。</p>\r\n<p>由此，得到解题算法：比较前后指针所指向的板长，每次将指向较短板的指针向内移动，保存最大面积值，直到指针相撞比较结束，返回最大面积。</p>\r\n<details>\r\n<summary>\r\n最大装水\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxArea</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = height.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>, res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(i &lt; j) &#123;</span><br><span class=\"line\">            res = height[i] &lt; height[j] ? </span><br><span class=\"line\">                <span class=\"built_in\">max</span>(res, (j - i) * height[i++]): </span><br><span class=\"line\">                <span class=\"built_in\">max</span>(res, (j - i) * height[j--]); </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"数组中的第k大的元素\">数组中的第k大的元素</h2>\r\n<p>给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。</p>\r\n<p>请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k\r\n个不同的元素。</p>\r\n<p>你必须设计并实现时间复杂度为 O(n) 的算法解决此问题。</p>\r\n<h3 id=\"思路快速选择\">思路：快速选择</h3>\r\n<p>设N为数组长度，根据快速排序原理，如果某次哨兵划分后，基准数的索引恰好为<span\r\nclass=\"math inline\">\\(N-k\\)</span>,则意味着它就是第k大的数字，可以直接返回。</p>\r\n<p>对于包含大量重复数字的数组，每轮的哨兵划分都有可能划分为长度为1，和n-1两个部分，时间复杂度会退化至<span\r\nclass=\"math inline\">\\(O(n^2)\\)</span>。</p>\r\n<p>有一种解决办法是使用<strong>三路划分</strong>，即每次都把数组划分为大于、小于、等于基准数的三部分。</p>\r\n<details>\r\n<summary>\r\n数组中第k大的元素\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">findKthLargest</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(nums, k);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">quickSelect</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 随机选择基准数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> pivot = nums[<span class=\"built_in\">rand</span>() % nums.<span class=\"built_in\">size</span>()];</span><br><span class=\"line\">        <span class=\"comment\">// 将大于、小于、等于 pivot 的元素划分至 big, small, equal 中</span></span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; big, equal, small;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num &gt; pivot)</span><br><span class=\"line\">                big.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num &lt; pivot)</span><br><span class=\"line\">                small.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                equal.<span class=\"built_in\">push_back</span>(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 big 中，递归划分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (k &lt;= big.<span class=\"built_in\">size</span>())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(big, k);</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 small 中，递归划分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.<span class=\"built_in\">size</span>() - small.<span class=\"built_in\">size</span>() &lt; k)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">quickSelect</span>(small, k - nums.<span class=\"built_in\">size</span>() + small.<span class=\"built_in\">size</span>());</span><br><span class=\"line\">        <span class=\"comment\">// 第 k 大元素在 equal 中，直接返回 pivot</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> pivot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"股票\">股票</h2>\r\n<p>有一支股票，你只有一股，已知过去N天的股价，只能进行一次买卖，请问你能获得最大利润是多少</p>\r\n<p>（给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第\r\ni 天的价格。</p>\r\n<p>你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子\r\n卖出该股票。设计一个算法来计算你所能获取的最大利润。</p>\r\n<p>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0\r\n。）</p>\r\n<h3\r\nid=\"思路找到已经过去的每一天的最小值\">思路：找到已经过去的每一天的最小值</h3>\r\n<p>在买卖股票的时候，为了获得最高的利润，肯定希望在最低价买入，在最高价卖出。由此，我们可以遍历数组一边，每次记录已遍历的部分的最小值，然后用于计算和数组后面数字的差的最大值。</p>\r\n<details>\r\n<summary>\r\n买卖股票的时机\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; prices)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> inf = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> minprice = inf, maxprofit = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> price: prices) &#123;</span><br><span class=\"line\">            maxprofit = <span class=\"built_in\">max</span>(maxprofit, price - minprice);</span><br><span class=\"line\">            minprice = <span class=\"built_in\">min</span>(price, minprice);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maxprofit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"判断一个链表中是否存在一个环\">判断一个链表中是否存在一个环</h2>\r\n<p>给出一个链表A-&gt;B-&gt;C-&gt;D-&gt;E-&gt;F-&gt;G-&gt;D，如何判断是否存在环。</p>\r\n<h3 id=\"思路快慢指针\">思路：快慢指针</h3>\r\n<h2 id=\"有序三元数组的最大值\">有序三元数组的最大值</h2>\r\n<p>给你一个下标从 0 开始的整数数组 nums 。</p>\r\n<p>请你从所有满足 i &lt; j &lt; k 的下标三元组 (i, j, k)\r\n中，找出并返回下标三元组的最大值。如果所有满足条件的三元组的值都是负数，则返回\r\n0 。</p>\r\n<p>下标三元组 (i, j, k) 的值等于 (nums[i] - nums[j]) * nums[k] 。</p>\r\n<h3 id=\"思路类似股票问题\">思路：类似<em>股票</em>问题</h3>\r\n<p>和上述买卖股票问题相似，可以先存储（nums[i] -\r\nnums[j]）的最大值，然后枚举k得到三元数组的最大值。</p>\r\n<details>\r\n<summary>\r\n有序三元数组的最大值\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">maximumTripletValue</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> max_diff = <span class=\"number\">0</span>, pre_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x : nums) &#123;</span><br><span class=\"line\">            ans = <span class=\"built_in\">max</span>(ans, (<span class=\"type\">long</span> <span class=\"type\">long</span>) max_diff * x);</span><br><span class=\"line\">            max_diff = <span class=\"built_in\">max</span>(max_diff, pre_max - x);</span><br><span class=\"line\">            pre_max = <span class=\"built_in\">max</span>(pre_max, x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"滑动窗口的最大值\">滑动窗口的最大值</h2>\r\n<p>给你一个整数数组 nums，有一个大小为 k\r\n的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k\r\n个数字。滑动窗口每次只向右移动一位。</p>\r\n<p>返回 <em>滑动窗口中的最大值</em> 。</p>\r\n<h3 id=\"思路单调队列\">思路：单调队列</h3>\r\n<p>通过移动窗口，可以看到每移动一次，队尾向右增加一个数字，队首减少一个数字。每次出队的元素都有可能是最大值，即小于新入队的元素。故想到每次出队入队都将原窗口内的数字和即将入队的数字比较，将最大值存入窗口，将小于最大值的所有元素移出窗口，保证窗口中的第一个元素为当前窗口内的最大值，则整个判断过程只需要遍历一次，时间复杂度为O(1)。</p>\r\n<details>\r\n<summary>\r\n单调队列\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">maxSlidingWindow</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span> || k == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> &#123;&#125;;</span><br><span class=\"line\">        deque&lt;<span class=\"type\">int</span>&gt; deque;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">res</span><span class=\"params\">(nums.size() - k + <span class=\"number\">1</span>)</span></span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>, i = <span class=\"number\">1</span> - k; j &lt; nums.<span class=\"built_in\">size</span>(); i++, j++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 删除 deque 中对应的 nums[i-1]</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt; <span class=\"number\">0</span> &amp;&amp; deque.<span class=\"built_in\">front</span>() == nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">                deque.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 保持 deque 递减</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!deque.<span class=\"built_in\">empty</span>() &amp;&amp; deque.<span class=\"built_in\">back</span>() &lt; nums[j])</span><br><span class=\"line\">                deque.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">            deque.<span class=\"built_in\">push_back</span>(nums[j]);</span><br><span class=\"line\">            <span class=\"comment\">// 记录窗口最大值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">                res[i] = deque.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"存在重复元素\">存在重复元素</h2>\r\n<p>给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个\r\n不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) &lt;= k\r\n。如果存在，返回 true ；否则，返回 false 。</p>\r\n<h3 id=\"思路滑动窗口\">思路：滑动窗口</h3>\r\n<p>由于只需要判断在k范围内是否存在重复元素，故可以使用滑动窗口限制比较的元素的数量。</p>\r\n<details>\r\n<summary>\r\n滑动窗口\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">containsNearbyDuplicate</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; nums, <span class=\"type\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        unordered_set&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\">        <span class=\"type\">int</span> length = nums.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &gt; k) &#123;</span><br><span class=\"line\">                s.<span class=\"built_in\">erase</span>(nums[i - k - <span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.<span class=\"built_in\">count</span>(nums[i])) &#123;<span class=\"comment\">//计算出现的次数</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            s.<span class=\"built_in\">emplace</span>(nums[i]);<span class=\"comment\">//将元素添加到队列末尾</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"序列化分\">序列化分</h2>\r\n<p>给定一个正整数序列，将该序列化分为m个连续的子序列，每个子序列至少包含一个元素，要求使得子序列的和的最大值最小。</p>\r\n<h3 id=\"思路二分查找\">思路：二分查找</h3>\r\n<p>对于整数数列，他的子序列和的最大值的范围为：最小值：序列中单个元素的最大值(即将单个元素划分为子列)；最大值：序列中所有元素的和(即将整个序列划分为子列)，故二分查找的区间为[min,max]。</p>\r\n<p>二分查找是为了更快的实现在子序列的个数已经限定的条件下，找到子序列和的最大值最小的情况。</p>\r\n<p>具体算法：\r\n1、先选取查找区间中点元素作为最大值，判断在该最大值的情况下，序列是否可以划分为要求的m个子序列。若划分个数\r\n<strong>n&lt;m</strong> ，则说明最大值过大，若 <strong>n&gt;m</strong>\r\n，则说明最大值取得过小，依此找到题目要求的最大值的最小值。</p>\r\n<details>\r\n<summary>\r\n二分查找\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> a[maxn];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> cut = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> s = a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s + a[i] &lt;= x) s += a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123; s = a[i]; cut++; &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cut;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bin_search</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> mid = l + (r - l) / <span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid) &lt;= m) &#123;</span><br><span class=\"line\">\t\t\tr = mid;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tl = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> t;</span><br><span class=\"line\">\tll mx, sum;</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (t--) &#123;</span><br><span class=\"line\">\t\tmx = <span class=\"number\">0</span>, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; a[i];</span><br><span class=\"line\">\t\t\tsum += a[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (mx &lt; a[i])</span><br><span class=\"line\">\t\t\t\tmx = a[i];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> ans = <span class=\"built_in\">bin_search</span>(mx, sum);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; ans;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"分裂数组一\">分裂数组（一）</h2>\r\n<p>给定一个整数集合,将其划分为两个不相交的子集A1和A2,元素个数分别是n1和n2,元素之和分别是S1和S2.设计一个算法满足|n1-n2|最小且|S1-S2|最小.</p>\r\n<h3 id=\"思路动态规划\">思路：动态规划</h3>\r\n<p>要将一个整数集合划分为两个不相交的子集，使得两个子集的元素个数之差\r\n∣n1−n2∣ 和元素之和之差 ∣S1−S2∣\r\n都尽可能小，我们可以利用动态规划的方法来解决这个问题。</p>\r\n<p>具体来说，我们可以使用一个二维动态规划数组 dp[i][j]\r\n来表示：当前集合的前 i\r\n个元素能否被划分为两个子集，使得其中一个子集的和为\r\nj。然后，我们可以进一步记录划分方案，以找到最佳的划分方式。</p>\r\n<p>以下是算法的具体步骤：</p>\r\n<p>初始化动态规划数组：</p>\r\n<p>dp[i][j] 表示前 i 个元素能否划分出和为 j 的子集。</p>\r\n<p>初始化 dp[0][0] = True，表示空集合可以划分出和为 0 的子集。\r\n填充动态规划数组：</p>\r\n<p>遍历集合中的每个元素 num 和每个可能的和 j。</p>\r\n<p>如果 dp[i-1][j] 为 True，那么 dp[i][j+num] 也为 True，表示可以将 num\r\n加入到和为 j 的子集中。 记录划分方案：</p>\r\n<p>使用一个额外的数组来记录每个 j 对应的划分方案中是否包含当前元素 num。\r\n寻找最佳划分：</p>\r\n<p>遍历所有可能的和 j，找到最接近集合总和一半的和，从而确保 ∣S1−S2∣\r\n最小。 在找到的和附近，寻找元素个数之差 ∣n1−n2∣ 最小的划分。</p>\r\n<details>\r\n<summary>\r\n动态规划\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">min_difference_partition</span>(<span class=\"params\">nums</span>):  </span><br><span class=\"line\">    total_sum = <span class=\"built_in\">sum</span>(nums)  </span><br><span class=\"line\">    n = <span class=\"built_in\">len</span>(nums)  </span><br><span class=\"line\">    half_total = total_sum // <span class=\"number\">2</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Initialize dp array  </span></span><br><span class=\"line\">    dp = [[<span class=\"literal\">False</span>] * (half_total + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n + <span class=\"number\">1</span>)]  </span><br><span class=\"line\">    dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"literal\">True</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Include/Exclude array to keep track of partition  </span></span><br><span class=\"line\">    include = [[<span class=\"literal\">False</span>] * (half_total + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n + <span class=\"number\">1</span>)]  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Fill dp array  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, n + <span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(half_total + <span class=\"number\">1</span>):  </span><br><span class=\"line\">            <span class=\"keyword\">if</span> j &gt;= nums[i-<span class=\"number\">1</span>]:  </span><br><span class=\"line\">                dp[i][j] = dp[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">or</span> dp[i-<span class=\"number\">1</span>][j-nums[i-<span class=\"number\">1</span>]]  </span><br><span class=\"line\">                include[i][j] = include[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">if</span> dp[i-<span class=\"number\">1</span>][j] <span class=\"keyword\">else</span> include[i-<span class=\"number\">1</span>][j-nums[i-<span class=\"number\">1</span>]]  </span><br><span class=\"line\">            <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">                dp[i][j] = dp[i-<span class=\"number\">1</span>][j]  </span><br><span class=\"line\">                include[i][j] = include[i-<span class=\"number\">1</span>][j]  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Find the maximum sum that can be achieved up to half_total  </span></span><br><span class=\"line\">    max_sum = <span class=\"number\">0</span>  </span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(half_total, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> dp[n][j]:  </span><br><span class=\"line\">            max_sum = j  </span><br><span class=\"line\">            <span class=\"keyword\">break</span>  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Trace back to find the partition  </span></span><br><span class=\"line\">    partition1 = []  </span><br><span class=\"line\">    partition2 = nums[:]  </span><br><span class=\"line\">    current_sum = max_sum  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n, <span class=\"number\">0</span>, -<span class=\"number\">1</span>):  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> include[i][current_sum]:  </span><br><span class=\"line\">            partition1.append(nums[i-<span class=\"number\">1</span>])  </span><br><span class=\"line\">            current_sum -= nums[i-<span class=\"number\">1</span>]  </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">            partition2.remove(nums[i-<span class=\"number\">1</span>])  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Calculate results  </span></span><br><span class=\"line\">    n1, n2 = <span class=\"built_in\">len</span>(partition1), <span class=\"built_in\">len</span>(partition2)  </span><br><span class=\"line\">    S1, S2 = <span class=\"built_in\">sum</span>(partition1), <span class=\"built_in\">sum</span>(partition2)  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># Optionally, further adjust to balance n1 and n2 if needed  </span></span><br><span class=\"line\">    <span class=\"comment\"># This is an NP-hard problem in general, but here we can do some greedy adjustments  </span></span><br><span class=\"line\">    <span class=\"comment\"># if possible to minimize |n1 - n2| while keeping |S1 - S2| small.  </span></span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\"># However, since we already balanced S1 and S2 optimally, we focus on the best we found.  </span></span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">return</span> partition1, partition2, n1, n2, S1, S2  </span><br><span class=\"line\">  </span><br></pre></td></tr></table></figure>\r\n</details>\r\n<hr />\r\n<h2 id=\"n皇后问题\">N皇后问题</h2>\r\n<p>按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。</p>\r\n<p>n 皇后问题 研究的是如何将 n 个皇后放置在 n×n\r\n的棋盘上，并且使皇后彼此之间不能相互攻击。</p>\r\n<p>给你一个整数 n ，返回所有不同的 n 皇后问题 的解决方案。</p>\r\n<p>每一种解法包含一个不同的 n 皇后问题 的棋子放置方案，该方案中 'Q' 和\r\n'.' 分别代表了皇后和空位。</p>\r\n<h3 id=\"思路排列型回溯\">思路：排列型回溯</h3>\r\n<details>\r\n<summary>\r\nN皇后问题\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">solveNQueens</span>(<span class=\"params\">self, n: <span class=\"built_in\">int</span></span>) -&gt; <span class=\"type\">List</span>[<span class=\"type\">List</span>[<span class=\"built_in\">str</span>]]:</span><br><span class=\"line\">        ans = []</span><br><span class=\"line\">        queens = [<span class=\"number\">0</span>] * n  <span class=\"comment\"># 皇后放在 (r,queens[r])</span></span><br><span class=\"line\">        col = [<span class=\"literal\">False</span>] * n</span><br><span class=\"line\">        diag1 = [<span class=\"literal\">False</span>] * (n * <span class=\"number\">2</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">        diag2 = [<span class=\"literal\">False</span>] * (n * <span class=\"number\">2</span> - <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">def</span> <span class=\"title function_\">dfs</span>(<span class=\"params\">r: <span class=\"built_in\">int</span></span>) -&gt; <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> r == n:</span><br><span class=\"line\">                ans.append([<span class=\"string\">&#x27;.&#x27;</span> * c + <span class=\"string\">&#x27;Q&#x27;</span> + <span class=\"string\">&#x27;.&#x27;</span> * (n - <span class=\"number\">1</span> - c) <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> queens])</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            <span class=\"comment\"># 在 (r,c) 放皇后</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> c, ok <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(col):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> diag1[r + c] <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> diag2[r - c]:  <span class=\"comment\"># 判断能否放皇后</span></span><br><span class=\"line\">                    queens[r] = c  <span class=\"comment\"># 直接覆盖，无需恢复现场</span></span><br><span class=\"line\">                    col[c] = diag1[r + c] = diag2[r - c] = <span class=\"literal\">True</span>  <span class=\"comment\"># 皇后占用了 c 列和两条斜线</span></span><br><span class=\"line\">                    dfs(r + <span class=\"number\">1</span>)</span><br><span class=\"line\">                    col[c] = diag1[r + c] = diag2[r - c] = <span class=\"literal\">False</span>  <span class=\"comment\"># 恢复现场</span></span><br><span class=\"line\">        dfs(<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<h2 id=\"单词接龙\">单词接龙</h2>\r\n<p>字典 wordList 中从单词 beginWord 到 endWord 的 转换序列\r\n是一个按下述规格形成的序列 beginWord -&gt; s1 -&gt; s2 -&gt; ... -&gt;\r\nsk： 每一对相邻的单词只差一个字母。 对于 1 &lt;= i &lt;= k 时，每个 si\r\n都在 wordList 中。注意， beginWord 不需要在 wordList 中。 sk == endWord\r\n给你两个单词 beginWord 和 endWord 和一个字典 wordList ，返回 从\r\nbeginWord 到 endWord 的 最短转换序列 中的 单词数目\r\n。如果不存在这样的转换序列，返回 0 。</p>\r\n<h3 id=\"思路广度优先搜索\">思路：广度优先搜索</h3>\r\n<p>本题要求的是最短转换序列，首先想到的就是广度优先搜索。广度优先搜索自然而然就可以想到图，但题中并没有给出图，所有首先构造一个图。我们把每一个单词都抽象为一个点，如果两个单词可以只改变一个字母进行转换，那么说明他们之间有一条双向边。因此我们只需要把满足转换条件的点相连，就形成了一张图。\r\n基于该图，我们以beginWord为图的起点，以endWord为终点进行广度优先搜索，寻找beginWord到endWord的最短路径。</p>\r\n<p>由于根据给定的字典构造的图可能会很大，而加入每个结点的分支数量相同，搜索空间会随着层数的增长指数级的增加。则考虑使用两个同时进行的广度搜索，这样可以减少搜索空间。一边从beginWord开始，一边从endWord开始，当发现某一时刻两边都访问过同一顶点时就停止搜索。</p>\r\n<h3 id=\"算法\">算法</h3>\r\n<p>首先为了方便表示，我们先给每一个单词标号，即给每一个单词分配一个id，创建一个由单词word到id对应的映射wordId,并将beginWord与wordList中所有的单词都加入这个映射中，之后检查endWord是否在该映射内，若不存在则输入无解。</p>\r\n<details>\r\n<summary>\r\n单词接龙\r\n</summary>\r\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    unordered_map&lt;string, <span class=\"type\">int</span>&gt; wordId;</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; edge;</span><br><span class=\"line\">    <span class=\"type\">int</span> nodeNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">addWord</span><span class=\"params\">(string&amp; word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!wordId.<span class=\"built_in\">count</span>(word)) &#123;</span><br><span class=\"line\">            wordId[word] = nodeNum++;</span><br><span class=\"line\">            edge.<span class=\"built_in\">emplace_back</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(string&amp; word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">addWord</span>(word);</span><br><span class=\"line\">        <span class=\"type\">int</span> id1 = wordId[word];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">char</span>&amp; it : word) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> tmp = it;</span><br><span class=\"line\">            it = <span class=\"string\">&#x27;*&#x27;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">addWord</span>(word);</span><br><span class=\"line\">            <span class=\"type\">int</span> id2 = wordId[word];</span><br><span class=\"line\">            edge[id1].<span class=\"built_in\">push_back</span>(id2);</span><br><span class=\"line\">            edge[id2].<span class=\"built_in\">push_back</span>(id1);</span><br><span class=\"line\">            it = tmp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">ladderLength</span><span class=\"params\">(string beginWord, string endWord, vector&lt;string&gt;&amp; wordList)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (string&amp; word : wordList) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">addEdge</span>(word);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">addEdge</span>(beginWord);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!wordId.<span class=\"built_in\">count</span>(endWord)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dis</span><span class=\"params\">(nodeNum, INT_MAX)</span></span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> beginId = wordId[beginWord], endId = wordId[endWord];</span><br><span class=\"line\">        dis[beginId] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        queue&lt;<span class=\"type\">int</span>&gt; que;</span><br><span class=\"line\">        que.<span class=\"built_in\">push</span>(beginId);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!que.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x = que.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">            que.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x == endId) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> dis[endId] / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span>&amp; it : edge[x]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (dis[it] == INT_MAX) &#123;</span><br><span class=\"line\">                    dis[it] = dis[x] + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    que.<span class=\"built_in\">push</span>(it);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"平面最近点对\">平面最近点对</h2>\r\n<p><a href=\"https://oi-wiki.org/geometry/nearest-points/\"\r\nclass=\"uri\">https://oi-wiki.org/geometry/nearest-points/</a></p>\r\n<h2 id=\"用最少数量的箭引爆气球\">用最少数量的箭引爆气球</h2>\r\n<p>有一些球形气球贴在一堵用 XY\r\n平面表示的墙面上。墙面上的气球记录在整数数组 points ，其中points[i] =\r\n[xstart, xend] 表示水平直径在 xstart 和\r\nxend之间的气球。你不知道气球的确切 y 坐标。</p>\r\n<p>一支弓箭可以沿着 x 轴从不同点 完全垂直 地射出。在坐标 x\r\n处射出一支箭，若有一个气球的直径的开始和结束坐标为 xstart，xend， 且满足\r\nxstart ≤ x ≤ xend，则该气球会被 引爆 。可以射出的弓箭的数量 没有限制 。\r\n弓箭一旦被射出之后，可以无限地前进。</p>\r\n<p>给你一个数组 points ，返回引爆所有气球所必须射出的 最小弓箭数 。</p>\r\n<h3 id=\"思路贪心算法\">思路：贪心算法</h3>\r\n<p>解释题意，就是把这些区间画在数轴上，在数轴上最少要放置多少个点使得每个区间都包含至少一个点。</p>\r\n<p>把区间按照右端点从小到大排序，这样第一个点就放在第一个区间的右端点处。去掉包含第一个点的区间后，第二个点就放在剩余区间的第一个区间的右端点处，以此类推。</p>\r\n<details>\r\n<summary>\r\n引爆气球\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">findMinArrowShots</span>(<span class=\"params\">self, points: <span class=\"type\">List</span>[<span class=\"type\">List</span>[<span class=\"built_in\">int</span>]]</span>) -&gt; <span class=\"built_in\">int</span>:</span><br><span class=\"line\">        points.sort(key=<span class=\"keyword\">lambda</span> p: p[<span class=\"number\">1</span>])  <span class=\"comment\"># 按照右端点从小到大排序</span></span><br><span class=\"line\">        ans = <span class=\"number\">0</span></span><br><span class=\"line\">        pre = -inf</span><br><span class=\"line\">        <span class=\"keyword\">for</span> start, end <span class=\"keyword\">in</span> points:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> start &gt; pre:  <span class=\"comment\"># 上一个点在区间左边</span></span><br><span class=\"line\">                ans += <span class=\"number\">1</span></span><br><span class=\"line\">                pre = end  <span class=\"comment\"># 在区间的最右边放一个点</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"柠檬水找零\">柠檬水找零</h2>\r\n<p>在柠檬水摊上，每一杯柠檬水的售价为 5\r\n美元。顾客排队购买你的产品，（按账单 bills\r\n支付的顺序）一次购买一杯。</p>\r\n<p>每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20\r\n美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5\r\n美元。</p>\r\n<p>注意，一开始你手头没有任何零钱。</p>\r\n<p>给你一个整数数组 bills ，其中 bills[i] 是第 i\r\n位顾客付的账。如果你能给每位顾客正确找零，返回 true ，否则返回 false\r\n。</p>\r\n<h3 id=\"思路分类讨论\">思路：分类讨论</h3>\r\n<details>\r\n<summary>\r\n柠檬水找零\r\n</summary>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">lemonadeChange</span>(<span class=\"params\">self, bills: <span class=\"type\">List</span>[<span class=\"built_in\">int</span>]</span>) -&gt; <span class=\"built_in\">bool</span>:</span><br><span class=\"line\">        five = ten = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> bills:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> b == <span class=\"number\">5</span>:  <span class=\"comment\"># 无需找零</span></span><br><span class=\"line\">                five += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> b == <span class=\"number\">10</span>:  <span class=\"comment\"># 返还 5</span></span><br><span class=\"line\">                five -= <span class=\"number\">1</span></span><br><span class=\"line\">                ten += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> ten:  <span class=\"comment\"># 此时 b=20，返还 10+5</span></span><br><span class=\"line\">                five -= <span class=\"number\">1</span></span><br><span class=\"line\">                ten -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:  <span class=\"comment\"># 此时 b=20，返还 5+5+5</span></span><br><span class=\"line\">                five -= <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> five &lt; <span class=\"number\">0</span>:  <span class=\"comment\"># 无法正确找零</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p></detaisl></p>\r\n","categories":["CS learning"],"tags":["algorithm"]},{"title":"水电站课设完成记录","url":"/2024/05/07/%E6%B0%B4%E7%94%B5%E7%AB%99%E8%AF%BE%E8%AE%BE%E5%AE%8C%E6%88%90%E8%AE%B0%E5%BD%95/","content":"<h1\r\nid=\"任务开展三峡水库中长期调度研究\">任务：开展三峡水库中长期调度研究</h1>\r\n<span id=\"more\"></span>\r\n<h1 id=\"任务要求4.14\">任务要求(4.14)</h1>\r\n<h3\r\nid=\"进行水库长系列常规调度模拟计算常规非优化\">进行水库长系列常规调度模拟计算（常规，非优化）</h3>\r\n<ul>\r\n<li>一般采用常规调度图作为调度依据。</li>\r\n</ul>\r\n<h3\r\nid=\"进行水库长系列优化调度模拟计算\">进行水库长系列优化调度模拟计算</h3>\r\n<ul>\r\n<li>约束：末水位为常规调度末水位</li>\r\n<li>目标函数：</li>\r\n<li>算法：</li>\r\n</ul>\r\n<p>需要通过惩罚系数调整发电保证率，得出惩罚系数、发电保证率和发电量三者的关系。</p>\r\n<h3\r\nid=\"在指定年份运行常规调度和优化调度的模型获得结果并对比各特征值\">在指定年份运行常规调度和优化调度的模型，获得结果并对比各特征值</h3>\r\n<h1 id=\"个性化数据\">个性化数据</h1>\r\n<ul>\r\n<li>计算初期水位：173.45m</li>\r\n<li>优化调度最小下泄流量：5690m³/s</li>\r\n<li>计划年：1975</li>\r\n</ul>\r\n<h2 id=\"明日任务完成任务一思路构建\">明日任务：完成任务一思路构建</h2>\r\n<ul>\r\n<li>idea：根据95%的设计保证率进行年平均流量排频处理，输入P-Ⅲ型曲线代码得到相近年份，对照调度图进行常规调度模拟。</li>\r\n</ul>\r\n<hr />\r\n<h2 id=\"使用方法参照4.15\">使用方法（参照）(4.15)</h2>\r\n<ul>\r\n<li>经验适线法</li>\r\n<li>点绘样本经验点据</li>\r\n</ul>\r\n<p>将实测资料由大到小排列，计算各年流量经验频率，然后将经验点据绘制在机率格纸上。</p>\r\n<ul>\r\n<li>估计参数的初值并绘制频率曲线</li>\r\n</ul>\r\n<p>采用矩法或其他方法，估计分布的3个参数，记为（<span\r\nclass=\"math inline\">\\(\\overline{x}\\)</span>, <span\r\nclass=\"math inline\">\\(C_{v}\\)</span> , <span\r\nclass=\"math inline\">\\(C_{s}\\)</span>\r\n),作为适线法的初值。根据该参数查P-Ⅲ型分布<span\r\nclass=\"math inline\">\\(\\Phi\\)</span>值表，可以求得一组不同频率p对应的设计值<span\r\nclass=\"math inline\">\\(x_{p}\\)</span>，即</p>\r\n<p><span class=\"math display\">\\[\r\nx_{p}=\\overline{x}*\\left[1+C_{p}*\\Phi(p,C_{s})\\right] \\]</span></p>\r\n<p>根据(p,<span\r\nclass=\"math inline\">\\(x_{p}\\)</span>)绘制频率曲线（也称为理论频率曲线),并将此线画在绘有经验点据的机率格纸上。</p>\r\n<ul>\r\n<li>调整适线</li>\r\n</ul>\r\n<p>检查频率曲线与经验点据的拟合情况，若不理想，则调整参数（主要是调整<span\r\nclass=\"math inline\">\\(C_{s}\\)</span>,<span\r\nclass=\"math inline\">\\(C_{v}\\)</span>)，再重新计算频率曲线。</p>\r\n<h3 id=\"point\">point</h3>\r\n<p>在计算时需要根据已有的<span\r\nclass=\"math inline\">\\(\\Phi\\)</span>值表读出不同<span\r\nclass=\"math inline\">\\(C_{v}\\)</span>,<span\r\nclass=\"math inline\">\\(C_{s}\\)</span>下的<span\r\nclass=\"math inline\">\\(K_{p}\\)</span>值进行择优选取曲线，当比值大于3时，则需要慎重考虑取值，可以反算前面的数据是否出现问题。</p>\r\n<h2 id=\"选年\">选年</h2>\r\n<p>经过排频分析，得出95%设计保证率选年可以选为1959年。</p>\r\n<figure>\r\n<img src=\"/images/paipinjieguotu.jpg\" alt=\"paipinjieguotu\" />\r\n<figcaption aria-hidden=\"true\">paipinjieguotu</figcaption>\r\n</figure>\r\n<h2 id=\"任务一存在问题\">任务一存在问题：</h2>\r\n<h4 id=\"已知发电量如何确定水头\">已知发电量，如何确定水头</h4>\r\n<p>由出力公式，<span\r\nclass=\"math inline\">\\(N=kQH\\)</span>，由水力学关系，有k(H),h(Q),<span\r\nclass=\"math inline\">\\(H_{下}\\)</span>(Q),故所有参数均为下泄流量Q的函数。</p>\r\n<h4\r\nid=\"如何使已知的一切数据表通过代码联动起来实现导入运行即可导出\">如何使已知的一切数据表通过代码联动起来，实现导入运行即可导出</h4>\r\n<ul>\r\n<li>为试算过程。</li>\r\n</ul>\r\n<p>需要解决程序如何在各阶段都能够线性插值，表格的使用顺序是什么样的，如何放置各阶段的约束条件。</p>\r\n<h2 id=\"明日任务\">明日任务</h2>\r\n<p>完成程序的基本调试。</p>\r\n<hr />\r\n<h2 id=\"单时段常规调度程序4.16\">单时段常规调度程序(4.16)</h2>\r\n<p>目前已经完成常规调度基本程序，需要进一步导入整个表格实现计算。以下为单个时段计算程序。</p>\r\n<p>思路存在问题：试算的结果无法进行及时的更新，无法确定具体的值。故不应将N设为试算结果评判标准，或应设置适当的Q的自增值。</p>\r\n<ul>\r\n<li>以下为上述思路代码\r\n<details>\r\n<summary>\r\n代码一\r\n</summary></li>\r\n</ul>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%%程序一</span></span><br><span class=\"line\">Q = input(<span class=\"string\">&quot;输入试算流量值：&quot;</span>);</span><br><span class=\"line\">hc = input(<span class=\"string\">&quot;输入时段初水位&quot;</span>);</span><br><span class=\"line\">Nsj = input(<span class=\"string\">&quot;输入实际出力&quot;</span>);</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; Q &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(Q-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; Q &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(Q-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Q &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(Q-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">H = hc - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> H &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; H &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(H-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> H &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(H-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">N = kcl*Q*H/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>最终结果误差小于0.0001，故接受。</p>\r\n<h2 id=\"尚未解决的问题\">尚未解决的问题</h2>\r\n<ul>\r\n<li>如果初始流量值大于实际流量值，如何收敛到正确结果；</li>\r\n<li>初始填入的数据仍然需要通过读图读表得到，如何将其加入代码实现自动读图；</li>\r\n<li>在得出实际下泄流量后，还需要计算时段末水位和库容。库容还需设置边界条件<strong><em>(这里是很重要的数据边界条件)</em></strong>。</li>\r\n</ul>\r\n<h2 id=\"明日任务-1\">明日任务</h2>\r\n<p>完善程序细节，尽量解决上述问题。</p>\r\n<hr />\r\n<h2 id=\"任务一终稿有问题4.17\">任务一终稿（有问题）(4.17)</h2>\r\n<p>最终联动程序设计思路： - 根据已得出的时段初水位读出当前时段发电量； -\r\n根据入库流量假设出库流量，列入程序一进行试算； -\r\n利用试算结果得出时段末水位，得出下一时段计算初始条件，重复计算。</p>\r\n<h3 id=\"需要逐步解决的问题\">需要逐步解决的问题：</h3>\r\n<h4 id=\"如何设置数组条件\">1.如何设置数组条件；</h4>\r\n<h4\r\nid=\"如何在自定义函数中使用工作区变量\">2.如何在自定义函数中使用工作区变量；</h4>\r\n<h4\r\nid=\"三峡汛限水位和死水位为同一高度即在6月-9月之间无规定发电量来多少泄多少发多少如何设置程序具体功能\">3.三峡汛限水位和死水位为同一高度，即在6月-9月之间无规定发电量，来多少泄多少发多少，如何设置程序具体功能；</h4>\r\n<h4\r\nid=\"如何限制最大发电量最大下泄流量以及计算弃水\">4.如何限制最大发电量，最大下泄流量，以及计算弃水</h4>\r\n<h2 id=\"目前已解决123问题\">目前已解决1、2、3问题</h2>\r\n<h3\r\nid=\"遗留问题如何确定下泄流量初值如何限制最大发电量最大下泄流量以及计算弃水\">遗留问题：如何确定下泄流量初值；如何限制最大发电量，最大下泄流量，以及计算弃水。</h3>\r\n<details>\r\n<summary>\r\n代码二\r\n</summary>\r\n<p>以下为主程序代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%changguidiaodu.m</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) &gt; <span class=\"number\">145</span></span><br><span class=\"line\">    Q = input(<span class=\"string\">&quot;liuliang&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Q = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),N] = Nqfun(Q,hc);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= Q;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = Q*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>) + jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>) - jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%库容水位曲线</span></span><br><span class=\"line\"><span class=\"comment\">%已知库容求水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>) &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt; <span class=\"number\">145</span></span><br><span class=\"line\">        jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\">        Q = (jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>)-jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>))*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">        [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)] = Nqfun(Q,hc);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) == jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) == <span class=\"number\">145</span></span><br><span class=\"line\">        Q = jieguo(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)] = Nqfun(Q,hc);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>读取调度图实际出力功能代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%NFun.m</span></span><br><span class=\"line\"><span class=\"comment\">%%利用调度图读取实际发电出力</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">result</span> = <span class=\"title\">NFun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt; diaodutu(y,<span class=\"built_in\">i</span>) &amp;&amp; x &lt; diaodutu(y,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = <span class=\"number\">0.8</span>*chuli(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &lt; diaodutu(y,<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">6</span>)*<span class=\"number\">0.8</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; diaodutu(y,<span class=\"number\">7</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>以下为已知出力试算流量代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h,r]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h/<span class=\"number\">10000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"存在问题\">存在问题</h3>\r\n<ul>\r\n<li>全功能代码过于复杂，并不容易调试，现尝试分函数块逐情况处理。</li>\r\n</ul>\r\n<h2 id=\"明日任务-2\">明日任务</h2>\r\n<p>优化处理任务一程序，完善功能。</p>\r\n<hr />\r\n<h2 id=\"课后新思路4.19\">课后新思路(4.19)</h2>\r\n<ul>\r\n<li>155m为非汛期最低水位，即真正的死水位，故在枯水期调度时水位不能低于155；</li>\r\n<li>可以考虑对每一时段进行以电定水试算（查阅水文水利计算课本）</li>\r\n</ul>\r\n<h3 id=\"存在问题-1\">存在问题：</h3>\r\n<ul>\r\n<li>两个主要功能函数存在循环嵌套的问题，需要细改</li>\r\n</ul>\r\n<p>以下为新代码：</p>\r\n<details>\r\n<summary>\r\n代码三\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"comment\">%changguidiaodu</span></span><br><span class=\"line\"><span class=\"comment\">%for j = 1:15</span></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>) &gt; <span class=\"number\">145</span></span><br><span class=\"line\">    Q = input(<span class=\"string\">&quot;liuliang&quot;</span>);</span><br><span class=\"line\">    N = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),N] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">if jieguo(j,5) &lt;= 145</span></span><br><span class=\"line\"><span class=\"comment\">        [jieguo(j,5),jieguo(j,6),N] = ZVend(jieguo(j,12),jieguo(j,4),jieguo(j,2),jieguo(j,5));</span></span><br><span class=\"line\"><span class=\"comment\">        break;</span></span><br><span class=\"line\"><span class=\"comment\">end</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Q = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= Q;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = Q*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>) + jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>) - jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%库容水位曲线</span></span><br><span class=\"line\"><span class=\"comment\">%已知库容求时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"comment\">%Nqfun</span></span><br><span class=\"line\"><span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h,h51,r]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y,z)</span></span></span><br><span class=\"line\"><span class=\"comment\">%插值下游水位流量曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> x &lt; Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     <span class=\"keyword\">elseif</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h51 = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &lt; K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-h51)+K(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> h51 &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h51 &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">[h,h51,~] = ZVend(x*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>,y,z);</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"comment\">%ZVend</span></span><br><span class=\"line\"><span class=\"comment\">%%求时段末水位</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h5,h6,N]</span> = <span class=\"title\">ZVend</span><span class=\"params\">(x,y,z)</span>%<span class=\"title\">x</span>为当前计算下的时段末库容，<span class=\"title\">y</span>为当前时段的初始水位,<span class=\"title\">z</span>为本时段来流流量,<span class=\"title\">w</span>为当前计算所得时段末水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> w &lt; <span class=\"number\">145</span></span><br><span class=\"line\">        Q = (y<span class=\"number\">-145</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">3600</span>*<span class=\"number\">24</span>);</span><br><span class=\"line\">        [h6,N] = Nqfun(Q,y,z);</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> y == w &amp;&amp; w == <span class=\"number\">145</span></span><br><span class=\"line\">        Q = z;</span><br><span class=\"line\">        [h6,N] = Nqfun(Q,y,z);</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3\r\nid=\"现在出现的问题关键在于想实现全自动读取数据也许有贪心不足的情况接下来的任务还是继续跑第一次的程序手动算出一组数据再进行改进目前思路出现了一些循环论证的问题需要搞清楚怎么把所需要试算的数据拆开再循环应该是逻辑本身有问题下次推进的时候先解决一下整个计算的试算步骤\">现在出现的问题关键在于想实现全自动读取数据，也许有贪心不足的情况，接下来的任务，还是继续跑第一次的程序，手动算出一组数据再进行改进。目前思路出现了一些循环论证的问题，需要搞清楚怎么把所需要试算的数据拆开再循环，应该是逻辑本身有问题，下次推进的时候先解决一下整个计算的试算步骤。</h3>\r\n<h2 id=\"明日任务-3\">明日任务</h2>\r\n<p>解决函数逻辑问题。</p>\r\n<hr />\r\n<p>今日无具体推进。(4.20)</p>\r\n<p>上课间隙简单跑了一下昨天最后的思路，发现一开始就出现了问题，因为水头本身很低，所以最后循环出来的时段末水位甚至成为了负值，这就导致以电定水的循环无法结束，故回到最初的思路，即在计算完出力后在循环内立即计算时段末水位，若不低于145，则继续迭代流量值，若低于145，则转为来多少发多少，计算结束后直接退出循环。</p>\r\n<p>这里也是上文所述的出现了循环嵌套的问题，今天所产生的新思路为，将正常插值计算时段末水位和来多少发多少计算时段末水位<strong><em>分开成两个函数进行使用</em></strong>，在出现水位过低的情况时，调用后者，并在计算完成后直接退出循环。</p>\r\n<p>仍需实践探索。</p>\r\n<h2 id=\"明日任务-4\">明日任务</h2>\r\n<p>争取改善时段循环的关键代码。</p>\r\n<hr />\r\n<p>正式完成水电站常规调度。最终代码如下：(4.22)</p>\r\n<details>\r\n<summary>\r\n代码四\r\n</summary>\r\n<p>主程序代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;changguidiaodu.m</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">ylim([<span class=\"number\">130</span>,<span class=\"number\">175</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>计算当前水位设计出力代码：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;NFun.m</span><br><span class=\"line\"><span class=\"comment\">%%利用调度图读取设计发电出力</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">result</span> = <span class=\"title\">NFun</span><span class=\"params\">(x,y)</span></span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">6</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= diaodutu(y,<span class=\"built_in\">i</span>+<span class=\"number\">1</span>) &amp;&amp; x &lt;= diaodutu(y,<span class=\"built_in\">i</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &lt;= diaodutu(y,<span class=\"number\">1</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">6</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= diaodutu(y,<span class=\"number\">7</span>)</span><br><span class=\"line\">        result = chuli(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>计算实际发电出力</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;Nqfun.m</span><br><span class=\"line\"><span class=\"comment\">%%计算发电量函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h51,h,r,flg]</span> = <span class=\"title\">Nqfun</span><span class=\"params\">(x,y,z,v)</span>%下泄流量、初水位、入库水量、时段初水量</span></span><br><span class=\"line\">[h51,kcl] = head(x,y);</span><br><span class=\"line\"><span class=\"comment\">%%计算出力</span></span><br><span class=\"line\">r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算时段末水位</span></span><br><span class=\"line\">h = ZVendnormal(z+v-x*<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>);</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> h&lt;=<span class=\"number\">145</span></span><br><span class=\"line\">    h = <span class=\"number\">145</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> y &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; y &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">            w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(y-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    x = z+v-w;</span><br><span class=\"line\">    [h51,kcl] = head(x,y);</span><br><span class=\"line\">    r = kcl*x*h51/<span class=\"number\">10000</span>;</span><br><span class=\"line\">    flg = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<p>计算正常情况下时段末水位： <figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;ZVendnormal.m</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">w</span> = <span class=\"title\">ZVendnormal</span><span class=\"params\">(x)</span>%<span class=\"title\">x</span>为时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt; ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        w = ((ZV(<span class=\"number\">56</span>,<span class=\"number\">1</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"number\">56</span>,<span class=\"number\">2</span>)-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"number\">55</span>,<span class=\"number\">2</span>))+ZV(<span class=\"number\">55</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\r\n<p>计算发电水头： <figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;head.m</span><br><span class=\"line\"><span class=\"comment\">%%水头计算函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[h51,kcl]</span> = <span class=\"title\">head</span><span class=\"params\">(x,y)</span>%下泄流量,时段初水位</span></span><br><span class=\"line\"><span class=\"comment\">%插值下游水位流量曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">29</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &lt; ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(ZO(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+ZO(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x &gt;= ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hxy = ((ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZO(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-ZO(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZO(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值发电水头损失曲线</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> x &lt; Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(Odh(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-x)+Odh(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     <span class=\"keyword\">elseif</span> x &gt;= Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Odh(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        hss = ((Odh(<span class=\"number\">15</span>,<span class=\"number\">2</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>))/(Odh(<span class=\"number\">15</span>,<span class=\"number\">1</span>) - Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>)))*(x-Odh(<span class=\"number\">14</span>,<span class=\"number\">1</span>))+Odh(<span class=\"number\">14</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%插值出力系数水头曲线</span></span><br><span class=\"line\">h51 = y - hss - hxy;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &lt; K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">2</span>,<span class=\"number\">1</span>)))*(K(<span class=\"number\">1</span>,<span class=\"number\">1</span>)-h51)+K(<span class=\"number\">2</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> h51 &gt;= K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h51 &lt;= K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(K(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>) - K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+K(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h51 &gt;= K(<span class=\"number\">6</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        kcl = ((K(<span class=\"number\">6</span>,<span class=\"number\">2</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">2</span>))/(K(<span class=\"number\">6</span>,<span class=\"number\">1</span>) - K(<span class=\"number\">5</span>,<span class=\"number\">1</span>)))*(h51-K(<span class=\"number\">5</span>,<span class=\"number\">1</span>))+K(<span class=\"number\">5</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\r\n</details>\r\n<p>最终得到枯水年枯水期发电水位变化曲线为：</p>\r\n<p>如图，在全年除汛期应正常维持在死水位外，其他时期的水头对发电来说过低，整体发电量很少。所选择的枯水年来水极少是一方面的原因，还有一方面，即直接使用调度图可能会导致竭泽而渔，彻底不给后面的来水情况做预备。</p>\r\n<figure>\r\n<img src=\"/images/shuiweibianhuatu-1713946448261.jpg\"\r\nalt=\"shuiweibianhuatu\" />\r\n<figcaption aria-hidden=\"true\">shuiweibianhuatu</figcaption>\r\n</figure>\r\n<p>接下来的任务是在已知初水位末水位的情况下，在汛限水位的约束下对发电和水位曲线进行优化调度。即任务二：</p>\r\n<h3\r\nid=\"进行水库长系列优化调度模拟计算-1\">进行水库长系列优化调度模拟计算</h3>\r\n<ul>\r\n<li>约束：末水位为常规调度末水位</li>\r\n<li>目标函数：</li>\r\n<li>算法：</li>\r\n</ul>\r\n<p>需要通过惩罚系数调整发电保证率，得出惩罚系数、发电保证率和发电量三者的关系。</p>\r\n<h2 id=\"明日任务-5\">明日任务</h2>\r\n<p>初步寻找所使用的优化调度方法和方程建立思路。</p>\r\n<hr />\r\n<p>(4.23)\r\n上午上课发现之前计算的初始水位选的有点太低，所以回来又改了一下常规调度的代码，矫正了一些参数的输出，变动不大，就不放出来了。</p>\r\n<p>晚上在查找优化调度使用的方法，在多约束又多阶段的情况下，决定使用微分动态规划进行优化计算。需要具体学习一下微分动态规划的理论和建立方程的方法，作为明天的任务。</p>\r\n<p>查到有关微分动态规划理论的网址如下：</p>\r\n<ul>\r\n<li><a href=\"https://www.jianshu.com/p/f22de42327b4\"\r\nclass=\"uri\">https://www.jianshu.com/p/f22de42327b4</a></li>\r\n<li><a href=\"https://zhuanlan.zhihu.com/p/629149697\"\r\nclass=\"uri\">https://zhuanlan.zhihu.com/p/629149697</a></li>\r\n</ul>\r\n<hr />\r\n<p>(4.24)\r\n昨晚观察表格发现后三个月来水并不少，所以决定今天首先把时段末水位重新蓄回正常蓄水位，水位蓄高之后发电量与之前相比也大了很多。修改的主程序代码如下，其余功能函数没有发生改变：</p>\r\n<details>\r\n<summary>\r\n代码五\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%前24旬调度计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">0.001</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">0.01</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%后12旬（蓄水至175）</span></span><br><span class=\"line\">jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(<span class=\"number\">393</span>-jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>))&gt;<span class=\"number\">0.01</span></span><br><span class=\"line\">Q = Q+<span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">25</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#123;</span></span><br><span class=\"line\"><span class=\"comment\">jieguo(j,7) = NFun(hc,j);</span></span><br><span class=\"line\"><span class=\"comment\">Nsj = jieguo(j,7);</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>),f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">185</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">10</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"明日任务-6\">明日任务</h2>\r\n<p>首先尝试使用最基本的动态规划解决问题。先建立好动态规划方程并设置计算的数据结构。</p>\r\n<hr />\r\n<p>（5.6）</p>\r\n<h2 id=\"首先建立逆序递推方程\">首先建立逆序递推方程</h2>\r\n<h3 id=\"阶段与阶段变量\">1.阶段与阶段变量</h3>\r\n<p>根据中长期规划，按旬划分为36个阶段，以t表示阶段变量，则t为面临时段，t+1~T为余留时期；</p>\r\n<h3 id=\"状态变量\">2.状态变量</h3>\r\n<p>选择水库蓄水量为状态变量，记<span\r\nclass=\"math inline\">\\(V(t)\\)</span>为t时段初蓄水量；</p>\r\n<h3 id=\"决策变量\">3.决策变量</h3>\r\n<p>取水电站发电引用流量<span\r\nclass=\"math inline\">\\(Qfd(t)\\)</span>为决策变量；</p>\r\n<h2 id=\"状态转移方程\">4.状态转移方程</h2>\r\n<p>即水量平衡方程，<span class=\"math inline\">\\(V(t+1) = V(t) +\r\n[Q_{rk}(t) - Q_{fd}(t) - Q_{qs}(t)]*\\Delta T\\)</span>;</p>\r\n<h3 id=\"指标函数\">5.指标函数</h3>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">output(t) = K * Qfd(t) * H(t);</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t) &gt;= Pb</span><br><span class=\"line\">    Pcl(t) = output(t);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t) = output(t) + b*(output(t)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n<h3 id=\"递推方程\">6.递推方程</h3>\r\n<p><span class=\"math display\">\\[\\left\\{\r\n\\begin{array}\r\nPbest(t+1) = max(Pcl(t)+Pbest(t)); \\\\\r\nV(t+1) = V(t) + (Qrk(t)-Qfd(t)-Qqs(t))*T;\r\n\\end{array}\r\n\\right.\\]</span></p>\r\n<h3 id=\"约束条件\">7.约束条件</h3>\r\n<ul>\r\n<li>上下游水头差计算（函数约束）</li>\r\n<li>水电站预想出力限制（范围约束）</li>\r\n<li>水电站最大过流能力限制（范围约束）</li>\r\n<li>综合利用约束（范围约束）</li>\r\n<li>水库水量平衡（函数约束）</li>\r\n<li>库容曲线约束（函数约束）</li>\r\n<li>库水位或库蓄水量约束（范围约束）</li>\r\n<li>下游水位流量关系约束（值约束）</li>\r\n</ul>\r\n<p>即得如下代码：</p>\r\n<details>\r\n<summary>\r\n代码六\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = input(<span class=\"string\">&quot;最小生态流量为&quot;</span>);<span class=\"comment\">%本次计算为5690</span></span><br><span class=\"line\"></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">Z = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">output = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Qfd = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">yxcl = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">xxnl = <span class=\"built_in\">zeros</span>(<span class=\"number\">36</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">output(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">6753</span>;</span><br><span class=\"line\">yxcl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">xxnl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Omax(<span class=\"number\">12</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &lt; yxcl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &lt; xxnl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &gt;= Qst &amp;&amp; Z(t,<span class=\"number\">1</span>) &gt;= <span class=\"number\">145</span> &amp;&amp; Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>)==<span class=\"number\">175</span> &amp;&amp; Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>)== <span class=\"number\">175</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(t,<span class=\"number\">1</span>),Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t,<span class=\"number\">1</span>) = Yuxcl(H(t));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t,<span class=\"number\">1</span>) = Xiaxnl(Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = V(t,<span class=\"number\">1</span>) + (Qrk(t,<span class=\"number\">1</span>)-Qfd(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t,<span class=\"number\">1</span>) = K * Qfd(t,<span class=\"number\">1</span>) * H(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t,<span class=\"number\">1</span>) = output(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t,<span class=\"number\">1</span>) = output(t,<span class=\"number\">1</span>) + b*(output(t,<span class=\"number\">1</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"number\">1</span>)+Pbest(t,<span class=\"number\">1</span>));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"number\">1</span>) &gt; yxcl(t,<span class=\"number\">1</span>)</span><br><span class=\"line\">    output(t,<span class=\"number\">1</span>) = yxcl(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Qfd(t,<span class=\"number\">1</span>) &gt; xxnl(t,<span class=\"number\">1</span>) </span><br><span class=\"line\">    Qfd(t,<span class=\"number\">1</span>) = xxnl(t,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Qfd(t,<span class=\"number\">1</span>) &lt; Qst </span><br><span class=\"line\">    Qfd(t,<span class=\"number\">1</span>) = Qst;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Z(t,<span class=\"number\">1</span>) &lt; <span class=\"number\">145</span></span><br><span class=\"line\">    Z(t,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;     </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) =<span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">36</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">其中，有最大下泄能力计算函数：</span><br><span class=\"line\"></span><br><span class=\"line\">​~~~matlab</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">q</span> = <span class=\"title\">Xiaxnl</span><span class=\"params\">(x)</span>%当前计算期上游水位</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">11</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        q = ((Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Omax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Omax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Omax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>预想出力限制计算函数：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Nyx</span> = <span class=\"title\">Yuxcl</span><span class=\"params\">(x)</span>%当前计算期出力水头</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">17</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; x &lt;= Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        Nyx = ((Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(Nmax(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(x-Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+Nmax(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n<p>库容曲线约束计算函数：</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%库容曲线约束</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">z</span> = <span class=\"title\">Kurqx</span><span class=\"params\">(x)</span>%下一计算期的初始库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>) &amp;&amp; x &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">        z = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>)))*(x-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"写出计算方程后出现如下问题\">写出计算方程后，出现如下问题</h2>\r\n<ul>\r\n<li>问题1：只能计算下一个时段，如何实现全时段计算？如何将一个时段内的计算初始条件划分为多个段进行计算？如何设置数组？如何设置循环次数？</li>\r\n<li>问题2：约束条件很多，如何写入程序？写在哪里？如何实现变量约束条件内的改变？</li>\r\n</ul>\r\n<details>\r\n<summary>\r\n代码七\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\"><span class=\"comment\">%间隔数</span></span><br><span class=\"line\">n = <span class=\"number\">51</span>;</span><br><span class=\"line\"><span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;</span><br><span class=\"line\"><span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;</span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">36</span>);</span><br><span class=\"line\">output = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">36</span>);</span><br><span class=\"line\">Qfd = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">yxcl = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">xxnl = <span class=\"built_in\">zeros</span>(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qst;</span><br><span class=\"line\">yxcl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">xxnl(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Omax(<span class=\"number\">12</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">14</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> t = <span class=\"number\">1</span>:<span class=\"number\">51</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"built_in\">j</span>) &lt; yxcl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &lt; xxnl(t,<span class=\"number\">1</span>) &amp;&amp; Qfd(t,<span class=\"number\">1</span>) &gt;= Qst &amp;&amp; Z(t,<span class=\"built_in\">j</span>) &gt;= <span class=\"number\">145</span> &amp;&amp; V(t,<span class=\"number\">1</span>) &lt;= <span class=\"number\">393</span> &amp;&amp; V(t,<span class=\"number\">1</span>) &gt;= <span class=\"number\">171.5</span></span><br><span class=\"line\">Z(t,<span class=\"number\">15</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(t,<span class=\"number\">1</span>),(Z(t,<span class=\"built_in\">j</span>)+Z(t,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>))/<span class=\"number\">2</span>);<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = K * Qfd(t,<span class=\"number\">1</span>) * H(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) + b*(output(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"number\">1</span>)+Pbest(t,<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">Qfd(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Qfd(t,<span class=\"number\">1</span>)+<span class=\"number\">0.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Yuxcl(H(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Xiaxnl(Z(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = V(t,<span class=\"number\">1</span>) + (Qrk(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(t,<span class=\"number\">1</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(t,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2\r\nid=\"以上代码基本解决上述问题出现新问题\">以上代码基本解决上述问题，出现新问题：</h2>\r\n<ul>\r\n<li>为什么总是跳出循环？如何解决？</li>\r\n<li>为什么计算结果里依然出现了不符合约束条件的值？</li>\r\n<li>如何确保最后一个水位为145？[增加if语句，若j=15则进入，单独计算流量值]</li>\r\n</ul>\r\n<h2 id=\"明日任务-7\">明日任务</h2>\r\n<p>解决上述问题。</p>\r\n<hr />\r\n<p>（5.7） ## 问题：在哪里以及如何改变Q？</p>\r\n<p>解决：Qfd为事先定义的数组。现在将约束条件变为if语句，加入Qfd初值设置，即将Q设为决策变量，相比于课堂所讲方法，他将水位作为决策变量。</p>\r\n<h2\r\nid=\"问题出现维数灾不知道需要计算多久\">问题：出现维数灾，不知道需要计算多久。</h2>\r\n<details>\r\n<summary>\r\n代码八\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">Pcl = <span class=\"built_in\">zeros</span>(<span class=\"number\">51</span>,<span class=\"number\">36</span>);</span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">51</span>,<span class=\"number\">36</span>);</span><br><span class=\"line\">t = <span class=\"number\">1</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"number\">15</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%%试算发电流量</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> t &lt;= <span class=\"number\">51</span></span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = V(t,<span class=\"built_in\">j</span>) + (Qrk(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(t,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"keyword\">if</span> V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &gt; <span class=\"number\">393</span> || V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) &lt; <span class=\"number\">145</span> || Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) &gt; <span class=\"number\">175</span></span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(t,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(t,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t,<span class=\"built_in\">j</span>) &gt; yxcl(t,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + b*(output(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(t+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(t,<span class=\"built_in\">j</span>)+Pbest(t,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Yuxcl(H(t,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(t+<span class=\"number\">1</span>,<span class=\"number\">1</span>) = Xiaxnl(Z(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">t = t+<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h2 id=\"明日任务等待结果\">明日任务：等待结果。</h2>\r\n<hr />\r\n<p>（5.8）</p>\r\n<h2\r\nid=\"发现问题qfd的改变过于死板导致程序会陷入一个时段的死循环\">发现问题：Qfd的改变过于死板，导致程序会陷入一个时段的死循环</h2>\r\n<h2 id=\"完成优化调度代码如下\">完成优化调度，代码如下：</h2>\r\n<details>\r\n<summary>\r\n代码九\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">b = <span class=\"number\">0.5</span>;<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">15000</span>,<span class=\"number\">15</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk1(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程2</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">171.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk2(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">16</span>:<span class=\"number\">27</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">28</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span><span class=\"number\">-27</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,endZ(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>])</span><br><span class=\"line\">ylim([<span class=\"number\">145</span> <span class=\"number\">185</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>得到水位变化如下图：</p>\r\n<figure>\r\n<img src=\"/images/image-20240508161239028.png\"\r\nalt=\"image-20240508161239028\" />\r\n<figcaption aria-hidden=\"true\">image-20240508161239028</figcaption>\r\n</figure>\r\n<p>使用1975年数据进行演算，得到优化调度保证率为77%，全年发电量13562.95wkW,常规调度保证率为45%，全年发电处理7916.28wkW,有显著的优化效果，可见调度图调度的保守性。</p>\r\n<hr />\r\n<p>（5.9）\r\n需要在程序中加入弃水计算部分，经过查找资料，得到弃水的出现条件是在水头一定的条件下电站出力不得大于水电站的预想出力，若大于，则多余水量为弃水.代码如下：</p>\r\n<details>\r\n<summary>\r\n代码十\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">%%前27旬调度计算</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">27</span></span><br><span class=\"line\">h = <span class=\"number\">0</span>;</span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = NFun(hc,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">Nsj = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\">N = <span class=\"number\">0</span>;</span><br><span class=\"line\">f = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Nsj) &gt;= <span class=\"number\">1</span> &amp;&amp; f == <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">Q = Q + <span class=\"number\">1</span>;</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),N,f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"comment\">%计算弃水</span></span><br><span class=\"line\">Q1 = <span class=\"number\">1500</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) &gt; Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(N - Yuxcl(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>))) &gt;= <span class=\"number\">10</span></span><br><span class=\"line\">    <span class=\"comment\">%%插值下游水位流量曲线</span></span><br><span class=\"line\">    Q1 = Q1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">    [jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),h,N,f] = Nqfun(Q1,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算有弃水情况下的发电流量</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> h &gt; <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> h &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; h &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        Vq = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(h-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">9</span>) = (V - Vq)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">9</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%后9旬（蓄水至175）</span></span><br><span class=\"line\">jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">Q = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">abs</span>(<span class=\"number\">393</span>-jieguo(<span class=\"number\">36</span>,<span class=\"number\">12</span>))&gt;<span class=\"number\">0.01</span></span><br><span class=\"line\">Q = Q+<span class=\"number\">0.01</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">27</span>:<span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">hc = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">4</span>);</span><br><span class=\"line\">[jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>),f] = Nqfun(Q,hc,jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>),jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>));<span class=\"comment\">%试算找出最合适的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>) = N;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"comment\">%%计算出库流量、出库水量、时段末库容</span></span><br><span class=\"line\"><span class=\"comment\">%计算时段末库容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &gt;= ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) &amp;&amp; jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>) &lt;= ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">        V = ((ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>))/(ZV(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"number\">1</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)))*(jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>)-ZV(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>))+ZV(<span class=\"built_in\">i</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%计算出库水量、出库流量</span></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>)= V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)= jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">2</span>)+jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">3</span>)-V;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">10</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">11</span>)*<span class=\"number\">100000000</span>/(<span class=\"number\">10</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">8</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">7</span>)*<span class=\"number\">10</span>*<span class=\"number\">24</span>/<span class=\"number\">10000</span>;</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">3</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">12</span>);</span><br><span class=\"line\">jieguo(<span class=\"built_in\">j</span>+<span class=\"number\">1</span>,<span class=\"number\">4</span>) = jieguo(<span class=\"built_in\">j</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">yyaxis left</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">5</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>]);</span><br><span class=\"line\">ylim([<span class=\"number\">145</span>,<span class=\"number\">185</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">yyaxis right</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,jieguo(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">10</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span>,<span class=\"number\">36</span>]);</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;下泄流量/m³&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1975年来流常规调度水位变化曲线&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\r\n</details>\r\n需要加入惩罚系数和发电保证率之间的关系的计算，代码如下：\r\n<details>\r\n<summary>\r\n代码十一\r\n<summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%%水库优化调度代码</span></span><br><span class=\"line\">Qst = <span class=\"number\">5690</span>;<span class=\"comment\">%生态流量限制</span></span><br><span class=\"line\">T = <span class=\"number\">12</span>*<span class=\"number\">24</span>*<span class=\"number\">3600</span>/<span class=\"number\">100000000</span>;<span class=\"comment\">%时段间隔</span></span><br><span class=\"line\">Pb = <span class=\"number\">499</span>;<span class=\"comment\">%保证出力</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">393</span>;</span><br><span class=\"line\">flg = <span class=\"number\">0</span>;<span class=\"comment\">%标志位</span></span><br><span class=\"line\">m = <span class=\"number\">0</span>;<span class=\"comment\">%计算保证率指标</span></span><br><span class=\"line\">Pbest = <span class=\"built_in\">zeros</span>(<span class=\"number\">15000</span>,<span class=\"number\">15</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> c = <span class=\"number\">1</span>:<span class=\"number\">46</span></span><br><span class=\"line\">b = punish(c,<span class=\"number\">1</span>);<span class=\"comment\">%设置惩罚系数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">25000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">25000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">i</span><span class=\"number\">-1</span> == <span class=\"number\">0</span></span><br><span class=\"line\">        f = <span class=\"number\">1</span>;</span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> f == <span class=\"number\">1</span></span><br><span class=\"line\">    faulce(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl1(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl1(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = <span class=\"built_in\">max</span>(Pcl1(<span class=\"built_in\">i</span>,:)+Pbest(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk1(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Z1(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%统计发电出力</span></span><br><span class=\"line\">n = <span class=\"built_in\">size</span>(Pcl1,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            P1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl1(<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">j</span> == n</span><br><span class=\"line\">            P1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">     <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"><span class=\"comment\">%优化计算过程2</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">171.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">1</span>) = <span class=\"number\">164.27</span>;</span><br><span class=\"line\"><span class=\"comment\">%下泄流量范围</span></span><br><span class=\"line\">l = <span class=\"built_in\">length</span>(Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>);</span><br><span class=\"line\">Qfd(<span class=\"number\">1</span>:l,<span class=\"built_in\">j</span>) = (Qst:<span class=\"number\">1</span>:Qst+<span class=\"number\">15000</span>)&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">flg = flg+<span class=\"number\">1</span>;<span class=\"comment\">%循环标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">15000</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) &lt; <span class=\"number\">171.5</span></span><br><span class=\"line\">    Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = Qfd(<span class=\"built_in\">i</span><span class=\"number\">-1</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%约束条件编制</span></span><br><span class=\"line\"><span class=\"comment\">%发电水头约束</span></span><br><span class=\"line\">[H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) K] = head(Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>),Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入下泄流量及上游水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站预想出力限制</span></span><br><span class=\"line\">yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Yuxcl(H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>));<span class=\"comment\">%输入当前水头</span></span><br><span class=\"line\"><span class=\"comment\">%水电站最大过流能力限制</span></span><br><span class=\"line\">xxnl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Xiaxnl(Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>));<span class=\"comment\">%输入当前上游水位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%指标函数（含惩罚函数）</span></span><br><span class=\"line\">output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = K * Qfd(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) * H(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)/<span class=\"number\">10000</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt; yxcl(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) &gt;= Pb</span><br><span class=\"line\">    Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) = output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>) + b*(output(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)-Pb);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%递推方程</span></span><br><span class=\"line\">Pbest(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"built_in\">max</span>(Pcl2(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)+Pbest(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%建立状态转移方程</span></span><br><span class=\"line\">V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + (Qrk2(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>)-Qfd(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*T;</span><br><span class=\"line\"><span class=\"comment\">%库容曲线约束</span></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>) = Kurqx(V(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>+<span class=\"number\">1</span>));<span class=\"comment\">%当前时段末水位</span></span><br><span class=\"line\"></span><br><span class=\"line\">Z2(<span class=\"number\">1</span>,<span class=\"number\">16</span>) = <span class=\"number\">175</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%统计发电出力</span></span><br><span class=\"line\">n = <span class=\"built_in\">size</span>(Pcl2,<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">1</span>:n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) == <span class=\"number\">0</span></span><br><span class=\"line\">            P2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl2(<span class=\"built_in\">j</span><span class=\"number\">-1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">         <span class=\"keyword\">if</span> Pcl1(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &lt;= <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">j</span> == n</span><br><span class=\"line\">            P2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>) = Pcl2(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z1(<span class=\"number\">1</span>,<span class=\"built_in\">i</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">16</span>:<span class=\"number\">27</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = <span class=\"number\">145</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">28</span>:<span class=\"number\">36</span></span><br><span class=\"line\">    endZ(<span class=\"built_in\">i</span>,<span class=\"number\">1</span>) = Z2(<span class=\"number\">1</span>,<span class=\"built_in\">i</span><span class=\"number\">-27</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(<span class=\"number\">1</span>:<span class=\"number\">36</span>,endZ(<span class=\"number\">1</span>:<span class=\"number\">36</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">xlim([<span class=\"number\">1</span> <span class=\"number\">36</span>])</span><br><span class=\"line\">ylim([<span class=\"number\">145</span> <span class=\"number\">185</span>])</span><br><span class=\"line\">ylabel(<span class=\"string\">&quot;水位/m&quot;</span>);</span><br><span class=\"line\">xlabel(<span class=\"string\">&quot;旬&quot;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&quot;1975年来流优化调度水位变化曲线&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">%&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%计算发电保证率</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">15</span></span><br><span class=\"line\">    P(<span class=\"number\">1</span>,k) = P1(<span class=\"number\">1</span>,k);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">16</span>:<span class=\"number\">24</span></span><br><span class=\"line\">    P(<span class=\"number\">1</span>,k) = P2(<span class=\"number\">1</span>,k<span class=\"number\">-15</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> d = <span class=\"number\">1</span>:<span class=\"number\">24</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> P(<span class=\"number\">1</span>,d) &lt; <span class=\"number\">499</span></span><br><span class=\"line\">       m = m+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">percent(c,<span class=\"number\">1</span>) = <span class=\"number\">1</span>-m/<span class=\"number\">24</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>基本完成课程设计任务。从最终得到的数据曲线来看，动态规划的问题比较大，另外两种方法均无法达到保证出力，是还没有解决的问题。常规调度第二段若完全按照调度图调度，整体发电甚至会更少。如果仍有时间，可以考虑改变出力目标，尝试全部改为保证出力计算。动态规划需要先做一些简单的小题再理解一下决策变量如何改变。</p>\r\n<p>先这样。over</p>\r\n<hr />\r\n","categories":["Curriculum design"],"tags":["application"]},{"title":"流域水文模型结课作业","url":"/2024/10/09/%E6%B5%81%E5%9F%9F%E6%B0%B4%E6%96%87%E6%A8%A1%E5%9E%8B%E7%BB%93%E8%AF%BE%E4%BD%9C%E4%B8%9A/","content":"<h2 id=\"任务\">任务</h2>\r\n<p>采用流域水文模型进行流域降雨-径流模拟。本次模拟中采用线性扰动LPM模型。</p>\r\n<h3 id=\"模型概况-1\">模型概况 <a href=\"#fn1\" class=\"footnote-ref\"\r\nid=\"fnref1\" role=\"doc-noteref\"><sup>1</sup></a></h3>\r\n<h4\r\nid=\"总径流响应slm模型的系统方程\">总径流响应（SLM）模型的系统方程</h4>\r\n<p>离散化的系统方程表达为：<span class=\"math display\">\\[Y(k) =\r\n\\sum_{i=1}^{m}H(i)X(k-i+1) \\tag{0.1}\\]</span>\r\n水文预报的应用之一就是由降雨X(k)推求总径流Y(k)。显然，其中的前提就是已知系统的响应函数H(i)。然而，在未完全建立SLM模型之前，响应函数是有待确定的。我们把由历史上（或实时方式）观测的输入、输出信息[X(k)、Y(K)]用来便是水文系统模型中未知或待定的部分，称之为水文系统识别。它是水文系统方法中重要的内容之一。只有把系统模型中待定的部分都确定了，才能应用到实际的水文预报或水温计算。对于总径流线性响应模型，系统识别的问题归为水文模型响应函数的推求。采用最多的是矩阵最小二乘法，简述如下：</p>\r\n<p>考虑到所用资料有误差，或对系统所作的线性假定不完善，式(0.1)可做如下表述：<span\r\nclass=\"math display\">\\[Y(k)=\\sum_{i=1}^{m}X(k-i+1)H(i)+e(k)\r\n\\tag{0.2}\\]</span> 式中,e(k)为随机误差项。\r\n随着水文时间序列的变化，即当k=1,2,...,n时，式（0.2）可逐行写为： <span\r\nclass=\"math display\">\\[Y(1) = X(1)H(1)+e(1)\\]</span> <span\r\nclass=\"math display\">\\[Y(2) = X(1)H(2) + X(2)H(1) + e(2)\\]</span> <span\r\nclass=\"math display\">\\[\\vdots\\]</span> <span class=\"math display\">\\[Y(m)\r\n= X(1)H(m) + X(2)H(m-1) + \\dots + X(m)H(1) + e(m)\\]</span> <span\r\nclass=\"math display\">\\[\\vdots\\]</span> <span class=\"math display\">\\[Y(n)\r\n= X(n-m+1)H(m) + X(n-m+2)H(m-1) + \\dots +X(n)H(1) + e(n)\\]</span></p>\r\n<p>他们可以用矩阵方程形式表达，简记为<span\r\nclass=\"math display\">\\[Y_{n\\times 1} = X_{n\\times n}H_{m\\times 1} +\r\nE_{n\\times 1} \\tag{0.2}\\]</span>\r\n式中，n代表水文资料的总长度，m是响应函数的记忆长度。由于n&gt;m，式（0.2）是一个超定方程组，其中的响应函数向量<span\r\nclass=\"math inline\">\\(H_{m\\times 1} =\r\n[h(1),h(2),\\dots,h(m)]^L\\)</span>可采用最小二乘法识别。目标函数记为<span\r\nclass=\"math display\">\\[J(H)=\\sum_{k=1}^{n}e^2(k)=E^TE=(Y-XH)^T(Y-XH)\r\n\\\\=Y^TY-2H^TX^TY+H^TX^TXH \\tag{0.3}\\]</span>\r\n由目标函数极小化，即min{J(H)}，不难导出响应函数的最小二乘解向量为：<span\r\nclass=\"math display\">\\[\\hat H = [X^TX]^{-1}[X^TY] \\tag{0.4}\\]</span></p>\r\n<h4 id=\"线性扰动模型的结构和基本假定\">线性扰动模型的结构和基本假定</h4>\r\n<p>线性扰动模型建立的思想是：依据观测的降雨<sub>径流（或河道输入</sub>输出）资料记为{I(k),Q(k)}，计算季节均值及其平滑值，分别记为<span\r\nclass=\"math inline\">\\(I_d\\)</span>和<span\r\nclass=\"math inline\">\\(Q_d\\)</span>。关于<span\r\nclass=\"math inline\">\\(I_d\\)</span>~<span\r\nclass=\"math inline\">\\(Q_d\\)</span>之间的复杂关系不作任何假定。然后，分别计算系统输入、输出变量相对他们季节均值的扰动项，即<span\r\nclass=\"math display\">\\[X(k) = I(k) - I_d \\tag{1}\\]</span> <span\r\nclass=\"math display\">\\[Y(k) = Q(k) - Q_d \\tag{2}\\]</span></p>\r\n<p>由于一个水文输入~输出序列中季节均值占有主导部分，为简化模型假定：输入的扰动项<span\r\nclass=\"math inline\">\\(X(k) = I(k) - I_d\\)</span>与输出的扰动项<span\r\nclass=\"math inline\">\\(Y(k) = Q(k) -\r\nQ_d\\)</span>之间存在线性关系，即<span class=\"math display\">\\[Y(k) =\r\n\\sum_{j=1}^{m}H(j)X(k-j+1)+e(k) \\tag{3}\\]</span>\r\n式中，H(j)被称为线性扰动系统响应函数，e(k)为误差，则我们把由上述三式组合的系统模型称为线性扰动模型（LPM）。</p>\r\n<h3 id=\"模型建立具体步骤2\">模型建立具体步骤<a href=\"#fn2\"\r\nclass=\"footnote-ref\" id=\"fnref2\"\r\nrole=\"doc-noteref\"><sup>2</sup></a></h3>\r\n<ul>\r\n<li>由观测的资料分别计算水文系统输入~输出序列样本的季节均值<span\r\nclass=\"math inline\">\\(I_d\\)</span>和<span\r\nclass=\"math inline\">\\(Q_d\\)</span>，d=1,2,3...,365。</li>\r\n<li>季节均值是流域的基本水文属性之一，应当是比较平稳的过程。但实际中求得的季节均值不可避免地带有随机噪音而出现振荡，因此，需要采用一定的数学方法使季节均值光滑。本次计算使用傅里叶级数法进行光滑。数学方程为：\r\n<span class=\"math display\">\\[Q_d = \\bar{Q_d} +\r\n\\sum_{j=1}^{L}[A_jcos(\\frac{2\\pi jd}{365}) + B_jsin(\\frac{2\\pi\r\njd}{365})] \\tag{4}\\]</span> 式中，<span\r\nclass=\"math inline\">\\(\\bar{Q_d}\\)</span>为均值，<span\r\nclass=\"math inline\">\\(A_j\\)</span>和<span\r\nclass=\"math inline\">\\(B_j\\)</span>为傅里叶系数，j为调和函数的序数，即\r\n<span class=\"math display\">\\[\\bar{Q_d} =\r\n\\frac{1}{365}\\sum_{j=1}^{365}Q_d \\tag{5}\\]</span> <span\r\nclass=\"math display\">\\[A_j =\r\n\\frac{2}{365}\\sum_{d=1}^{365}Q_dcos(\\frac{2\\pi jd}{365})\r\n\\tag{6}\\]</span> <span class=\"math display\">\\[B_j =\r\n\\frac{2}{365}\\sum_{d=1}^{365}Q_dsin(\\frac{2\\pi jd}{365})\r\n\\tag{7}\\]</span></li>\r\n</ul>\r\n<p>当式(4)中的调和函数只取得几项时，就得到<span\r\nclass=\"math inline\">\\(Q_d\\)</span>的光滑过程。实际中，一般取L=4或5个调和系数。</p>\r\n<ul>\r\n<li>利用式（1）、（2）计算输入扰动项X(k)和输出扰动项Y(k)形成式（3）的线性系统方程。</li>\r\n<li>采用与线性总径流模型相同的方法，由最小二乘法识别LPM模型的相应函数<span\r\nclass=\"math inline\">\\(\\hat H(j)\\)</span>。</li>\r\n<li>一旦响应函数已经求得，便可利用式（3）由降雨（或上流入流）的扰动值X(k)求得相应的出流扰动<span\r\nclass=\"math inline\">\\(\\hat Y(k)\\)</span>。</li>\r\n<li>由此计算或预报出系列<span class=\"math inline\">\\(Q(k)=Q_d+\\hat\r\nY(k)\\)</span>。</li>\r\n</ul>\r\n<h3 id=\"模型建立\">模型建立</h3>\r\n<h4 id=\"计算平滑后数据\">计算平滑后数据</h4>\r\n<p>此次模型建立取L=4进行平滑。根据上述公式对Q、P、E得到平滑结果如下：</p>\r\n<p><img src=\"流量平滑结果.png\" alt=\"alt text\" /> <img\r\nsrc=\"降雨平滑结果.png\" alt=\"alt text\" /> <img src=\"蒸发平滑结果.png\"\r\nalt=\"alt text\" /></p>\r\n<h4 id=\"建立线性系统方程\">建立线性系统方程</h4>\r\n<p>根据式（1）（2）计算输入输出扰动项并得到类似式（3）的线性系统方程。</p>\r\n<h4 id=\"使用遗传算法计算hat-hk\">使用遗传算法计算<span\r\nclass=\"math inline\">\\(\\hat H(k)\\)</span></h4>\r\n首先编写一个简单的遗传算法代码：\r\n<details>\r\n<summary>\r\n初始化种群:该函数生成一个大小为pop_size的初始种群，每个个体的基因长度为gene_length，基因值为0或1。\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">population</span> = <span class=\"title\">initialize_population</span><span class=\"params\">(pop_size, gene_length)</span></span></span><br><span class=\"line\">    population = randi([<span class=\"number\">0</span>, <span class=\"number\">1</span>], pop_size, gene_length);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n适应度函数：该函数计算个体的适应度，适应度为个体中1的数量。\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(individual)</span></span></span><br><span class=\"line\">    fit = sum(individual);  <span class=\"comment\">% Example: maximize the number of 1s</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n选择操作：这个函数根据适应度选择个体，适应度越高，被选中的概率越大。randsample函数用于带权重的随机抽样\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population, fitnesses)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population), <span class=\"built_in\">length</span>(population), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices, :);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n交叉操作：这个函数对两个父代个体进行交叉操作，生成两个子代个体。交叉点是随机选择的\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[offspring1, offspring2]</span> = <span class=\"title\">crossover</span><span class=\"params\">(parent1, parent2)</span></span></span><br><span class=\"line\">    point = randi([<span class=\"number\">1</span>, <span class=\"built_in\">length</span>(parent1) - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    offspring1 = [parent1(<span class=\"number\">1</span>:point), parent2(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\">    offspring2 = [parent2(<span class=\"number\">1</span>:point), parent1(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n变异操作：该函数对个体进行变异操作，每个基因以mutation_rate的概率发生变异，xor用于反转基因值\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutated_individual</span> = <span class=\"title\">mutate</span><span class=\"params\">(individual, mutation_rate)</span></span></span><br><span class=\"line\">    mutation_mask = <span class=\"built_in\">rand</span>(<span class=\"built_in\">size</span>(individual)) &lt; mutation_rate;</span><br><span class=\"line\">    mutated_individual = xor(individual, mutation_mask);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n生成新一代：这个函数生成新一代种群，通过选择、交叉和变异操作生成新的个体\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new_pop</span> = <span class=\"title\">new_generation</span><span class=\"params\">(population, mutation_rate)</span></span></span><br><span class=\"line\">    new_pop = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">size</span>(population));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">2</span>:<span class=\"built_in\">length</span>(population)</span><br><span class=\"line\">        parent1 = population(<span class=\"built_in\">i</span>, :);</span><br><span class=\"line\">        parent2 = population(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :);</span><br><span class=\"line\">        [offspring1, offspring2] = crossover(parent1, parent2);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>, :) = mutate(offspring1, mutation_rate);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :) = mutate(offspring2, mutation_rate);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<details>\r\n<summary>\r\n遗传算法主函数：该函数包含遗传算法的核心部分，包括上述所有函数以及终止条件，并最终输出结果\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">final_population</span> = <span class=\"title\">genetic_algorithm</span><span class=\"params\">(pop_size, gene_length, mutation_rate, generations)</span></span></span><br><span class=\"line\">    population = initialize_population(pop_size, gene_length);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> gen = <span class=\"number\">1</span>:generations</span><br><span class=\"line\">        fitnesses = arrayfun(@fitness, population);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">max</span>(fitnesses) == gene_length</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;  <span class=\"comment\">% Terminate if an optimal solution is found</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        population = selection(population, fitnesses);</span><br><span class=\"line\">        population = new_generation(population, mutation_rate);</span><br><span class=\"line\">        fprintf(<span class=\"string\">&#x27;Generation %d: Max Fitness = %d\\n&#x27;</span>, gen, <span class=\"built_in\">max</span>(fitnesses));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    final_population = population;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<ul>\r\n<li>fitnesses = arrayfun(<span class=\"citation\"\r\ndata-cites=\"fitiness\">@fitiness</span>,population)语法\r\n<ul>\r\n<li>arrayfun:arrayfun函数在matlab中用于对数组的每个元素应用指定的函数，它的语法是\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">arrayfun(function_handle,array)</span><br></pre></td></tr></table></figure>\r\n其中function_handle是要应用的函数，array是要处理的数组。</li>\r\n<li><span class=\"citation\" data-cites=\"fitness\">@fitness</span>：<span\r\nclass=\"citation\"\r\ndata-cites=\"fitness是一个函数句柄\">@fitness是一个函数句柄</span>，指向定义的fitness函数。在上文已经提及其用于计算个体的适应度。</li>\r\n<li>population：population是一个矩阵，表示当前种群。每一行代表一个个体，每一列代表一个基因。</li>\r\n</ul></li>\r\n</ul>\r\n</details>\r\n<details>\r\n<summary>\r\n参数设置和运行：这部分代码设置了包括种群大小、基因长度、变异率和最大代数等参数，并运行遗传算法\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">10</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% Run Genetic Algorithm</span></span><br><span class=\"line\">final_population = genetic_algorithm(pop_size, gene_length, mutation_rate, generations);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Final Population:&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">disp</span>(final_population);</span><br></pre></td></tr></table></figure>\r\n</details>\r\n<p>然后对其进行改写。\r\n首先，对进行交叉、进行变异、生成下一代的函数不做任何改变，用来进行交叉操作，变异操作，生成下一代。</p>\r\n<p>对于适应度函数，由于本次课设任务为拟合流量过程，因此将个体适应度改为在线性系统方程中所得到的函数值与流量数据的差值。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(individual)</span></span></span><br><span class=\"line\">    fit = <span class=\"built_in\">abs</span>(Y(<span class=\"built_in\">i</span>)-bin2dec(individual)*X(<span class=\"built_in\">i</span>));  <span class=\"comment\">%将个体由二进制转化为十进制进行计算</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>选择操作中，根据适应度选择个体。在上述情况下，设置适应度最小的个体最有可能被选中。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population, fitnesses)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = <span class=\"number\">1</span> - fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population), <span class=\"built_in\">length</span>(population), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices, :);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n<p>对于参数的随机生成，由于选取的参数为方程的系数，且样本数据较大会导致循环次数较多，因此需要限制生成的参数为小数且小数和整数部分的长度都不过长。</p>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">100</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\r\n<p>还需要编制按照上述要求将生成的二进制样本转化为十进制数的函数bin_dec。\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decimal</span> = <span class=\"title\">bin_dec</span><span class=\"params\">(population)</span></span></span><br><span class=\"line\">    int_part(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>) = population(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">5</span>);</span><br><span class=\"line\">    frac_part(<span class=\"built_in\">j</span>,<span class=\"number\">1</span>:<span class=\"number\">3</span>) = population(<span class=\"built_in\">j</span>,<span class=\"number\">6</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">    a = <span class=\"built_in\">length</span>(int_part(<span class=\"built_in\">j</span>,:));</span><br><span class=\"line\">    b = <span class=\"built_in\">length</span>(frac_part(<span class=\"built_in\">j</span>,:));</span><br><span class=\"line\">    <span class=\"comment\">% Convert the integer part</span></span><br><span class=\"line\">    decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:a</span><br><span class=\"line\">        decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = decimal_int(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) + int_part(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(a - <span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the fractional part</span></span><br><span class=\"line\">    decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)  = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:b</span><br><span class=\"line\">        decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>) = decimal_frac(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>)  + frac_part(<span class=\"built_in\">j</span>,<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(-<span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Combine the integer and fractional parts</span></span><br><span class=\"line\">    decimal(<span class=\"built_in\">j</span>) = decimal_int(<span class=\"built_in\">j</span>) + decimal_frac(<span class=\"built_in\">j</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure></p>\r\n<p>最后还需要修改程序的数据结构，对X(k),Y(k)中三年内的数据进行计算，得到每一日输入输出的响应函数，最终得到结果。</p>\r\n<p>需要注意的是，由于整个代码都使用函数进行计算，而函数工作区和普通工作区是不互通的，因此需要进行参数的传递。主要需要解决的是由arrayfun()函数传递参数的问题。</p>\r\n<p>整合函数如下：</p>\r\n<details>\r\n<summary>\r\n遗传算法识别响应函数\r\n</summary>\r\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%遗传算法识别响应函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%遗传算法参数设置</span></span><br><span class=\"line\"><span class=\"comment\">% Parameters</span></span><br><span class=\"line\">pop_size = <span class=\"number\">1000</span>;</span><br><span class=\"line\">gene_length = <span class=\"number\">8</span>;</span><br><span class=\"line\">mutation_rate = <span class=\"number\">0.01</span>;</span><br><span class=\"line\">generations = <span class=\"number\">1000</span>;</span><br><span class=\"line\">fitness_threshold = <span class=\"number\">0.01</span>;<span class=\"comment\">%循环终止条件</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:<span class=\"number\">365</span></span><br><span class=\"line\">c = Y(k);</span><br><span class=\"line\">d = X(k);</span><br><span class=\"line\"><span class=\"comment\">% Run Genetic Algorithm</span></span><br><span class=\"line\">[best_individual,final_population] = genetic_algorithm(pop_size, gene_length, mutation_rate, generations,c,d,fitness_threshold);</span><br><span class=\"line\"><span class=\"built_in\">ans</span>(<span class=\"number\">1</span>,k) = bin_dec(best_individual);</span><br><span class=\"line\"><span class=\"comment\">%disp(ans(1,k));</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%初始种群</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">population</span> = <span class=\"title\">initialize_population</span><span class=\"params\">(pop_size, gene_length)</span></span></span><br><span class=\"line\">    population = randi([<span class=\"number\">0</span>, <span class=\"number\">1</span>], pop_size, gene_length);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%适应度计算</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fit</span> = <span class=\"title\">fitness</span><span class=\"params\">(decimal,c,d)</span> </span></span><br><span class=\"line\">    fit = <span class=\"built_in\">abs</span>(c-decimal*d);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%选择</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">selected_population</span> = <span class=\"title\">selection</span><span class=\"params\">(population_decimal, fitnesses,population)</span></span></span><br><span class=\"line\">    total_fitness = sum(fitnesses);</span><br><span class=\"line\">    probabilities = <span class=\"number\">1</span> - fitnesses / total_fitness;</span><br><span class=\"line\">    selected_indices = randsample(<span class=\"number\">1</span>:<span class=\"built_in\">length</span>(population_decimal), <span class=\"built_in\">length</span>(population_decimal), <span class=\"built_in\">true</span>, probabilities);</span><br><span class=\"line\">    selected_population = population(selected_indices,:);</span><br><span class=\"line\">    <span class=\"comment\">%disp(population);</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%交叉</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[offspring1, offspring2]</span> = <span class=\"title\">crossover</span><span class=\"params\">(parent1, parent2)</span></span></span><br><span class=\"line\">    point = randi([<span class=\"number\">1</span>, <span class=\"built_in\">length</span>(parent1) - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    offspring1 = [parent1(<span class=\"number\">1</span>:point), parent2(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\">    offspring2 = [parent2(<span class=\"number\">1</span>:point), parent1(point+<span class=\"number\">1</span>:<span class=\"keyword\">end</span>)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%变异</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mutated_individual</span> = <span class=\"title\">mutate</span><span class=\"params\">(individual, mutation_rate)</span></span></span><br><span class=\"line\">    mutation_mask = <span class=\"built_in\">rand</span>(<span class=\"built_in\">size</span>(individual)) &lt; mutation_rate;</span><br><span class=\"line\">    mutated_individual = xor(individual, mutation_mask);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%生成下一代</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">new_pop</span> = <span class=\"title\">new_generation</span><span class=\"params\">(population, mutation_rate)</span></span></span><br><span class=\"line\">    new_pop = <span class=\"built_in\">zeros</span>(<span class=\"built_in\">size</span>(population));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"number\">2</span>:<span class=\"built_in\">length</span>(population)</span><br><span class=\"line\">        parent1 = population(<span class=\"built_in\">i</span>,:);</span><br><span class=\"line\">        parent2 = population(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>,:);</span><br><span class=\"line\">        [offspring1, offspring2] = crossover(parent1, parent2);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>, :) = mutate(offspring1, mutation_rate);</span><br><span class=\"line\">        new_pop(<span class=\"built_in\">i</span>+<span class=\"number\">1</span>, :) = mutate(offspring2, mutation_rate);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%二进制转化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decimal</span> = <span class=\"title\">bin_dec</span><span class=\"params\">(population_row)</span></span></span><br><span class=\"line\">    <span class=\"comment\">% Assuming population_row is a row vector</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">length</span>(population_row) &lt; <span class=\"number\">8</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;Population vector must be at least 8 bits long.&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    int_part = population_row(<span class=\"number\">1</span>:<span class=\"number\">5</span>); <span class=\"comment\">% First 5 bits for integer part</span></span><br><span class=\"line\">    frac_part = population_row(<span class=\"number\">6</span>:<span class=\"number\">8</span>); <span class=\"comment\">% Next 3 bits for fractional part</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the integer part</span></span><br><span class=\"line\">    decimal_int = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(int_part)</span><br><span class=\"line\">        decimal_int = decimal_int + int_part(<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(<span class=\"built_in\">length</span>(int_part) - <span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Convert the fractional part</span></span><br><span class=\"line\">    decimal_frac = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(frac_part)</span><br><span class=\"line\">        decimal_frac = decimal_frac + frac_part(<span class=\"built_in\">i</span>) * <span class=\"number\">2</span>^(-<span class=\"built_in\">i</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Combine integer and fractional parts</span></span><br><span class=\"line\">    decimal = decimal_int + decimal_frac;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%%主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[best_individual,final_population]</span> = <span class=\"title\">genetic_algorithm</span><span class=\"params\">(pop_size, gene_length, mutation_rate, generations,c,d,fitness_threshold)</span></span></span><br><span class=\"line\">    population = initialize_population(pop_size, gene_length);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> gen = <span class=\"number\">1</span>:generations</span><br><span class=\"line\">        <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:pop_size</span><br><span class=\"line\">            population_decimal(<span class=\"built_in\">i</span>) = bin_dec(population(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fitnesses = arrayfun(@(individuals) fitness(individuals,c,d), population_decimal);</span><br><span class=\"line\">        max_fitness = <span class=\"built_in\">max</span>(fitnesses);</span><br><span class=\"line\">        <span class=\"comment\">%</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> max_fitness &lt; fitness_threshold</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        <span class=\"comment\">%&#125;</span></span><br><span class=\"line\">        population = selection(population_decimal, fitnesses, population);</span><br><span class=\"line\">        population = new_generation(population, mutation_rate);</span><br><span class=\"line\">        <span class=\"comment\">%fprintf(&#x27;Generation %d: Max Fitness = %d\\n&#x27;, gen, min(fitnesses));</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    final_population = population;</span><br><span class=\"line\">    <span class=\"comment\">%</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">1</span>:<span class=\"built_in\">length</span>(final_population)</span><br><span class=\"line\">        population_decimal(<span class=\"built_in\">i</span>) = bin_dec(final_population(<span class=\"built_in\">i</span>,:));</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    fitnesses = arrayfun(@(individuals) fitness(individuals,c,d), population_decimal);</span><br><span class=\"line\">    [~, max_fitness_index] = <span class=\"built_in\">min</span>(fitnesses);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% Get the individual with the highest fitness</span></span><br><span class=\"line\">    best_individual = final_population(max_fitness_index, :);</span><br><span class=\"line\">    <span class=\"comment\">%&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\r\n</details>\r\n<h3 id=\"模型检验\">模型检验</h3>\r\n<p>选取2010-2014年间任一场洪水，检验所得数据精确性。经分析，决定选取2013-9-22——2013-9-29为检验期。由上述模型得到的参数进行检验，得到下图结果。</p>\r\n<section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\"\r\nrole=\"doc-endnotes\">\r\n<hr />\r\n<ol>\r\n<li\r\nid=\"fn1\"><p>梁庚辰,J.E.Nash.大流域汇流演算的线性扰动模型[J].水力发电学报,1991,(02):14-28.<a\r\nhref=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\r\n<li id=\"fn2\"><p>《工程水文学》,2005,叶守则,詹道江.<a href=\"#fnref2\"\r\nclass=\"footnote-back\" role=\"doc-backlink\">↩︎</a></p></li>\r\n</ol>\r\n</section>\r\n","categories":["Curriculum design"],"tags":["application"]},{"title":"五月摄影总结","url":"/2025/06/09/%E4%BA%94%E6%9C%88%E6%91%84%E5%BD%B1%E6%80%BB%E7%BB%93/","content":"<p>论文截稿后的日子无比滋润。五月的中心思想就是拍来拍去，带着相机去了很多之前去过或没去过的地方，现在选一些我个人很喜欢的照片做一个五月的总结。</p>\r\n<p>P.S. 为什么现在才发呢？因为刚刚才修完所有的图😑。</p>\r\n<figure>\r\n<img src=\"DSC00211-1749455610452-2.jpg\" alt=\"五一假期的仁寿山\" />\r\n<figcaption aria-hidden=\"true\">五一假期的仁寿山</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00230-1749455758708-5.jpg\" alt=\"山上的土地庙\" />\r\n<figcaption aria-hidden=\"true\">山上的土地庙</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00269.jpg\" alt=\"改顶的清真大寺\" />\r\n<figcaption aria-hidden=\"true\">改顶的清真大寺</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00318-1749456018754-21.jpg\" alt=\"徐汇图书馆\" />\r\n<figcaption aria-hidden=\"true\">徐汇图书馆</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00391.jpg\" alt=\"疑似黑猴场景（雾）（是黄昏的静安寺）\" />\r\n<figcaption\r\naria-hidden=\"true\">疑似黑猴场景（雾）（是黄昏的静安寺）</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00490.jpg\" alt=\"很有意思的街道，玩了玩蒙版\" />\r\n<figcaption aria-hidden=\"true\">很有意思的街道，玩了玩蒙版</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00550.jpg\" alt=\"老王说这张可以封神（冷漠脸）\" />\r\n<figcaption aria-hidden=\"true\">老王说这张可以封神（冷漠脸）</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01166.jpg\" alt=\"校内偶遇幸福老爷爷老奶奶\" />\r\n<figcaption aria-hidden=\"true\">校内偶遇幸福老爷爷老奶奶</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01174.jpg\" alt=\"工村的家属楼可能需要翻新一下了（x\" />\r\n<figcaption\r\naria-hidden=\"true\">工村的家属楼可能需要翻新一下了（x</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00704.jpg\" alt=\"老王！（失焦版）\" />\r\n<figcaption aria-hidden=\"true\">老王！（失焦版）</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00785.jpg\" alt=\"唐城\" />\r\n<figcaption aria-hidden=\"true\">唐城</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00995.jpg\" alt=\"鱼梁洲的某缝缝，手动改变照片比例（x\" />\r\n<figcaption\r\naria-hidden=\"true\">鱼梁洲的某缝缝，手动改变照片比例（x</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC00983.jpg\" alt=\"那天夕阳好好看\" />\r\n<figcaption aria-hidden=\"true\">那天夕阳好好看</figcaption>\r\n</figure>\r\n<p><img src=\"DSC00992.jpg\" /></p>\r\n<figure>\r\n<img src=\"DSC01043.jpg\" alt=\"好玩的😋\" />\r\n<figcaption aria-hidden=\"true\">好玩的😋</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01106-1749456640240-36.jpg\"\r\nalt=\"县城的悠闲狗子（差一点失焦😮‍💨）\" />\r\n<figcaption\r\naria-hidden=\"true\">县城的悠闲狗子（差一点失焦😮‍💨）</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01126.jpg\" alt=\"人生第一个打到的鸟（甚至想去交个朋友）\" />\r\n<figcaption\r\naria-hidden=\"true\">人生第一个打到的鸟（甚至想去交个朋友）</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01178.jpg\" alt=\"回学校开始了丧心病狂的光影之旅\" />\r\n<figcaption\r\naria-hidden=\"true\">回学校开始了丧心病狂的光影之旅</figcaption>\r\n</figure>\r\n<p><img src=\"DSC01181.jpg\" /></p>\r\n<p><img src=\"DSC01186.jpg\" /></p>\r\n<figure>\r\n<img src=\"DSC01192.jpg\" alt=\"俺和老王！\" />\r\n<figcaption aria-hidden=\"true\">俺和老王！</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"DSC01218.jpg\" alt=\"路过的图书馆窗户\" />\r\n<figcaption aria-hidden=\"true\">路过的图书馆窗户</figcaption>\r\n</figure>\r\n<p>离校的日子一天天靠近，六月的学士服会在校园里留下怎样的痕迹？且听下回分解。（鞠躬）</p>\r\n","categories":["Photos"],"tags":["2860 f4-5.6"]},{"title":"科研绘图记录（玫瑰图）","url":"/2025/07/13/%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E8%AE%B0%E5%BD%95%EF%BC%88%E7%8E%AB%E7%91%B0%E5%9B%BE%EF%BC%89/","content":"<figure>\r\n<img\r\nsrc=\"https://pica.zhimg.com/v2-c399aacab99321dd5165393e0cab1d48_1440w.jpg\"\r\nalt=\"玫瑰图\" />\r\n<figcaption aria-hidden=\"true\">玫瑰图</figcaption>\r\n</figure>\r\n<h2 id=\"玫瑰图的特点\">玫瑰图的特点</h2>\r\n<ul>\r\n<li><p>适合对比分析，没有占比意义</p></li>\r\n<li><p>数据差异不宜过大</p>\r\n<p>在玫瑰图中，一般使用圆弧的半径表示数据的大小。尤其适合对比大小相近的数值。当数据差异过大，还是推荐使用柱状图表现数据。</p></li>\r\n<li><p>可以反应数据的周期性</p>\r\n<p>一般情况下，圆形有周期的特性。如果数据恰好来自于一个周期内，比如星期、<strong>月份</strong>，则可以按照周期的概念划分出玫瑰图的花瓣。</p></li>\r\n</ul>\r\n<h2 id=\"玫瑰图的使用\">玫瑰图的使用</h2>\r\n<p>可以修改扇形的形状，例如修改为长方形，在图表中心进行额外标注（如图1）</p>\r\n<figure>\r\n<img src=\"v2-462bd512990cd7971796b4f96fe70b47_1440w.jpg\" alt=\"图1\" />\r\n<figcaption aria-hidden=\"true\">图1</figcaption>\r\n</figure>\r\n<p>还可以修改玫瑰图整体轮廓。例如当数据条数并不太多时，使用扇形玫瑰图会比圆形玫瑰图更加清晰，表现效果更好。（如图2）</p>\r\n<figure>\r\n<img src=\"v2-96eaeb6491e0b6f5433d3a1e87a437ed_1440w.png\" alt=\"图2\" />\r\n<figcaption aria-hidden=\"true\">图2</figcaption>\r\n</figure>\r\n<p>为进行更清晰的数据对比，可以将扇形部分分颜色并列，或者将小扇形叠加。（如图3）</p>\r\n<figure>\r\n<img src=\"v2-cd6b89c6de5d873dd1ce570fa2f213d0_1440w.png\" alt=\"图3\" />\r\n<figcaption aria-hidden=\"true\">图3</figcaption>\r\n</figure>\r\n<h2 id=\"利用matplotlib实现玫瑰图\">利用matplotlib实现玫瑰图</h2>\r\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Rose Plot&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27; This code creates a circle with cirtain part of colored fanwise</span></span><br><span class=\"line\"><span class=\"string\">y=20</span></span><br><span class=\"line\"><span class=\"string\">x=np.pi/2</span></span><br><span class=\"line\"><span class=\"string\">w=np.pi/2</span></span><br><span class=\"line\"><span class=\"string\">color=(206/255,32/255,69/255)</span></span><br><span class=\"line\"><span class=\"string\">edgecolor=(206/255,32/255,69/255)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">fig = plt.figure(figsize=(13.44,7.5))</span></span><br><span class=\"line\"><span class=\"string\">ax = fig.add_subplot(111,projection=&#x27;polar&#x27;) #建立一个极坐标系 </span></span><br><span class=\"line\"><span class=\"string\">ax.bar(x,y,width=w,bottom=10,color=color,edgecolor=edgecolor)</span></span><br><span class=\"line\"><span class=\"string\">plt.show()</span></span><br><span class=\"line\"><span class=\"string\">fig.savefig(&quot;D:\\_A_GGDD\\_A_Research\\picturelearning\\Rose_plot.png&quot;,dpi=400,bbox_inches=&#x27;tight&#x27;,transparent=True)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Rose Plot&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;An example&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27; We divide the circle into 10 equal parts&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">x1 = [np.pi/<span class=\"number\">10</span> + np.pi*i/<span class=\"number\">5</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</span><br><span class=\"line\">x2 = [np.pi/<span class=\"number\">20</span>+np.pi*i/<span class=\"number\">5</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</span><br><span class=\"line\">x3 = [<span class=\"number\">3</span>*np.pi/<span class=\"number\">20</span>+np.pi*i/<span class=\"number\">5</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">11</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">y1 = [<span class=\"number\">7000</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">10</span>)]</span><br><span class=\"line\">y2 = [<span class=\"number\">6000</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">10</span>)]</span><br><span class=\"line\">fig=plt.figure(figsize=(<span class=\"number\">13.44</span>,<span class=\"number\">7.5</span>))</span><br><span class=\"line\">ax = fig.add_subplot(<span class=\"number\">111</span>,projection=<span class=\"string\">&#x27;polar&#x27;</span>)</span><br><span class=\"line\">ax.axis(<span class=\"string\">&#x27;off&#x27;</span>) <span class=\"comment\"># Hide the polar axis</span></span><br><span class=\"line\">ax.bar(x1,y1,width=np.pi/<span class=\"number\">5</span>,color=(<span class=\"number\">220</span>/<span class=\"number\">255</span>,<span class=\"number\">222</span>/<span class=\"number\">255</span>,<span class=\"number\">221</span>/<span class=\"number\">255</span>),edgecolor=(<span class=\"number\">204</span>/<span class=\"number\">255</span>,<span class=\"number\">206</span>/<span class=\"number\">255</span>,<span class=\"number\">205</span>/<span class=\"number\">255</span>))</span><br><span class=\"line\">ax.bar(x1,y2,width = np.pi/<span class=\"number\">5</span>,color=<span class=\"string\">&#x27;w&#x27;</span>,edgecolor=(<span class=\"number\">204</span>/<span class=\"number\">255</span>,<span class=\"number\">206</span>/<span class=\"number\">255</span>,<span class=\"number\">205</span>/<span class=\"number\">255</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;Now we finish the frame of the circle, then we can add data to the circle. For example, we use random data to fill the circle.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">random.seed(<span class=\"number\">100</span>)</span><br><span class=\"line\">y4 = [random.randint(<span class=\"number\">4000</span>,<span class=\"number\">5500</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)]</span><br><span class=\"line\">y5 = [random.randint(<span class=\"number\">3000</span>,<span class=\"number\">5000</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">ax.bar(x2,y4,width = np.pi/<span class=\"number\">10</span>,color=(<span class=\"number\">206</span>/<span class=\"number\">255</span>,<span class=\"number\">32</span>/<span class=\"number\">255</span>,<span class=\"number\">69</span>/<span class=\"number\">255</span>),edgecolor=(<span class=\"number\">206</span>/<span class=\"number\">255</span>,<span class=\"number\">32</span>/<span class=\"number\">255</span>,<span class=\"number\">69</span>/<span class=\"number\">255</span>))</span><br><span class=\"line\">ax.bar(x3,y5,width = np.pi/<span class=\"number\">10</span>,color=(<span class=\"number\">34</span>/<span class=\"number\">255</span>,<span class=\"number\">66</span>/<span class=\"number\">255</span>,<span class=\"number\">123</span>/<span class=\"number\">255</span>),edgecolor=(<span class=\"number\">34</span>/<span class=\"number\">255</span>,<span class=\"number\">66</span>/<span class=\"number\">255</span>,<span class=\"number\">123</span>/<span class=\"number\">255</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;We almost finish the circle, but it&#x27;s not really beautiful. We intend to add a small white circle in the centre&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">y6 = [<span class=\"number\">2000</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">10</span>)]</span><br><span class=\"line\">ax.bar(x1,y6,width=np.pi/<span class=\"number\">5</span>,color=<span class=\"string\">&#x27;w&#x27;</span>,edgecolor=<span class=\"string\">&#x27;w&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Adding text descriptions to the rose plot</span></span><br><span class=\"line\"><span class=\"comment\"># Method 1: Add labels for each section</span></span><br><span class=\"line\"></span><br><span class=\"line\">labels = [<span class=\"string\">&#x27;Section 1&#x27;</span>, <span class=\"string\">&#x27;Section 2&#x27;</span>, <span class=\"string\">&#x27;Section 3&#x27;</span>, <span class=\"string\">&#x27;Section 4&#x27;</span>, <span class=\"string\">&#x27;Section 5&#x27;</span>, </span><br><span class=\"line\">          <span class=\"string\">&#x27;Section 6&#x27;</span>, <span class=\"string\">&#x27;Section 7&#x27;</span>, <span class=\"string\">&#x27;Section 8&#x27;</span>, <span class=\"string\">&#x27;Section 9&#x27;</span>, <span class=\"string\">&#x27;Section 10&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Add text labels at the outer edge of each section</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i, (angle, label) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(<span class=\"built_in\">zip</span>(x1, labels)):</span><br><span class=\"line\">    ax.text(angle, <span class=\"number\">7500</span>, label, rotation=np.degrees(angle)-<span class=\"number\">90</span>, </span><br><span class=\"line\">            ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;center&#x27;</span>, fontsize=<span class=\"number\">10</span>, fontweight=<span class=\"string\">&#x27;bold&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Method 2: Add a title to the plot</span></span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Nightingale Rose Chart Example&#x27;</span>, pad=<span class=\"number\">20</span>, fontsize=<span class=\"number\">16</span>, fontweight=<span class=\"string\">&#x27;bold&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Method 3: Add legend for the different colors</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.patches <span class=\"keyword\">import</span> Patch</span><br><span class=\"line\">legend_elements = [Patch(facecolor=(<span class=\"number\">206</span>/<span class=\"number\">255</span>,<span class=\"number\">32</span>/<span class=\"number\">255</span>,<span class=\"number\">69</span>/<span class=\"number\">255</span>), label=<span class=\"string\">&#x27;Category A&#x27;</span>),</span><br><span class=\"line\">                   Patch(facecolor=(<span class=\"number\">34</span>/<span class=\"number\">255</span>,<span class=\"number\">66</span>/<span class=\"number\">255</span>,<span class=\"number\">123</span>/<span class=\"number\">255</span>), label=<span class=\"string\">&#x27;Category B&#x27;</span>)]</span><br><span class=\"line\">ax.legend(handles=legend_elements, loc=<span class=\"string\">&#x27;upper right&#x27;</span>, bbox_to_anchor=(<span class=\"number\">1.3</span>, <span class=\"number\">1.0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Method 4: Add value labels on the bars</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i, (angle, val1, val2) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(<span class=\"built_in\">zip</span>(x2, y4, y5)):</span><br><span class=\"line\">    <span class=\"comment\"># Label for red bars</span></span><br><span class=\"line\">    ax.text(angle, val1 + <span class=\"number\">200</span>, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;val1&#125;</span>&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;bottom&#x27;</span>, </span><br><span class=\"line\">            fontsize=<span class=\"number\">8</span>, color=<span class=\"string\">&#x27;darkred&#x27;</span>, fontweight=<span class=\"string\">&#x27;bold&#x27;</span>)   </span><br><span class=\"line\"><span class=\"comment\"># For blue bars</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i, (angle, val) <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(<span class=\"built_in\">zip</span>(x3, y5)):</span><br><span class=\"line\">    ax.text(angle, val + <span class=\"number\">200</span>, <span class=\"string\">f&#x27;<span class=\"subst\">&#123;val&#125;</span>&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;bottom&#x27;</span>, </span><br><span class=\"line\">             fontsize=<span class=\"number\">8</span>, color=<span class=\"string\">&#x27;darkblue&#x27;</span>, fontweight=<span class=\"string\">&#x27;bold&#x27;</span>)</span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"comment\"># Method 5: Add a central label</span></span><br><span class=\"line\">ax.text(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"string\">&#x27;Rose Chart\\n2025&#x27;</span>, ha=<span class=\"string\">&#x27;center&#x27;</span>, va=<span class=\"string\">&#x27;center&#x27;</span>, </span><br><span class=\"line\">        fontsize=<span class=\"number\">14</span>, fontweight=<span class=\"string\">&#x27;bold&#x27;</span>, </span><br><span class=\"line\">        bbox=<span class=\"built_in\">dict</span>(boxstyle=<span class=\"string\">&quot;round,pad=0.3&quot;</span>, facecolor=<span class=\"string\">&#x27;white&#x27;</span>, alpha=<span class=\"number\">0.8</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">fig.savefig(<span class=\"string\">r&quot;D:\\_A_GGDD\\_A_Research\\PictureLearning\\Nightingale_Rose_Chart\\Rose_plot(texted).png&quot;</span>,dpi=<span class=\"number\">400</span>,bbox_inches=<span class=\"string\">&#x27;tight&#x27;</span>,transparent=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\r\n<p>代码中同时罗列了不同的图表标记方式，现展示中心图表名作为例子，其他效果可以按照描述自行选择。</p>\r\n<p><img src=\"Rose_plot(texted).png\" /></p>\r\n","categories":["Research"],"tags":["office"]},{"title":"《大模型应用开发极简入门》学习笔记","url":"/2025/07/15/%E3%80%8A%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%9E%81%E7%AE%80%E5%85%A5%E9%97%A8%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"24-开始使用openai-python库\"><a class=\"markdownIt-Anchor\" href=\"#24-开始使用openai-python库\"></a> 2.4 开始使用OpenAI Python库</h2>\n<h3 id=\"调用chatcompletion端点示例\"><a class=\"markdownIt-Anchor\" href=\"#调用chatcompletion端点示例\"></a> 调用ChatCompletion端点示例</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> dotenv <span class=\"keyword\">import</span> load_dotenv</span><br><span class=\"line\"></span><br><span class=\"line\">load_dotenv()<span class=\"comment\">#To load environmental viriation and add it in openai</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> openai <span class=\"keyword\">import</span> OpenAI</span><br><span class=\"line\"></span><br><span class=\"line\">client = OpenAI()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Make sure the environment variable OPENAI_API_KEY is set.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Call the openai ChatCompletion endpoint, with th ChatGPT model</span></span><br><span class=\"line\">response = client.chat.completions.create(model=<span class=\"string\">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class=\"line\">messages=[</span><br><span class=\"line\">      &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;Hello World!&quot;</span>&#125;</span><br><span class=\"line\">  ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Extract the response</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(response.choices[<span class=\"number\">0</span>].message.content)</span><br></pre></td></tr></table></figure>\n<p>将有以下输出：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">Hello there! How may I assist you today?</span><br></pre></td></tr></table></figure>\n<h3 id=\"chatcompletion端点的输入选项\"><a class=\"markdownIt-Anchor\" href=\"#chatcompletion端点的输入选项\"></a> ChatCompletion端点的输入选项</h3>\n<p>接下来更详细的了解一下如何使用ChatCompletion端点及其create方法。</p>\n<ul>\n<li>create方法让用户能够调用OpenAI的模型。</li>\n</ul>\n<h4 id=\"1必须输入的参数\"><a class=\"markdownIt-Anchor\" href=\"#1必须输入的参数\"></a> 1.必须输入的参数</h4>\n<ul>\n<li>model（字符串）：所选模型的ID</li>\n<li>messages(数组)：表示对话的消息对象数组。消息对象有两个属性：role（可能的值有：system,user,assitant）和conten（包含对话消息的字符串）</li>\n</ul>\n<h4 id=\"2一些可选参数\"><a class=\"markdownIt-Anchor\" href=\"#2一些可选参数\"></a> 2.一些可选参数</h4>\n<ul>\n<li>functions（数组）：由可用函数组成的数组</li>\n<li>function_call（字符串或对象）：控制模型的相应方式\n<ul>\n<li>none表示模型必须以标准方式响应用户</li>\n<li>{&quot;name&quot;:&quot;my_function&quot;}表示模型必须给出使用指定函数的回答</li>\n<li>auto表示模型可以在标准方式响应用户和functions数组定义的函数之间进行选择</li>\n</ul>\n</li>\n<li>temperature（数值，默认值为1；可接受介于0和2之间的值）：温度值越高，结果的随机性就越强。当温度被设置为0时，LLM始终选择概率最高的标记。较高的温度可以产生更多样化、更具创造力的输出</li>\n<li>n（整型，默认值为1）：通过这个参数，可以为给定的输入消息生成多个回答。</li>\n<li>sream（布尔型，默认为False）：这个参数将允许回答以流的格式呈现，这意味着并非一次性发送整条消息。</li>\n<li>max_tokens（整型）：这个参数指定在聊天中生成的最大标记数。</li>\n</ul>\n<h2 id=\"llm驱动型应用程序的漏洞\"><a class=\"markdownIt-Anchor\" href=\"#llm驱动型应用程序的漏洞\"></a> LLM驱动型应用程序的漏洞</h2>\n<p>即容易受到提示词注入攻击。</p>\n<p>如果计划开发和部署一个面向用户的应用程序，那么建议结合以下两种方法。</p>\n<ul>\n<li>添加分析层来过滤用户输入和模型输出</li>\n<li>意识到提示词注入不可避免，并采取一定的预防措施</li>\n</ul>\n<h3 id=\"分析输入和输出\"><a class=\"markdownIt-Anchor\" href=\"#分析输入和输出\"></a> 分析输入和输出</h3>\n<ul>\n<li>使用特定规则控制用户输入</li>\n<li>控制输入长度</li>\n<li>控制输出</li>\n<li>监控和审计</li>\n<li>意图分析</li>\n</ul>\n<h2 id=\"示例项目\"><a class=\"markdownIt-Anchor\" href=\"#示例项目\"></a> 示例项目</h2>\n<h3 id=\"1构建新闻稿生成器\"><a class=\"markdownIt-Anchor\" href=\"#1构建新闻稿生成器\"></a> 1.构建新闻稿生成器</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> typing <span class=\"keyword\">import</span> <span class=\"type\">List</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> openai <span class=\"keyword\">import</span> OpenAI</span><br><span class=\"line\"><span class=\"keyword\">from</span> dotenv <span class=\"keyword\">import</span> load_dotenv</span><br><span class=\"line\"></span><br><span class=\"line\">load_dotenv()</span><br><span class=\"line\"></span><br><span class=\"line\">client = OpenAI()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ask_chatgpt</span>(<span class=\"params\">messages</span>):</span><br><span class=\"line\">    response = client.chat.completions.create(model=<span class=\"string\">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class=\"line\">                                             messages=messages)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (response.choices[<span class=\"number\">0</span>].message.content)</span><br><span class=\"line\"></span><br><span class=\"line\">prompt_role=<span class=\"string\">&#x27;&#x27;&#x27;You are an assitant for journalists.</span></span><br><span class=\"line\"><span class=\"string\">Your task is to write articles, based on the FACTS that given to you.</span></span><br><span class=\"line\"><span class=\"string\">You should respect the instructions: the TONE, the LENGTH, and the STYLE&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">assist_journalists</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">\t\tfacts:<span class=\"type\">List</span>[<span class=\"built_in\">str</span>],</span>)</span><br><span class=\"line\">\t\ttone: <span class=\"built_in\">str</span>, length_words: <span class=\"built_in\">int</span>, style: <span class=\"built_in\">str</span>):</span><br><span class=\"line\">     facts = <span class=\"string\">&quot;,&quot;</span>.join(facts)</span><br><span class=\"line\">    prompt = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;prompt_role&#125;</span>\\nFACTS: <span class=\"subst\">&#123;facts&#125;</span>\\nTONE: <span class=\"subst\">&#123;tone&#125;</span>\\nLENGTH: \t\t\t<span class=\"subst\">&#123;length_words&#125;</span> words\\nSTYLE: <span class=\"subst\">&#123;style&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(</span><br><span class=\"line\">\tassist_journalist(</span><br><span class=\"line\">    \t[<span class=\"string\">&#x27;The sky is blue&#x27;</span>, <span class=\"string\">&#x27;The grass is green&#x27;</span>],</span><br><span class=\"line\">    \t<span class=\"string\">&#x27;informal&#x27;</span>,<span class=\"string\">&#x27;100&#x27;</span>,<span class=\"string\">&#x27;blogpost&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"3打造塞尔达传说旷野之息专家\"><a class=\"markdownIt-Anchor\" href=\"#3打造塞尔达传说旷野之息专家\"></a> 3.打造《塞尔达传说：旷野之息》专家</h3>\n<p>由于任天堂指南的PDF太大，不可能通过提示词发送给OpenAI。这里使用一种以软件为导向的方法。基本思想是使用GPT-4或ChatGPT进行信息还原，我们要求它根据我们认为可能与问题匹配的文本摘录来生成答案。</p>\n<p>需要以下三个组件。</p>\n<ul>\n<li>意图服务</li>\n</ul>\n<p>用于检测用户的意图。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openai <span class=\"keyword\">import</span> OpenAI</span><br><span class=\"line\"></span><br><span class=\"line\">client = OpenAI()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ResponseService</span>():</span><br><span class=\"line\">     <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"keyword\">def</span> <span class=\"title function_\">generate_response</span>(<span class=\"params\">self, facts, user_question</span>):</span><br><span class=\"line\">         response = client.chat.completions.create(model=<span class=\"string\">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class=\"line\">         messages=[</span><br><span class=\"line\">               &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&#x27;Based on the FACTS, give an answer to the QUESTION.&#x27;</span>+ </span><br><span class=\"line\">                <span class=\"string\">f&#x27;QUESTION: <span class=\"subst\">&#123;user_question&#125;</span>. FACTS: <span class=\"subst\">&#123;facts&#125;</span>&#x27;</span>&#125;</span><br><span class=\"line\">            ])</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"comment\"># extract the response</span></span><br><span class=\"line\">         <span class=\"keyword\">return</span> (response.choices[<span class=\"number\">0</span>].message.content)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>信息检索服务</p>\n<p>该服务将获取意图服务的输出并检索正确的信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> openai <span class=\"keyword\">import</span> OpenAI</span><br><span class=\"line\"></span><br><span class=\"line\">client = OpenAI()</span><br><span class=\"line\"><span class=\"keyword\">from</span> pypdf <span class=\"keyword\">import</span> PdfReader</span><br><span class=\"line\"><span class=\"keyword\">from</span> redis.commands.search.field <span class=\"keyword\">import</span> TextField, VectorField</span><br><span class=\"line\"><span class=\"keyword\">from</span> redis.commands.search.indexDefinition <span class=\"keyword\">import</span> IndexDefinition, IndexType</span><br><span class=\"line\"><span class=\"keyword\">from</span> redis.commands.search.query <span class=\"keyword\">import</span> Query</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> redis</span><br><span class=\"line\"></span><br><span class=\"line\">INDEX_NAME = <span class=\"string\">&quot;embeddings-index&quot;</span>           <span class=\"comment\"># name of the search index</span></span><br><span class=\"line\">PREFIX = <span class=\"string\">&quot;doc&quot;</span>                            <span class=\"comment\"># prefix for the document keys</span></span><br><span class=\"line\"><span class=\"comment\"># distance metric for the vectors (ex. COSINE, IP, L2)</span></span><br><span class=\"line\">DISTANCE_METRIC = <span class=\"string\">&quot;COSINE&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">REDIS_HOST = <span class=\"string\">&quot;localhost&quot;</span></span><br><span class=\"line\">REDIS_PORT = <span class=\"number\">6379</span></span><br><span class=\"line\">REDIS_PASSWORD = <span class=\"string\">&quot;&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DataService</span>():</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># Connect to Redis</span></span><br><span class=\"line\">        self.redis_client = redis.Redis(</span><br><span class=\"line\">            host=REDIS_HOST,</span><br><span class=\"line\">            port=REDIS_PORT,</span><br><span class=\"line\">            password=REDIS_PASSWORD</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">drop_redis_data</span>(<span class=\"params\">self, index_name: <span class=\"built_in\">str</span> = INDEX_NAME</span>):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            self.redis_client.ft(index_name).dropindex()</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Index dropped&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"comment\"># Index doees not exist</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Index does not exist&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">load_data_to_redis</span>(<span class=\"params\">self, embeddings</span>):</span><br><span class=\"line\">        <span class=\"comment\"># Constants</span></span><br><span class=\"line\">        vector_dim = <span class=\"built_in\">len</span>(embeddings[<span class=\"number\">0</span>][<span class=\"string\">&#x27;vector&#x27;</span>])  <span class=\"comment\"># length of the vectors</span></span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\"># Initial number of vectors</span></span><br><span class=\"line\">        vector_number = <span class=\"built_in\">len</span>(embeddings)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Define RediSearch fields</span></span><br><span class=\"line\">        text = TextField(name=<span class=\"string\">&quot;text&quot;</span>)</span><br><span class=\"line\">        text_embedding = VectorField(<span class=\"string\">&quot;vector&quot;</span>,</span><br><span class=\"line\">                                     <span class=\"string\">&quot;FLAT&quot;</span>, &#123;</span><br><span class=\"line\">                                         <span class=\"string\">&quot;TYPE&quot;</span>: <span class=\"string\">&quot;FLOAT32&quot;</span>,</span><br><span class=\"line\">                                         <span class=\"string\">&quot;DIM&quot;</span>: vector_dim,</span><br><span class=\"line\">                                         <span class=\"string\">&quot;DISTANCE_METRIC&quot;</span>: <span class=\"string\">&quot;COSINE&quot;</span>,</span><br><span class=\"line\">                                         <span class=\"string\">&quot;INITIAL_CAP&quot;</span>: vector_number,</span><br><span class=\"line\">                                     &#125;</span><br><span class=\"line\">                                     )</span><br><span class=\"line\">        fields = [text, text_embedding]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Check if index exists</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            self.redis_client.ft(INDEX_NAME).info()</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Index already exists&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"comment\"># Create RediSearch Index</span></span><br><span class=\"line\">            self.redis_client.ft(INDEX_NAME).create_index(</span><br><span class=\"line\">                fields=fields,</span><br><span class=\"line\">                definition=IndexDefinition(</span><br><span class=\"line\">                    prefix=[PREFIX], index_type=IndexType.HASH)</span><br><span class=\"line\">            )</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> embedding <span class=\"keyword\">in</span> embeddings:</span><br><span class=\"line\">            key = <span class=\"string\">f&quot;<span class=\"subst\">&#123;PREFIX&#125;</span>:<span class=\"subst\">&#123;<span class=\"built_in\">str</span>(embedding[<span class=\"string\">&#x27;id&#x27;</span>])&#125;</span>&quot;</span></span><br><span class=\"line\">            embedding[<span class=\"string\">&quot;vector&quot;</span>] = np.array(</span><br><span class=\"line\">                embedding[<span class=\"string\">&quot;vector&quot;</span>], dtype=np.float32).tobytes()</span><br><span class=\"line\">            self.redis_client.hset(key, mapping=embedding)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(</span><br><span class=\"line\">            <span class=\"string\">f&quot;Loaded <span class=\"subst\">&#123;self.redis_client.info()[<span class=\"string\">&#x27;db0&#x27;</span>][<span class=\"string\">&#x27;keys&#x27;</span>]&#125;</span> documents in Redis search index with name: <span class=\"subst\">&#123;INDEX_NAME&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">pdf_to_embeddings</span>(<span class=\"params\">self, pdf_path: <span class=\"built_in\">str</span>, chunk_length: <span class=\"built_in\">int</span> = <span class=\"number\">1000</span></span>):</span><br><span class=\"line\">        <span class=\"comment\"># Read data from pdf file and split it into chunks</span></span><br><span class=\"line\">        reader = PdfReader(pdf_path)</span><br><span class=\"line\">        chunks = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> reader.pages:</span><br><span class=\"line\">            text_page = page.extract_text()</span><br><span class=\"line\">            chunks.extend([text_page[i:i+chunk_length].replace(<span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">                          <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(text_page), chunk_length)])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Create embeddings</span></span><br><span class=\"line\">        response = client.embeddings.create(model=<span class=\"string\">&#x27;text-embedding-ada-002&#x27;</span>, <span class=\"built_in\">input</span>=chunks)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [&#123;<span class=\"string\">&#x27;id&#x27;</span>: value.index, <span class=\"string\">&#x27;vector&#x27;</span>:value.embedding, <span class=\"string\">&#x27;text&#x27;</span>:chunks[value.index]&#125; <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> response.data]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">search_redis</span>(<span class=\"params\">self,</span></span><br><span class=\"line\"><span class=\"params\">                     user_query: <span class=\"built_in\">str</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     index_name: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;embeddings-index&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     vector_field: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;vector&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     return_fields: <span class=\"built_in\">list</span> = [<span class=\"string\">&quot;text&quot;</span>, <span class=\"string\">&quot;vector_score&quot;</span>],</span></span><br><span class=\"line\"><span class=\"params\">                     hybrid_fields=<span class=\"string\">&quot;*&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     k: <span class=\"built_in\">int</span> = <span class=\"number\">5</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     print_results: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">                     </span>):</span><br><span class=\"line\">        <span class=\"comment\"># Creates embedding vector from user query</span></span><br><span class=\"line\">        embedded_query = client.embeddings.create(<span class=\"built_in\">input</span>=user_query,</span><br><span class=\"line\">                                                 model=<span class=\"string\">&quot;text-embedding-ada-002&quot;</span>).data[<span class=\"number\">0</span>].embedding</span><br><span class=\"line\">        <span class=\"comment\"># Prepare the Query</span></span><br><span class=\"line\">        base_query = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;hybrid_fields&#125;</span>=&gt;[KNN <span class=\"subst\">&#123;k&#125;</span> @<span class=\"subst\">&#123;vector_field&#125;</span> $vector AS vector_score]&#x27;</span></span><br><span class=\"line\">        query = (</span><br><span class=\"line\">            Query(base_query)</span><br><span class=\"line\">            .return_fields(*return_fields)</span><br><span class=\"line\">            .sort_by(<span class=\"string\">&quot;vector_score&quot;</span>)</span><br><span class=\"line\">            .paging(<span class=\"number\">0</span>, k)</span><br><span class=\"line\">            .dialect(<span class=\"number\">2</span>)</span><br><span class=\"line\">        )</span><br><span class=\"line\">        params_dict = &#123;<span class=\"string\">&quot;vector&quot;</span>: np.array(</span><br><span class=\"line\">            embedded_query).astype(dtype=np.float32).tobytes()&#125;</span><br><span class=\"line\">        <span class=\"comment\"># perform vector search</span></span><br><span class=\"line\">        results = self.redis_client.ft(index_name).search(query, params_dict)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> print_results:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i, doc <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(results.docs):</span><br><span class=\"line\">                score = <span class=\"number\">1</span> - <span class=\"built_in\">float</span>(doc.vector_score)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;i&#125;</span>. <span class=\"subst\">&#123;doc.text&#125;</span> (Score: <span class=\"subst\">&#123;<span class=\"built_in\">round</span>(score ,<span class=\"number\">3</span>) &#125;</span>)&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [doc[<span class=\"string\">&#x27;text&#x27;</span>] <span class=\"keyword\">for</span> doc <span class=\"keyword\">in</span> results.docs]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>响应服务</p>\n<p>该服务将使用信息检索服务的输出，并从中生成用户所提问题的答案。</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openai <span class=\"keyword\">import</span> OpenAI</span><br><span class=\"line\"></span><br><span class=\"line\">client = OpenAI()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">IntentService</span>():</span><br><span class=\"line\">     <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"keyword\">def</span> <span class=\"title function_\">get_intent</span>(<span class=\"params\">self, user_question: <span class=\"built_in\">str</span></span>):</span><br><span class=\"line\">         <span class=\"comment\"># call the openai ChatCompletion endpoint</span></span><br><span class=\"line\">         response = client.chat.completions.create(model=<span class=\"string\">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class=\"line\">         messages=[</span><br><span class=\"line\">               &#123;<span class=\"string\">&quot;role&quot;</span>: <span class=\"string\">&quot;user&quot;</span>, <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">f&#x27;Extract the keywords from the following question: <span class=\"subst\">&#123;user_question&#125;</span>&#x27;</span>+</span><br><span class=\"line\">                 <span class=\"string\">&#x27;Do not answer anything else, only the keywords.&#x27;</span>&#125;</span><br><span class=\"line\">            ])</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"comment\"># extract the response</span></span><br><span class=\"line\">         <span class=\"keyword\">return</span> (response.choices[<span class=\"number\">0</span>].message.content)</span><br></pre></td></tr></table></figure>\n<p>整合所有内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> dotenv <span class=\"keyword\">import</span> load_dotenv</span><br><span class=\"line\"></span><br><span class=\"line\">load_dotenv()</span><br><span class=\"line\"><span class=\"keyword\">from</span> intentservice <span class=\"keyword\">import</span> IntentService</span><br><span class=\"line\"><span class=\"keyword\">from</span> responseservice <span class=\"keyword\">import</span> ResponseService</span><br><span class=\"line\"><span class=\"keyword\">from</span> dataservice <span class=\"keyword\">import</span> DataService</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Example pdf</span></span><br><span class=\"line\">pdf = <span class=\"string\">&#x27;files/ExplorersGuide.pdf&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">data_service = DataService()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Drop all data from redis if needed</span></span><br><span class=\"line\">data_service.drop_redis_data()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Load data from pdf to redis</span></span><br><span class=\"line\">data = data_service.pdf_to_embeddings(pdf)</span><br><span class=\"line\"></span><br><span class=\"line\">data_service.load_data_to_redis(data)</span><br><span class=\"line\"></span><br><span class=\"line\">intent_service = IntentService()</span><br><span class=\"line\">response_service = ResponseService()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Question </span></span><br><span class=\"line\">question = <span class=\"string\">&#x27;Where to find treasure chests?&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># Get the intent</span></span><br><span class=\"line\">intents = intent_service.get_intent(question)</span><br><span class=\"line\"><span class=\"comment\"># Get the facts</span></span><br><span class=\"line\">facts = data_service.search_redis(intents)</span><br><span class=\"line\"><span class=\"comment\"># Get the answer</span></span><br><span class=\"line\">answer = response_service.generate_response(facts, question)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(answer)</span><br></pre></td></tr></table></figure>\n<h2 id=\"41-提示工程\"><a class=\"markdownIt-Anchor\" href=\"#41-提示工程\"></a> 4.1 提示工程</h2>\n<h4 id=\"411-设计有效的提示词\"><a class=\"markdownIt-Anchor\" href=\"#411-设计有效的提示词\"></a> 4.1.1 设计有效的提示词</h4>\n<p>通过提示词，可以完成摘要、文本分类、情感分析和问题回答等任务。在这些任务中，通常需要在提示词中定义三大要素：角色，上下文和任务。</p>\n<h5 id=\"上下文\"><a class=\"markdownIt-Anchor\" href=\"#上下文\"></a> 上下文</h5>\n<p>上下文通过引导GPT模型进行思考来使其输出更有价值的回答。构建良好上下文的提示词是一个迭代过程，通常需要试错。为了找到可改进之处，可以请GPT提些意见。</p>\n<h5 id=\"任务\"><a class=\"markdownIt-Anchor\" href=\"#任务\"></a> 任务</h5>\n<p>任务定义了对GPT模型的用法，并且应该明确且具体。应该提供足够的任务信息，并在提示词中使用合适的短语来引导模型给出你所期望的结果。</p>\n<h5 id=\"角色\"><a class=\"markdownIt-Anchor\" href=\"#角色\"></a> 角色</h5>\n<p>在撰写提示词时，影响模型的最后一种方式是赋予其一个角色。角色和上下文可以独立使用，但同时使用可以加强对模型输出的控制。</p>\n<h4 id=\"412-逐步思考\"><a class=\"markdownIt-Anchor\" href=\"#412-逐步思考\"></a> 4.1.2 逐步思考</h4>\n<p>在提示词的末尾添加“让我们逐步思考”这样的话，已被证明可以使模型解决更复杂的推理问题。这种技术称为零样本思维链策略。论文“Large Language Models are Zero-Shot Reasoners”作者发现，这个技巧对于多步算术问题、涉及符号推理的问题、涉及策略的问题和其他涉及推理的问题十分有效。</p>\n<h4 id=\"413-实现少样本学习\"><a class=\"markdownIt-Anchor\" href=\"#413-实现少样本学习\"></a> 4.1.3 实现少样本学习</h4>\n<p>少样本学习是由Tom B. Brown等人在论文“Language Models Are Few-Shot Learners”中提出的，它指的是LLM仅通过提示词中的几个示例就能进行概括并给出有价值的结果</p>\n<h3 id=\"414-改善提示效果\"><a class=\"markdownIt-Anchor\" href=\"#414-改善提示效果\"></a> 4.1.4 改善提示效果</h3>\n<h5 id=\"指示模型提出更多的问题\"><a class=\"markdownIt-Anchor\" href=\"#指示模型提出更多的问题\"></a> 指示模型提出更多的问题</h5>\n<p>在提示词的末尾，询问模型是否理解问题并指示模型提出更多问题。</p>\n<h5 id=\"格式化输出\"><a class=\"markdownIt-Anchor\" href=\"#格式化输出\"></a> 格式化输出</h5>\n<h5 id=\"重复指示\"><a class=\"markdownIt-Anchor\" href=\"#重复指示\"></a> 重复指示</h5>\n<h5 id=\"使用负面提示\"><a class=\"markdownIt-Anchor\" href=\"#使用负面提示\"></a> 使用负面提示</h5>\n<h5 id=\"添加长度限制\"><a class=\"markdownIt-Anchor\" href=\"#添加长度限制\"></a> 添加长度限制</h5>\n<h2 id=\"42-微调\"><a class=\"markdownIt-Anchor\" href=\"#42-微调\"></a> 4.2 微调</h2>\n<p>微调就是使用特定领域的数据集来更新现有GPT模型的内部权重。微调的目标是使新模型能够在特定领域中做出比原始GPT模型更好的预测。即针对特定任务在一组数据上重新训练现有模型，以提高模型的性能并使其回答更准确。在微调过程中，模型的内部参数得到更新。</p>\n<p>准备好训练数据后，需要将其上传到OpenAI服务器。OpenAI 提供了不同的函数来操作文件。</p>\n<ul>\n<li>\n<p>上传文件</p>\n<p>openai.File.crate(</p>\n<p>​\tfile=open(&quot;out_openai_completion_prepared.jsonl&quot;, &quot;rb&quot;),</p>\n<p>​\tpurpose='file-tune'</p>\n<p>)</p>\n</li>\n<li>\n<p>删除文件</p>\n<p>openai.File.delete(&quot;file-&quot;)</p>\n</li>\n<li>\n<p>列出所有已上传的文件</p>\n<p>openai.File.list()</p>\n</li>\n<li>\n<p>列出微调作业</p>\n<p>openai.FineTun.list()</p>\n</li>\n<li>\n<p>取消微调作业</p>\n<p>openai.FineTune.cancel()</p>\n</li>\n</ul>\n<h3 id=\"openaifinetunecreate的一些输入参数具体可查询openai网站\"><a class=\"markdownIt-Anchor\" href=\"#openaifinetunecreate的一些输入参数具体可查询openai网站\"></a> openai.FineTune.create的一些输入参数（具体可查询OpenAI网站）</h3>\n<ul>\n<li>training_file</li>\n<li>modle</li>\n<li>validation_file</li>\n<li>suffix</li>\n</ul>\n","categories":["Research"],"tags":["LLM"]},{"title":"《多模态大模型技术原理与实践》学习笔记","url":"/2025/07/19/%E3%80%8A%E5%A4%9A%E6%A8%A1%E6%80%81%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<ul>\r\n<li>大模型的核心特征是“大数据、大算力和大参数量”</li>\r\n</ul>\r\n<p>自然语言处理主要有两类任务：一类是自然语言理解，另一类是自然语言生成</p>\r\n<p>深度学习期的里程碑论文：</p>\r\n<ul>\r\n<li>Reducing the Dimensionality of Data with Neural Networks</li>\r\n</ul>\r\n<p>此文掀起了深度学习在自然语言处理领域飞速发展的浪潮。主要提出了三个观点：第一是多层神经网络能够挖掘更多隐含信息；第二是多层神经网络能够有效地实现特征工程的自动化；第三是可以通过逐层初始化的预训练方式解决多层神经网络训练的难题。</p>\r\n<ul>\r\n<li>A Unified Architecture for Natural Language Processing: Deep Neural\r\nNetworks with Multitask Learning</li>\r\n</ul>\r\n<p>该文中提出了将词向量作为深层神经网络的目标任务，打开了词向量表征技术的大门。简单来说，词向量技术就是一种特殊的特征提取技术，将词从稀疏空间通过隐藏层投影到低维度的稠密向量空间中，语义相近的词在较低维向量空间中距离也相近，不仅有效解决了矩阵稀疏问题，还实现了特征的自动提取。</p>\r\n<ul>\r\n<li>Efficient Estimation of Word Representations in Vector Space</li>\r\n</ul>\r\n<p>文中提出了比较经典的Word2vec词向量表征方法，该方法包含两种词向量表征模型，分表示连续词袋模型CBOW（通过目标词上下文的词预测目标词）和Skip-gram（通过目标词预测其附近的词）。</p>\r\n<p>随后，在自然语言处理领域中，学者们又陆续提出了其他典型的词向量表征模型，比如Glove和ELMo\r\n。</p>\r\n<p>BERT模型采用的是双向Transformer的编码器，能获取上下文信息，适合做自然语言理解，而GPT采用的是单项Transformer的解码器，更适合自然语言生成的应用场景。</p>\r\n<ul>\r\n<li>BERT: Pretraining of Deep Bidirectional Transformers for Language\r\nUnderstanding</li>\r\n</ul>\r\n<p>BERT模型获得成功，行业学者和专家们也总结出提高自然语言处理效果的3个方向。</p>\r\n<ol type=\"1\">\r\n<li>BERT大模型的效果显著优于BERT模型的效果，因此增加深度学习的层数，增加参数量成为行业优化的一个方向</li>\r\n<li>预训练模型和微调机制的结合也成为优化自然语言处理效果的一个方向</li>\r\n<li>多任务学习也成为一个重要的方向，有助于数据互相挖掘，从而带来模型效果的提高</li>\r\n</ol>\r\n<p>InstructGPT模型的构建流程</p>\r\n<ul>\r\n<li>Training Language Models to Follow Instructions with Human\r\nFeedback</li>\r\n</ul>\r\n<p>InstrcutGPT 和 ChatGPT 的差异</p>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 14%\" />\r\n<col style=\"width: 28%\" />\r\n<col style=\"width: 57%\" />\r\n</colgroup>\r\n<thead>\r\n<tr>\r\n<th>模型</th>\r\n<th>InstructGPT</th>\r\n<th>ChatGPT</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>底座模型</td>\r\n<td>GPT-3.0</td>\r\n<td>GPT-3.5</td>\r\n</tr>\r\n<tr>\r\n<td>数据集</td>\r\n<td>指令数据集</td>\r\n<td>人工交互标注数据+指令数据集，最后转化为对话数据集</td>\r\n</tr>\r\n<tr>\r\n<td>应用场景</td>\r\n<td>更适合指令型文本生成任务</td>\r\n<td>更适合对话型文本生成任务</td>\r\n</tr>\r\n<tr>\r\n<td>推理能力</td>\r\n<td>中</td>\r\n<td>较强</td>\r\n</tr>\r\n<tr>\r\n<td>代码生成能力</td>\r\n<td>弱</td>\r\n<td>较强</td>\r\n</tr>\r\n<tr>\r\n<td>泛化能力</td>\r\n<td>中</td>\r\n<td>较强</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","categories":["Research"],"tags":["LLM"]}]